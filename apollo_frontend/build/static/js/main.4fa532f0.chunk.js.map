{"version":3,"sources":["containers/GlobalMisc/Tracking.js","backend-urls.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Layout/NavigationBar.js","containers/Layout/Footer.js","hoc/hoc.js","containers/GlobalMisc/TwitterLogo.js","containers/GlobalMisc/RedditLogo.js","containers/GlobalMisc/LinkedInLogo.js","containers/GlobalMisc/EmailLogo.js","containers/GlobalMisc/RichText.js","containers/GlobalMisc/LoaderSpinner.js","containers/GlobalMisc/ButtonLoaderSpinner.js","containers/Blog/Misc/RegisterEmail.js","containers/Blog/Misc/CommentUpvote.js","containers/Blog/Misc/CommentDownvote.js","containers/Blog/Misc/ArticleComment.js","containers/Blog/Misc/CommentSection.js","containers/Blog/Misc/ArticleUpvote.js","containers/Blog/Misc/ArticleDownvote.js","containers/Blog/ArticlePage.js","containers/Blog/Misc/PinnedArticle.js","containers/Blog/Home.js","containers/Blog/StoreLandingPage.js","containers/Admin/CreateArticle.js","containers/Admin/Misc/SendEmail.js","containers/Account/Login.js","containers/Account/Signup.js","containers/Account/Misc/ChangePassword.js","containers/Account/Misc/UserInformation.js","containers/Account/Misc/UserEmailPreferences.js","containers/Account/Misc/UserArticleInteractions.js","containers/Admin/AdminCard.js","containers/Account/Profile.js","containers/Account/ForgotPassword.js","containers/Account/SetNewPassword.js","containers/Careers.js","containers/Account/VerifyEmail.js","routes.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["PageView","ReactGA","pageview","window","location","pathname","search","Event","category","action","label","event","article_url","id","endpoint","comments_url","article_id","remove_comment_upvote_url","upvote","get_comment_upvotes_url","comment_id","remove_comment_downvote_url","downvote","get_comment_downvotes_url","remove_article_upvote_url","get_article_upvotes_url","remove_article_downvote_url","get_article_downvotes_url","get_user_article_upvotes_url","user_id","get_user_article_downvotes_url","get_user_comment_upvotes_url","get_user_comment_downvotes_url","get_user_read_article_url","verify_email_url","get_user_email_preferences_url","update_user_email_preferences_url","preference_id","authSuccess","token","username","success_message","type","authFail","error","checkAuthTimeout","expirationTime","dispatch","setTimeout","NavigationBar","handleHomeButtonClickWithGA","props","history","push","handleLogoutClickWithGA","logout","this","authenticated","loading","Fragment","Navbar","expand","className","Container","Brand","onClick","style","cursor","Toggle","aria-controls","Collapse","Text","Nav","Link","href","React","Component","withRouter","connect","state","auth","localStorage","removeItem","Footer","sticky","Date","getFullYear","Item","Hoc","children","TwitterLogo","width","height","class","d","RedditLogo","LinkedInLogo","EmailLogo","RichText","classes","dangerouslySetInnerHTML","__html","text","LoaderSpinner","Spinner","animation","role","position","left","top","ButtonLoaderSpinner","CommentUpvote","upvoted","upvote_id","number_of_upvotes","upvotes","handleGetUpvotes","axios","get","then","response","data","forEach","user","parseInt","setState","length","catch","console","log","handleRemoveUpvote","auth_token","delete","headers","Authorization","comment_upvoted","handleCreateUpvote","upvote_data","FormData","append","post","code","handleUpvoteClickWithGA","handleUpvoteClick","alert","comment_downvoted","Badge","size","CommentDownvote","downvoted","downvote_id","number_of_downvotes","downvotes","handleGetDownvotes","handleRemoveDownvote","handleCreateDownvote","downvote_data","handleDownvoteClickWithGA","handleDownvoteClick","ArticleComment","handleCommentUpvoteClick","value","handleCommentDownvoteClick","comment","author","Card","Body","Title","Subtitle","created_date","toDateString","body","CommentSection","submit_button_loading","commenter_name","comment_body","comment_submitted","comments","handleGetComments","handleCommentBody","handlePostCommentWithGA","handlePostComment","comment_data","handleValidateComment","map","Alert","variant","Form","Row","Col","placeholder","onChange","Button","disabled","ArticleUpvote","article_upvoted","article_downvoted","ArticleDownvote","ArticlePage","article_data","window_width","handleGetArticle","match","params","handleCreateUserReadArticle","user_read_article_data","getItem","handleArticleUpvoteClick","handleArticleDownvoteClick","addEventListener","updateWindowDimensions","bind","innerWidth","innerHeight","article_date","apollo_div","document","getElementById","getElementsByTagName","onscroll","e","documentElement","scrollTop","classList","add","remove","twitter_link","reddit_link","email_link","linkedin_link","lg","ListGroup","target","to","md","PinnedArticle","pinned_article","title","color","Home","articles","handleGetArticles","pinned","substring","article","StoreLandingPage","email","email_submitted","handlePostEmailWithGA","handlePostEmail","handleEmailValidated","email_length_more_than_four","email_contains_at","includes","email_contains_period","handleEmail","xs","span","offset","Label","htmlFor","srOnly","Control","CreateArticle","article_submitted","countdown","handleTitle","handleBody","submitForm","s","handleValidated","modules","toolbar","formats","as","required","theme","http-equiv","content","SendEmail","email_option","subject","recipient","email_preferences_options","handleGetEmailPreferencesOptions","Object","keys","handleSubject","handleChangeRecipients","option","email_data","prevProps","entries","key","key_with_spaces","replace","key_with_spaces_and_capitalized","charAt","toUpperCase","Login","password","handleUsername","handlePassword","validateForm","handleSubmit","preventDefault","login","onSubmit","FormGroup","controlId","bsSize","FormControl","autoFocus","block","res","expirationDate","getTime","setItem","err","authLogin","Signup","confirm_password","passwords_match","handleConfirmPassword","email_valid","username_valid","password_valid","confirm_password_valid","signup","errors","password1","password2","authSignup","ChangePassword","old_password","new_password1","new_password2","reset_password","handleOldPassword","handleChangePasswordWithGA","handleChangePassword","password_data","values","detail","Group","UserInformation","account_info","handleGetAccount","erorr","sm","changed_prefs_data","UserEmailPreferences","updated","update_loading","email_preferences","prefs_edited","handleGetUserEmailPreferences","handleInputChange","checked","name","handleUpdatePreferencesWithGA","handleUpdatePreferences","put","Check","bsPrefix","UserArticleInteractions","article_upvotes","article_downvotes","comment_upvotes","comment_downvotes","articles_read","handleGetUserArticleUpvotes","handleGetUserArticleDownvotes","handleGetUserCommentUpvotes","handleGetUserCommentDownvotes","handleGetUserReadArticle","AdminCard","onclick","Profile","handleProfileInfo","selected_button","Heading","ForgotPassword","message","handleSubmitWithGA","SetNewPassword","uid","Careers","VerifyEmail","email_confirmed","handlePostAccountKey","BaseRouter","exact","path","component","App","trackingID","checkState","initialize","isAuthenticated","undefined","Boolean","hostname","updateObject","oldObject","updatedProperties","initialState","authStart","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4fa532f0.chunk.js","sourcesContent":["\nimport ReactGA from \"react-ga\";\n\n\n\n\nexport const initGA = (trackingID) => {\n   ReactGA.initialize(trackingID);\n}\n\n\nexport const PageView = () => {\n    ReactGA.pageview(window.location.pathname +\n                     window.location.search);\n}\n\n\n\n/**\n * Event - Add custom tracking event.\n * @param {string} category\n * @param {string} action\n * @param {string} label\n */\nexport const Event = (category, action, label) => {\n  ReactGA.event({\n    category: category,\n    action: action,\n    label: label\n  });\n};\n","\n\n//export const endpoint_without_api = `http://127.0.0.1:8000/` ;\n// export const endpoint = `http://127.0.0.1:8000/api/`;\nexport const endpoint = `/api/`;\n\n\n\nexport const all_articles_url =     endpoint+`all-articles/` ;\nexport const article_url = (id) =>  endpoint+`article/`+id+`/` ;\n\nexport const create_article_url = endpoint+ `create-article/` ;\nexport const create_email_address_url = endpoint+ `create-email-address/` ;\n\nexport const create_promotional_email_url = endpoint+'create-promotional-email/'\n\nexport const create_comment_url = endpoint+'create-comment/' ;\n\nexport const login_url = endpoint+`login/`;\nexport const signup_url = endpoint+`signup/` ;\n\nexport const comments_url = (article_id) => endpoint+`comment/`+ article_id ;\nexport const create_comment_upvote_url = endpoint+`create-comment-upvote/` ;\nexport const remove_comment_upvote_url = (upvote) => endpoint+`remove-comment-upvote/` + upvote ;\nexport const get_comment_upvotes_url = (comment_id) => endpoint+'comment-upvote/' + comment_id + '/';\n\nexport const create_comment_downvote_url = endpoint+`create-comment-downvote/` ;\nexport const remove_comment_downvote_url = (downvote) => endpoint+`remove-comment-downvote/` + downvote ;\nexport const get_comment_downvotes_url = (comment_id) => endpoint+'comment-downvote/' + comment_id + '/';\n\n\nexport const create_article_upvote_url = endpoint+`create-article-upvote/` ;\nexport const remove_article_upvote_url = (upvote) => endpoint+`remove-article-upvote/` + upvote ;\nexport const get_article_upvotes_url = (article_id) => endpoint+'article-upvote/' + article_id + '/';\n\nexport const create_article_downvote_url = endpoint+`create-article-downvote/` ;\nexport const remove_article_downvote_url = (downvote) => endpoint+`remove-article-downvote/` + downvote ;\nexport const get_article_downvotes_url = (article_id) => endpoint+'article-downvote/' + article_id + '/';\n\nexport const get_user_details_url = endpoint+`user-details/` ;\nexport const get_user_article_upvotes_url = (user_id) => endpoint + 'user-article-upvote/' + user_id + '/' ;\nexport const get_user_article_downvotes_url = (user_id) => endpoint + 'user-article-downvote/' + user_id + '/' ;\nexport const get_user_comment_upvotes_url = (user_id) => endpoint + 'user-comment-upvote/' + user_id + '/' ;\nexport const get_user_comment_downvotes_url = (user_id) => endpoint + 'user-comment-downvote/' + user_id + '/' ;\n\n\nexport const create_user_read_article_url = endpoint+`create-user-read-article/` ;\nexport const get_user_read_article_url = (user_id) => endpoint+`user-read-article/`+user_id+'/' ;\n\n\nexport const reset_password_url = endpoint+`password-reset/`;\n\n\n\n\nexport const set_new_password_url = `http://127.0.0.1:8000/rest-auth/password/reset/confirm/` ;\n\nexport const get_user_info_url =  `http://127.0.0.1:8000/rest-auth/user/` ;\n\nexport const change_password_url =  `http://127.0.0.1:8000/password-change/` ;\n\nexport const verify_email_url =  `http://127.0.0.1:8000/rest-auth/registration/verify-email/` ;\n\n\n\n\n\n\nexport const get_user_email_preferences_url = (user_id) => endpoint + 'user-email-preferences/' + user_id + '/' ;\n\nexport const update_user_email_preferences_url = (preference_id) => endpoint + 'update-user-email-preferences/' + preference_id + '/' ;\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport {\n    signup_url ,\n    login_url ,\n    update_user_email_preferences_url ,\n    create_user_email_preferences_url ,\n\n} from '../../backend-urls' ;\nimport { Event, PageView, initGA} from '../../containers/GlobalMisc/Tracking';\n\n// import {\n//   mergeCartOnLogin,\n//   removeCartOnLogout,\n// } from \"./cart\";\n\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token , username , user_id, success_message) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username : username,\n    user_id : user_id ,\n    success_message : success_message ,\n  };\n};\n\nexport const authFail = error => {\n  return {\n    success_message : null ,\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(login_url, {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.key;\n        const user_id = res.data.user_id;\n\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n\n        localStorage.setItem(\"user_id\", user_id);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        Event(\"Login\" , \"Login SUCCESS\" , \"Login SUCCESS\") ;\n\n        dispatch(authSuccess(token , username , user_id));\n        dispatch(checkAuthTimeout(10000));\n\n        //merges the cart when the user logs in. mergeCartOnLogin is located in actions/cart.js\n        // dispatch( mergeCartOnLogin(token) )\n\n      })\n      .catch(err => {\n        console.log(\"error logging in: \" )\n        console.log(err.response.data)\n        // console.log(err.response.data.non_field_errors)\n        Event(\"Login\" , \"Login FAIL\" , \"Login FAIL\") ;\n        dispatch(authFail(err.response.data));\n      });\n  };\n};\n\n\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n\n    dispatch(authStart());\n    axios\n      .post(signup_url, {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2\n      })\n      .then(res => {\n\n        /***\n        *\n        *COMMENTED THIS OUT BECAUSE THE BACKEND DOESN'T WANT YOU TO SIGN IN AUTOMATICALLY AFTER ACCOUNT CREATION.\n        * ie. user has to confirm their email address before they're able to sign in\n        *\n        */\n        // console.log(\"response data from creating user object object vv\")\n        // console.log(res.data)\n        // const auth_token = 'Token ' + res.data.key;\n        // console.log(\"auth_token : \" + auth_token )\n        // const user_id = res.data.user;\n        // console.log(\"user_id : \" + user_id )\n        // var changed_prefs_data = { \"user_id\" : user_id}\n        // axios\n        //   .put( update_user_email_preferences_url( user_id ) , changed_prefs_data ,\n        //       {\n        //         headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        //       }\n        //     )\n        //   .then(response => {\n        //     console.log(\"response data from creating email_preferenes object vv\")\n        //     console.log(response)\n        //     console.log(response.data)\n        //     // this.setState({\n        //     //   loading : false ,\n        //     //   updated : true ,\n        //     //   update_loading : false\n        //     // })\n        //     // Event(\"Change Email Preferences\", \"Submit New Email Preferences SUCCESS\", \"From Profile Page\") ;\n        //   })\n        //   .catch(error => {\n        //     console.log(\"error vv \")\n        //     console.log(error)\n        //     // this.setState({\n        //     //   loading : false ,\n        //     //   error : error.data ,\n        //     //   update_loading : false\n        //     // })\n        //     // Event(\"Change Email Preferences\", \"Submit New Email Preferences FAIL\", \"From Profile Page\") ;\n        //   })\n\n\n\n        // console.log(\"res.data.user; user_id -> \" + res.data.user + \" ; \" + user_id )\n        // const expirationDate = new Date(new Date().getTime() + 86400 * 1000);\n        // localStorage.setItem(\"user_id\", user_id);\n        // localStorage.setItem(\"username\", username);\n        // localStorage.setItem(\"token\", token);\n        // localStorage.setItem(\"expirationDate\", expirationDate);\n        Event(\"Signup\" , \"Signup SUCCESS\" , \"Signup SUCCESS\") ;\n        dispatch(authSuccess(null , null , null , res.data));\n        dispatch(checkAuthTimeout(3600));\n\n      })\n      .catch(err => {\n        console.log(\"err: \" + err)\n        console.log(\"err.data: \" + err.data) ;\n\n        Event(\"Signup\" , \"Signup FAIL\" , \"Signup FAIL: \" + err) ;\n        dispatch(authFail(err));\n      });\n  };\n};\n\n//added username to the authSuccess part and in the parameters of the function on 11/5/19\nexport const authCheckState = (username) => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    const user_id = localStorage.getItem(\"user_id\") ;\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token , username , user_id));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n\n\n\n\nexport const logoutUser = () => {\n    return dispatch => {\n      //removes the user token, expiration date, staff status, and username from local storage\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"expirationDate\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"staff\");\n      localStorage.removeItem(\"user_id\");\n      Event(\"Logout\" , \"Logout SUCESS\" , \"Logout SUCESS\") ;\n\n      dispatch( logout() )\n    }\n}\n\n\n\n\n//deprecated (from other apollo code)\nexport const logoutRemoveCart = () => {\n  const token = localStorage.getItem('token')\n  //removes the token and expiration date from local storage\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n\n  console.log('TOKEN: ', token)\n  return dispatch => {\n    //calls removeCartOnLogout() from actions/cart.js\n    // dispatch( removeCartOnLogout(token) )\n    dispatch( logout() )\n  }\n}\n","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\n\nexport const EMAIL_START = \"EMAIL_START\" ;\nexport const EMAIL_SUCCESS = \"EMAIL_SUCCESS\";\nexport const EMAIL_FAIL = \"EMAIL_FAIL\";\nexport const EMAIL_LOGOUT = \"EMAIL_LOGOUT\";\n","import React from \"react\" ;\nimport {withRouter} from 'react-router';\nimport {\n  Navbar ,\n  Nav ,\n  Container ,\n\n} from 'react-bootstrap';\nimport { Event } from \"../GlobalMisc/Tracking\";\n\nimport { connect } from \"react-redux\";\nimport {\n  logoutUser ,\n\n} from \"../../store/actions/auth\";\n\n\nclass NavigationBar extends React.Component {\n\n  handleHomeButtonClickWithGA = () => {\n    this.props.history.push('/') ;\n    Event(\"Routing\", \"Opening Home Page\", \"From Navbar\")\n  }\n\n  handleLogoutClickWithGA = () => {\n    this.props.history.push('/') ;\n    this.props.logout()\n    Event(\"Logout\", \"Logging out\", \"From Navbar\"  )\n  }\n\n\n\n  render(){\n    const { error, loading , authenticated , username } = this.props;\n\n    return (\n      <React.Fragment >\n        <Navbar expand=\"lg\" className=\"bg-navbar\">\n          <Container >\n            <Navbar.Brand\n              onClick={this.handleHomeButtonClickWithGA   }\n              style={{cursor: 'pointer'}}\n            >\n              <h4 className=\"ubuntu-regular-font\">\n                Apollo\n              </h4>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse className=\"justify-content-end \" id=\"basic-navbar-nav\">\n              {\n                authenticated ?\n                  <React.Fragment>\n                    <Navbar.Text>\n                      <Nav.Link\n                        href=\"/profile\"\n                        onClick={() => Event(\"Routing\", \"Opening Profile Page\",  \"From Navbar\")}\n                        className=\"ubuntu-regular-font\"\n                      >\n                        Hello, {username}!\n                      </Nav.Link>\n                    </Navbar.Text>\n                    <Navbar.Text>\n                      <Nav.Link\n                        onClick={ this.handleLogoutClickWithGA }\n                        className=\"ubuntu-regular-font\"\n                      >\n                        Logout\n                      </Nav.Link>\n                    </Navbar.Text>\n                  </React.Fragment>\n                :\n                  <React.Fragment>\n                    <Navbar.Text>\n                      <Nav.Link\n                        href=\"/login\"\n                        onClick={() => Event(\"Routing\", \"Opening Login Page\", \"From Navbar\")}\n                        className=\"ubuntu-regular-font\"\n                      >\n                        Login\n                      </Nav.Link>\n                    </Navbar.Text>\n                    <Navbar.Text>\n                      <Nav.Link\n                        href=\"/signup\"\n                        onClick={() => Event(\"Routing\", \"Opening Signup Page\", \"From Navbar\")}\n                        className=\"ubuntu-regular-font\"\n                      >\n                        Signup\n                      </Nav.Link>\n                    </Navbar.Text>\n                  </React.Fragment>\n              }\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n        <br/>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading ,\n    error: state.auth.error ,\n    authenticated: state.auth.token !== null ,\n    username : state.auth.username ,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: (token) => dispatch(logoutUser(token))\n  };\n};\n\n\nexport default\n  withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )\n    (NavigationBar)\n  );\n","import React from \"react\" ;\nimport {\n  Container ,\n  Navbar ,\n  Nav ,\n\n} from 'react-bootstrap';\n\nimport \"../../content/css/App.css\";\n\n\nfunction Footer() {\n\n  return (\n    <Navbar sticky=\"bottom\" className=\"footer\">\n      <Container>\n        <Navbar.Text className=\"ubuntu-regular-font\">&copy; {new Date().getFullYear()} - Apollo {/*- Cary, NC*/}</Navbar.Text>\n\n        <Nav>\n          {/* \"Privacy\" , \"Store\" , \"Technology\" , etc. */}\n          <Nav.Item ><Nav.Link href=\"/store\" className=\"ubuntu-regular-font\">Store</Nav.Link></Nav.Item>\n          <Nav.Item > <Nav.Link href=\"/blog\" className=\"ubuntu-regular-font\">Blog</Nav.Link>  </Nav.Item>\n          <Nav.Item ><Nav.Link href=\"/careers\" className=\"ubuntu-regular-font\">Careers</Nav.Link></Nav.Item>\n        </Nav>\n      </Container>\n    </Navbar>\n  );\n}\n\n\n\nexport default Footer;\n","const Hoc = props => props.children;\n\nexport default Hoc;\n","import React from 'react';\n\n\nfunction TwitterLogo() {\n  return (\n\n\n    <svg width=\"29\" height=\"29\" class=\"q\">\n        <path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"/>\n    </svg>\n\n  )\n}\n\nexport default TwitterLogo\n","import React from 'react';\n\n//got this SVG from same website as -> https://iconmonstr.com/gmail-1-svg/\n\nfunction RedditLogo() {\n  return (\n\n    <svg width=\"29\" height=\"29\" class=\"q\">\n      <path d=\"M14.238 15.348c.085.084.085.221 0 .306-.465.462-1.194.687-2.231.687l-.008-.002-.008.002c-1.036 0-1.766-.225-2.231-.688-.085-.084-.085-.221 0-.305.084-.084.222-.084.307 0 .379.377 1.008.561 1.924.561l.008.002.008-.002c.915 0 1.544-.184 1.924-.561.085-.084.223-.084.307 0zm-3.44-2.418c0-.507-.414-.919-.922-.919-.509 0-.923.412-.923.919 0 .506.414.918.923.918.508.001.922-.411.922-.918zm13.202-.93c0 6.627-5.373 12-12 12s-12-5.373-12-12 5.373-12 12-12 12 5.373 12 12zm-5-.129c0-.851-.695-1.543-1.55-1.543-.417 0-.795.167-1.074.435-1.056-.695-2.485-1.137-4.066-1.194l.865-2.724 2.343.549-.003.034c0 .696.569 1.262 1.268 1.262.699 0 1.267-.566 1.267-1.262s-.568-1.262-1.267-1.262c-.537 0-.994.335-1.179.804l-2.525-.592c-.11-.027-.223.037-.257.145l-.965 3.038c-1.656.02-3.155.466-4.258 1.181-.277-.255-.644-.415-1.05-.415-.854.001-1.549.693-1.549 1.544 0 .566.311 1.056.768 1.325-.03.164-.05.331-.05.5 0 2.281 2.805 4.137 6.253 4.137s6.253-1.856 6.253-4.137c0-.16-.017-.317-.044-.472.486-.261.82-.766.82-1.353zm-4.872.141c-.509 0-.922.412-.922.919 0 .506.414.918.922.918s.922-.412.922-.918c0-.507-.413-.919-.922-.919z\"/>\n    </svg>\n\n  )\n}\n\nexport default RedditLogo\n","import React from 'react';\n\n//got this SVG from same website as -> https://iconmonstr.com/gmail-1-svg/\n\nfunction LinkedInLogo() {\n  return (\n    <svg width=\"29\" height=\"29\" class=\"q\">\n      <path d=\"M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z\"/>\n    </svg>\n\n  )\n}\n\nexport default LinkedInLogo\n","import React from 'react';\n\n//got this SVG from -> https://iconmonstr.com/gmail-1-svg/\nfunction EmailLogo() {\n  return (\n\n    <svg width=\"29\" height=\"29\" class=\"q\">\n      <path d=\"M22.288 21h-20.576c-.945 0-1.712-.767-1.712-1.712v-13.576c0-.945.767-1.712 1.712-1.712h20.576c.945 0 1.712.767 1.712 1.712v13.576c0 .945-.767 1.712-1.712 1.712zm-10.288-6.086l-9.342-6.483-.02 11.569h18.684v-11.569l-9.322 6.483zm8.869-9.914h-17.789l8.92 6.229s6.252-4.406 8.869-6.229z\"/>\n    </svg>\n\n  )\n}\n\nexport default EmailLogo\n","import React from 'react';\n\n\n//text is what gets passed in. should be used like : <RichText text={example_rich_text} />\nfunction RichText(props) {\n  var classes = \"\"\n\n  if(props.classes){\n    classes = props.classes\n  }\n\n  return <div className={classes} dangerouslySetInnerHTML={{__html: props.text}} />\n}\n\nexport default RichText ;\n","import React from 'react';\nimport {Spinner} from 'react-bootstrap';\n\n//text is what gets passed in. should be used like : <RichText text={example_rich_text} />\nfunction LoaderSpinner() {\n  return  (\n\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        position: 'relative',\n        left: '50%',\n        top: '50%',\n      }}\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default LoaderSpinner ;\n","import React from 'react';\nimport {Spinner} from 'react-bootstrap';\n\n//text is what gets passed in. should be used like : <RichText text={example_rich_text} />\nfunction ButtonLoaderSpinner() {\n  return  (\n\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default ButtonLoaderSpinner ;\n","import React from 'react';\nimport axios from \"axios\";\n\nimport {\n  Button,\n  Popover ,\n  OverlayTrigger ,\n  Badge ,\n  Row ,\n  Col ,\n  Form,\n\n} from 'react-bootstrap';\nimport { CheckCircle }        from    'react-bootstrap-icons';\n\nimport { Event }              from    '../../GlobalMisc/Tracking';\nimport ButtonLoaderSpinner    from    '../../GlobalMisc/ButtonLoaderSpinner'\n\n\nimport \"../../../content/css/App.css\";\nimport {\n  create_email_address_url ,\n\n} from \"../../../backend-urls.js\" ;\n\n\n//text is what gets passed in. should be used like : <RichText text={example_rich_text} />\nclass RegisterEmail extends React.Component {\n\n  state = {\n    error: null , //stores the error that comes from the backend\n    loading : false , //to determine if the page is loading\n    email: \"\" , //stores the email from the \"add email\" widget\n    email_submitted : null , //stores the response value after a user submits their email\n\n  }\n\n  handlePostEmailWithGA = () => {\n    Event(\"Register Email\" , \"Register Email Atempt\")\n    this.handlePostEmail()\n  }\n  handlePostEmail = () => {\n    this.setState({\n      loading: true ,\n      error: null ,\n\n    })\n\n    var data = new FormData();\n    data.append('email' , this.state.email) ;\n\n    axios\n      .post(create_email_address_url , data)\n      .then(response => {\n\n        Event(\"Register Email\" , \"Register Email SUCCESS\" )\n        this.setState({\n          email_submitted : true ,\n          loading:false ,\n        })\n      })\n      .catch(error => {\n\n        Event(\"Register Email\" , \"Register Email FAIL\" )\n        this.setState({\n          error: error.response.data  ,\n          loading: false ,\n        })\n      })\n  }\n\n   handleEmailValidated = () => {\n    var email = this.state.email\n    //these are the most abstract validations that I can think of.. length is greater than 5 (contains an @, a ., and a letter before/after each. ie \"a@b.co\" would pass (I'm not sure if there are top-level domains with single letter so i just required 2 for the tld))\n    var email_length_more_than_four = email.length > 5\n    var email_contains_at = email.includes(\"@\")\n    var email_contains_period = email.includes(\".\")\n\n    return !(email_length_more_than_four && email_contains_at && email_contains_period )\n  }\n\n   handleEmail = (text) => {\n    this.setState({\n      email: text.target.value\n    });\n  }\n\n  handleClosePopover = () => {\n    document.getElementById(\"emailBadge\").click()\n  }\n\n  render(){\n\n    const {\n      error ,\n      loading ,\n      email_submitted ,\n    } = this.state\n\n      //for email popover\n      const email_popover = (\n        <Popover\n          id=\"popover-basic\"\n          className=\"max-width-800px\"\n          // onBlur={() => {\n          //   document.getElementById(\"emailBadge\").click()\n          // }}\n        >\n          <Popover.Title as=\"h3\">Email Updates</Popover.Title>\n          <Popover.Content >\n              <Row >\n                <Col>\n                  <Form.Control\n                    // style={{width:'200px'}}\n                    className=\"width-250px\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    onChange={this.handleEmail}\n                  />\n                  {\n                    error&&\n                      <small style={{color:'red'}} >{error}</small>\n                    }\n                </Col>\n                <Col>\n                  {\n                    email_submitted ?\n                      <CheckCircle className=\"text-success font-size-2-5em\" />\n                    :\n                      loading ?\n                          <Button\n                            disabled={true}\n                            variant=\"primary\"\n                            type=\"submit\"\n                            onClick={this.handlePostEmailWithGA }\n                            className=\"float-right\"\n                          >\n                            <ButtonLoaderSpinner />\n                          </Button>\n                      :\n                        <Button\n                          disabled={this.handleEmailValidated()}\n                          variant=\"primary\"\n                          type=\"submit\"\n                          onClick={this.handlePostEmailWithGA }\n                          className=\"float-right\"\n                        >\n                          Submit\n                        </Button>\n                  }\n                </Col>\n              </Row>\n          </Popover.Content>\n        </Popover>\n      )\n\n\n\n    return (\n        <OverlayTrigger\n          trigger='click'\n          placement={this.props.direction}\n          overlay={email_popover}\n\n        >\n          <Badge\n            id=\"emailBadge\"\n            className=\"font-size-10px\"\n            style={{cursor: 'pointer' , }}\n          >\n            {this.props.text}\n          </Badge>\n        </OverlayTrigger>\n    )\n\n  }\n\n}\n\nexport default RegisterEmail ;\n","import React from \"react\" ;\nimport axios from \"axios\";\n\nimport {\n  Badge ,\n\n} from 'react-bootstrap';\nimport { ChevronUp } from 'react-bootstrap-icons';\n\n\nimport { Event } from '../../GlobalMisc/Tracking';\n\nimport { connect } from \"react-redux\";\n\nimport {\n  create_comment_upvote_url ,\n  remove_comment_upvote_url ,\n  get_comment_upvotes_url ,\n\n} from \"../../../backend-urls.js\" ;\n//should get triggered if the user enteres a URL that is nonexistant..\n//if they enter \"apollo.com/buystuff\" it'll redirect here. try something with wildcards?? idk\n// or with something like this.  <Route exact path=\"*\" component={Error} />\n\nclass CommentUpvote extends React.Component {\n\n  state = {\n    upvoted : false , //if the user has given this comment an upvote\n    upvote_id : null , //holds the upvote id if the user has already upvoted this comment\n    number_of_upvotes : null , //displays the number of upvotes\n    upvotes : null , //holds the upvote objects\n  }\n\n  componentDidMount(){\n    this.handleGetUpvotes()\n\n  }\n\n  handleGetUpvotes = () => {\n    axios\n      .get(get_comment_upvotes_url(this.props.comment_id))\n      .then(response => {\n        // console.log(\"response: \" + response.data )\n        response.data.forEach( upvote => {\n          if(upvote.user === parseInt(this.props.user_id) ){\n            this.setState({\n              upvoted : true ,\n              upvote_id : upvote.id\n            })\n          }\n        })\n\n        this.setState({\n          number_of_upvotes : response.data.length ,\n          upvotes : response.data\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error )\n      })\n  }\n\n\n  handleRemoveUpvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    axios\n      .delete( remove_comment_upvote_url(this.state.upvote_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        console.log('removed upvote ')\n        Event(\"Upvote Comment\" , \"Remove Upvote Comment SUCCESS\")\n        this.setState({\n          upvoted : false ,\n          number_of_upvotes : this.state.number_of_upvotes - 1 ,\n        })\n      })\n      .catch(error => {\n        Event(\"Upvote Comment\" , \"Remove Upvote Comment FAIL\")\n        console.log('error removing upvote' + error )\n      })\n\n      //sets the CommentSection state var \"comment_upvoted\" to false\n      this.props.comment_upvoted(false)\n  }\n\n\n\n  handleCreateUpvote = () => {\n      var auth_token = 'Token ' + this.props.token ;\n      var upvote_data = new FormData() ;\n      upvote_data.append('comment' , this.props.comment_id )\n      upvote_data.append('user' , this.props.user_id)\n\n      axios\n        .post(create_comment_upvote_url , upvote_data ,\n          {\n            headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n          }\n        )\n        .then(response => {\n          Event(\"Upvote Comment\" , \"Create Upvote Comment SUCCESS\")\n          this.handleGetUpvotes()\n        })\n        .catch(error => {\n          Event(\"Upvote Comment\" , \"Create Upvote Comment FAIL\")\n          console.log('error creating upvote: ' + error.code)\n        })\n        //sets the CommentSection state var \"comment_upvoted\" to true\n        this.props.comment_upvoted(true) ;\n  }\n\n\n\n  handleUpvoteClickWithGA = () => {\n    Event(\"Upvote Comment\" , \"Upvote Comment Attempt\")\n    this.handleUpvoteClick() ;\n  }\n\n  handleUpvoteClick = ( text ) => {\n    if(this.props.user_id === 0)\n    {\n      alert(\"You need to sign in to do this.\")\n    }else {\n      if(this.state.upvoted){\n        this.handleRemoveUpvote()\n      }else{\n        this.handleCreateUpvote()\n      }\n    }\n  }\n\n\n  render(){\n    const {\n      upvoted ,\n      number_of_upvotes ,\n\n    } = this.state\n\n    const {\n      comment_id ,\n      user_id ,\n    } = this.props\n\n\n    //used to determine if the user has already upvoted this article and has just hit the downvote button.. removes the upvote if true\n    if(this.props.comment_downvoted && upvoted){\n      this.handleRemoveUpvote() ;\n    }\n\n    return(\n\n      <Badge\n        onClick={this.handleUpvoteClickWithGA}\n        className={(upvoted ? \"cursor-pointer color-green \" : \"cursor-pointer\" )}\n        >\n        <ChevronUp size={25}/> {number_of_upvotes}\n      </Badge>\n\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    token : state.auth.token ,\n    user_id : state.auth.user_id\n  };\n};\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(CommentUpvote) ;\n","import React from \"react\" ;\nimport axios from \"axios\";\nimport {\n  Badge ,\n\n} from 'react-bootstrap';\nimport { ChevronDown } from 'react-bootstrap-icons';\n\n\nimport { Event } from '../../GlobalMisc/Tracking';\n\n\nimport { connect } from \"react-redux\";\nimport {\n  create_comment_downvote_url ,\n  remove_comment_downvote_url ,\n  get_comment_downvotes_url ,\n\n} from \"../../../backend-urls.js\" ;\n\nclass CommentDownvote extends React.Component {\n\n  state = {\n    downvoted : false , //if the user has given this comment an upvote\n    downvote_id : null , //holds the upvote id if the user has already upvoted this comment\n    number_of_downvotes : null , //displays the number of upvotes\n    downvotes : null , //holds the upvote objects\n  }\n\n\n  componentDidMount(){\n    this.handleGetDownvotes()\n\n  }\n\n  handleGetDownvotes = () => {\n    axios\n      .get(get_comment_downvotes_url(this.props.comment_id))\n      .then(response => {\n\n        // console.log(\"response: \" + response.data )\n        response.data.forEach( downvote => {\n          if(downvote.user === parseInt(this.props.user_id) ){\n            this.setState({\n              downvoted : true ,\n              downvote_id : downvote.id\n            })\n          }\n        })\n\n        this.setState({\n          number_of_downvotes : response.data.length ,\n          downvotes : response.data\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error )\n      })\n  }\n\n  handleRemoveDownvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    axios\n      .delete( remove_comment_downvote_url(this.state.downvote_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        Event(\"Downvote Comment\" , \"Remove Downvote Comment SUCCESS\")\n        console.log('removed downvote ')\n        this.setState({\n          downvoted : false ,\n          number_of_downvotes : this.state.number_of_downvotes - 1 ,\n\n        })\n      })\n      .catch(error => {\n        Event(\"Downvote Comment\" , \"Remove Downvote Comment FAIL\")\n        console.log('error removing downvote' + error )\n      })\n\n      //sets the CommentSection state var \"comment_downvoted\" to false\n      this.props.comment_downvoted(false) ;\n  }\n\n\n  handleCreateDownvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    var downvote_data = new FormData() ;\n    downvote_data.append('comment' , this.props.comment_id )\n    downvote_data.append('user' , this.props.user_id)\n\n    axios\n      .post(create_comment_downvote_url , downvote_data ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        Event(\"Downvote Comment\" , \"Create Downvote Comment SUCCESS\")\n        this.handleGetDownvotes()\n      })\n      .catch(error => {\n        Event(\"Downvote Comment\" , \"Create Downvote Comment FAIL\")\n        console.log('error creating upvote: ' + error.code)\n      })\n\n      //sets the CommentSection state var \"comment_downvoted\" to true\n      this.props.comment_downvoted(true) ;\n  }\n\n\n  handleDownvoteClickWithGA = () => {\n    Event(\"Downvote Comment\" , \"Downvote Comment Attempt\")\n    this.handleDownvoteClick()\n  }\n\n  handleDownvoteClick = ( text ) => {\n\n    if(this.state.downvoted){\n      this.handleRemoveDownvote()\n    }else{\n      this.handleCreateDownvote()\n    }\n  }\n\n\n  render(){\n    const {\n      downvoted ,\n      number_of_downvotes ,\n\n    } = this.state\n\n    const {\n      comment_id ,\n      user_id ,\n    } = this.props\n\n    //used to determine if the user has already downvoted this comment and has just hit the upvote button.. removes the downvote if true\n    if(this.props.comment_upvoted && downvoted){\n      this.handleRemoveDownvote() ;\n    }\n\n\n    return(\n      <Badge\n        onClick={this.handleDownvoteClickWithGA}\n        className={(this.state.downvoted ? \"cursor-pointer color-red \" : \"cursor-pointer\" )}\n        >\n        <ChevronDown size={25}/> {number_of_downvotes}\n      </Badge>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    token : state.auth.token ,\n    user_id : state.auth.user_id\n  };\n};\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(CommentDownvote) ;\n","import React from 'react';\nimport {\n  Card ,\n\n} from 'react-bootstrap';\n\n\nimport CommentUpvote      from    './CommentUpvote'\nimport CommentDownvote    from    './CommentDownvote'\n\nimport RichText           from    '../../GlobalMisc/RichText'\n\n\nimport \"../../../content/css/App.css\";\n\n\n\nclass ArticleComment extends React.Component {\n\n  state = {\n    comment_upvoted : false , //determines if the comment is upvoted or not.\n    comment_downvoted : false , //determines if the comment is downvoted or not.\n  }\n\n\n  /***the following two functions (handleCommentUpvoteClick & handleArticleDownvoteClick) are used when a user has upvoted a comment and then hits the downvote button (and vise versa)***/\n\n  //callback function for CommentUpvote component. if the user is creating an upvote, it sets it to true. and false if the upvote is being removed (by the user hitting downvote)\n  handleCommentUpvoteClick = (value) => {\n    console.log(\"handleCommentUpvoteClick value : \" + value)\n    this.setState({\n      comment_upvoted : value ,\n    })\n  }\n  //callback function for CommentDownvote component. if the user is creating a downvote, it sets it to true. and flase if the downvote is being removed (by the user hitting upvote)\n  handleCommentDownvoteClick = (value) => {\n    console.log(\"handleCommentDownvoteClick value : \" + value )\n    this.setState({\n      comment_downvoted : value ,\n    })\n  }\n\n\n\n\n  render(){\n    const {\n      comment_upvoted ,\n      comment_downvoted ,\n    } = this.state\n\n    console.log(\"this.props.comment.author: \" + this.props.comment.author )\n\n    return(\n      <React.Fragment>\n        <Card className=\"border-radius-25px \">\n          <Card.Body>\n            <Card.Title className=\"roboto-bold-font\" >\n              {this.props.comment.author}\n              <div className=\"float-right\" >\n                <CommentUpvote comment_id={this.props.comment.id} comment_downvoted={comment_downvoted} comment_upvoted={this.handleCommentUpvoteClick} />\n                {' '}\n                <CommentDownvote comment_id={this.props.comment.id} comment_upvoted={comment_upvoted} comment_downvoted={this.handleCommentDownvoteClick} />\n              </div>\n            </Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted roboto-regular-font\">\n              { new Date(this.props.comment.created_date).toDateString() }\n            </Card.Subtitle>\n\n            <Card.Text className=\"roboto-regular-font\" >\n              <RichText text={this.props.comment.body} />\n            </Card.Text>\n\n          </Card.Body>\n        </Card>\n        <hr />\n\n      </React.Fragment>\n\n\n    )\n\n  }\n\n}\n\nexport default ArticleComment ;\n","import React from 'react';\nimport axios from \"axios\";\n\nimport {\n  Container ,\n  Card ,\n  Button,\n  Col ,\n  Form,\n  Alert ,\n  Badge ,\n\n} from 'react-bootstrap';\n\n//for ReactQuill (comment box). found at https://github.com/zenoamaro/react-quill\nimport ReactQuill             from      'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport { connect }            from      \"react-redux\";\n\nimport ArticleComment         from      './ArticleComment'\nimport CommentUpvote          from      './CommentUpvote'\nimport CommentDownvote        from      './CommentDownvote'\n\n\nimport LoaderSpinner          from      '../../GlobalMisc/LoaderSpinner'\nimport ButtonLoaderSpinner    from      '../../GlobalMisc/ButtonLoaderSpinner'\nimport { Event }              from      '../../GlobalMisc/Tracking';\nimport RichText               from      '../../GlobalMisc/RichText'\n\n\n\nimport \"../../../content/css/App.css\";\n\nimport {\n  create_comment_url ,\n  create_upvote_url ,\n  comments_url ,\n\n} from \"../../../backend-urls.js\" ;\n\n\n\nclass CommentSection extends React.Component {\n\n  state = {\n    error : null , //stores any error that comes back from the database\n    loading : true , //set to determine if the page is loading\n    submit_button_loading : false , //set to determine if the page is loading\n    commenter_name : \"\" , //stores the anme of the person that is writing the comment\n    comment_body : \"\" , //stores the body of the comment\n    comment_submitted : false , //determines if the comment has been submitted.\n    comment_upvoted : false , //determines if the comment is upvoted or not.\n    comment_downvoted : false , //determines if the comment is downvoted or not.\n    comments : null , //holds the comments for the comment section\n  }\n\n\n  componentDidMount(){\n    this.setState({\n      loading: true\n    })\n    this.handleGetComments()\n\n  }\n\n  handleGetComments = () => {\n    axios\n      .get(comments_url(this.props.article_id))\n      .then(response => {\n        // console.log(\"response: \" + response)\n        // console.log(\"response.data: \" response.data)\n        this.setState({\n          loading: false ,\n          comments : response.data  ,\n\n        })\n      })\n      .catch(error => {\n        // console.log(\"error: \" + error)\n        // console.log(\"error.data: \" + error.data)\n        this.setState({\n          loading: false ,\n          error : error.data  ,\n\n        })\n      })\n  }\n\n  handleCommentBody = (text) => {\n    this.setState({\n      comment_body : text\n    })\n  }\n\n  // handleCommenterName = (text) => {\n  //   this.setState({\n  //     commenter_name : text.target.value\n  //   })\n  // }\n\n  handlePostCommentWithGA = () => {\n    Event(\"Create Article Comment\", \"Create Comment Attempt\", \"From Article Comment Section\")\n    this.handlePostComment() ;\n  }\n\n  handlePostComment = () => {\n    this.setState({\n      submit_button_loading: true\n    })\n    var comment_data = new FormData() ;\n    comment_data.append('body' , this.state.comment_body )\n    comment_data.append('user' , this.props.user_id)//this.state.commenter_name)\n    comment_data.append('article', this.props.article_id )\n\n    axios\n      .post(create_comment_url , comment_data)\n      .then(response => {\n        console.log('comment submitted')\n        Event(\"Create Article Comment\", \"Create Comment SUCCESS\", \"From Article Comment Section\")\n        this.setState({\n          submit_button_loading: false ,\n          commenter_name : \"\" ,\n          comment_body : \"\" ,\n          comment_submitted : true ,\n        })\n        this.handleGetComments() ;\n      })\n      .catch(error => {\n        Event(\"Create Article Comment\", \"Create Comment FAIL\", \"From Article Comment Section\" )\n        this.setState({\n          error: error.response.data ,\n          submit_button_loading: false ,\n          comment_body : \"\" ,\n        })\n      })\n  }\n\n  handleValidateComment = () => {\n    console.log( \"comment body : \" + (this.state.comment_body ) )\n    return (this.state.comment_body.length > 11)\n  }\n\n\n\n  /***the following two functions (handleCommentUpvoteClick & handleArticleDownvoteClick) are used when a user has upvoted a comment and then hits the downvote button (and vise versa)***/\n\n  //callback function for CommentUpvote component. if the user is creating an upvote, it sets it to true. and false if the upvote is being removed (by the user hitting downvote)\n  handleCommentUpvoteClick = (value) => {\n    console.log(\"handleCommentUpvoteClick value : \" + value)\n    this.setState({\n      comment_upvoted : value ,\n    })\n  }\n  //callback function for CommentDownvote component. if the user is creating a downvote, it sets it to true. and flase if the downvote is being removed (by the user hitting upvote)\n  handleCommentDownvoteClick = (value) => {\n    console.log(\"handleCommentDownvoteClick value : \" + value )\n    this.setState({\n      comment_downvoted : value ,\n    })\n  }\n\n\n\n  render(){\n\n    const {\n      loading ,\n      submit_button_loading ,\n      error ,\n      comment_body ,\n      comment_submitted ,\n      comment_downvoted ,\n      comment_upvoted ,\n      comments ,\n\n    } = this.state\n\n    const {\n      user_id ,\n      username ,\n      authenticated ,\n\n    } = this.props\n\n\n\n    console.log(\"loading : \" + loading );\n\n    return(\n        <div >\n          <h2 className=\"roboto-bold-font\">Comments</h2>\n          <hr />\n          <Container>\n            {\n              loading &&\n                <LoaderSpinner />\n            }\n            {\n              !loading ?\n                  comments  ?\n                    comments.map(comment => (\n                        <ArticleComment comment={comment} />\n                      )\n                    )\n                  :\n                    <Alert variant=\"dark\">There are no comments yet! Leave one below</Alert>\n                :\n                  <br />\n            }\n            {\n              authenticated ?\n                  <Card className=\"border-radius-25px \">\n                    <Card.Body>\n                      <Card.Title className=\"roboto-bold-font\" >\n                        Add a Comment\n                      </Card.Title>\n                      <hr />\n                      <Card.Text>\n                        <Form>\n                          <Form.Row>\n                            <Col>\n                              {/*<Form.Label>Comment:</Form.Label>*/}\n                              <ReactQuill\n\n                                placeholder=\"Start Writing...\"\n                                onChange={this.handleCommentBody}\n                                value={comment_body}\n                              />\n                            </Col>\n                          </Form.Row>\n                        </Form>\n                      </Card.Text>\n                      {\n                        submit_button_loading ?\n                          <Button\n                            disabled={true}\n                            variant=\"primary\"\n                            className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n                          >\n                            <ButtonLoaderSpinner />\n                          </Button>\n                        :\n                          <Button\n                            onClick={this.handlePostCommentWithGA}\n                            disabled={!this.handleValidateComment()}\n                            variant=\"primary\"\n                            className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n                          >\n                            Add Comment\n                          </Button>\n\n                        }\n                    </Card.Body>\n                  </Card>\n                :\n                  <Alert variant=\"dark\" className=\"roboto-regular-font\">\n                    You need to <a href=\"/login\" onClick={() => Event(\"Routing\", \"Opening Login Page\", \"From Article Comment Section\")}>Login</a> or <a href=\"/signup\" onClick={() => Event(\"Routing\", \"Opening Signup Page\", \"From Article Comment Section\") }>Signup</a> to leave a comment.\n                  </Alert>\n            }\n            {\n              comment_submitted &&\n                <React.Fragment>\n                  <br />\n                  <Alert\n                    variant=\"success\"\n                    className=\"roboto-bold-font\"\n                  >\n                    Your comment has been added!\n                  </Alert>\n                </React.Fragment>\n            }\n          </Container>\n\n        </div>\n\n    )\n  }\n\n\n}\n\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    authenticated : state.auth.token !== null ,\n    user_id : state.auth.user_id ,\n    username : state.auth.username\n  };\n};\n\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(CommentSection) ;\n","import React from \"react\" ;\nimport axios from \"axios\";\n\nimport {\n  Badge ,\n\n} from 'react-bootstrap';\n\nimport { ChevronUp }      from      'react-bootstrap-icons';\n\nimport { Event }          from      '../../GlobalMisc/Tracking';\n\nimport { connect }        from      \"react-redux\";\n\nimport {\n  create_article_upvote_url ,\n  remove_article_upvote_url ,\n  get_article_upvotes_url ,\n\n} from \"../../../backend-urls.js\" ;\n//should get triggered if the user enteres a URL that is nonexistant..\n//if they enter \"apollo.com/buystuff\" it'll redirect here. try something with wildcards?? idk\n// or with something like this.  <Route exact path=\"*\" component={Error} />\n\nclass ArticleUpvote extends React.Component {\n\n  state = {\n    upvoted : false , //if the user has given this comment an upvote\n    upvote_id : null , //holds the upvote id if the user has already upvoted this comment\n    number_of_upvotes : null , //displays the number of upvotes\n    upvotes : null , //holds the upvote objects\n  }\n\n  componentDidMount(){\n    this.handleGetUpvotes()\n\n  }\n\n  handleGetUpvotes = () => {\n    axios\n      .get(get_article_upvotes_url(this.props.article_id))\n      .then(response => {\n\n        // console.log(\"user_id inside get upvotes: \" + this.props.user_id)\n        // console.log(\"response: \" + response.data )\n        response.data.forEach( upvote => {\n          // console.log(\"user_id and upvote.user inside get upvotes: \" + this.props.user_id + \" \" + upvote.user)\n          if(upvote.user === parseInt(this.props.user_id) ){\n            this.setState({\n              upvoted : true ,\n              upvote_id : upvote.id\n            })\n          }\n        })\n\n        this.setState({\n          number_of_upvotes : response.data.length ,\n          upvotes : response.data\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error )\n      })\n  }\n\n\n  handleRemoveUpvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    axios\n      .delete( remove_article_upvote_url(this.state.upvote_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        Event(\"Upvote Article\" , \"Remove Upvote Article SUCCESS\")\n        this.handleGetUpvotes()\n        console.log('removed upvote ')\n        this.setState({\n          upvoted : false ,\n        })\n      })\n      .catch(error => {\n        Event(\"Upvote Article\" , \"Remove Upvote Article FAIL\")\n        console.log('error removing upvote' + error )\n      })\n\n      //sets the ArticlePage state var \"article_upvoted\" to false\n      this.props.article_upvoted(false)\n  }\n\n\n  handleCreateUpvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    var upvote_data = new FormData() ;\n    upvote_data.append('article' , this.props.article_id )\n    upvote_data.append('user' , this.props.user_id)\n\n    axios\n      .post(create_article_upvote_url , upvote_data ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        Event(\"Upvote Article\" , \"Create Upvote Article SUCCESS\")\n        this.handleGetUpvotes()\n      })\n      .catch(error => {\n        Event(\"Upvote Article\" , \"Create Upvote Article FAIL\")\n        console.log('error creating upvote: ' + error.code)\n      })\n\n    //sets the ArticlePage state var \"article_upvoted\" to true\n    this.props.article_upvoted(true) ;\n  }\n\n\n  handleUpvoteClickWithGA = () => {\n    Event(\"Upvote Article\" , \"Upvote Comment Attempt\")\n    this.handleUpvoteClick() ;\n  }\n\n  handleUpvoteClick = ( text ) => {\n    if(this.props.user_id === 0)\n    {\n      alert(\"You need to sign in to do this.\")\n    }else {\n      if(this.state.upvoted){\n        this.handleRemoveUpvote()\n      }else{\n        this.handleCreateUpvote()\n      }\n    }\n  }\n\n\n  render(){\n    const {\n      upvoted ,\n      number_of_upvotes ,\n\n    } = this.state\n\n    const {\n      comment_id ,\n      user_id ,\n    } = this.props\n\n    //used to determine if the user has already upvoted this article and has just hit the downvote button.. removes the upvote if true\n    if(this.props.article_downvoted && upvoted){\n      this.handleRemoveUpvote() ;\n    }\n\n    // console.log( \"number_of_upvotes : \" + number_of_upvotes )\n    return(\n\n      <Badge\n        onClick={this.handleUpvoteClickWithGA}\n        className={(this.state.upvoted ? \"cursor-pointer color-green \" : \"cursor-pointer\" )}\n        >\n        <ChevronUp size={25}/> {number_of_upvotes}\n      </Badge>\n\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    token : state.auth.token ,\n    user_id : state.auth.user_id\n  };\n};\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(ArticleUpvote) ;\n","import React from \"react\" ;\nimport axios from \"axios\";\nimport {\n  Badge ,\n\n} from 'react-bootstrap';\nimport { ChevronDown } from 'react-bootstrap-icons';\n\n\nimport { Event } from '../../GlobalMisc/Tracking';\n\nimport { connect } from \"react-redux\";\n\n\nimport {\n  create_article_downvote_url ,\n  remove_article_downvote_url ,\n  get_article_downvotes_url ,\n\n} from \"../../../backend-urls.js\" ;\n\n\n\nclass ArticleDownvote extends React.Component {\n\n  state = {\n    downvoted : false , //if the user has given this comment an upvote\n    downvote_id : null , //holds the upvote id if the user has already upvoted this comment\n    number_of_downvotes : null , //displays the number of upvotes\n    downvotes : null , //holds the upvote objects\n  }\n\n\n  componentDidMount(){\n\n    this.handleGetDownvotes()\n\n\n\n  }\n\n  handleGetDownvotes = () => {\n    axios\n      .get(get_article_downvotes_url(this.props.article_id))\n      .then(response => {\n\n        console.log(\"response: \" + response.data )\n\n        response.data.forEach( downvote => {\n          if(downvote.user === parseInt(this.props.user_id) ){\n            this.setState({\n              downvoted : true ,\n              downvote_id : downvote.id\n            })\n          }\n        })\n\n        this.setState({\n          number_of_downvotes : response.data.length ,\n          downvotes : response.data\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error )\n      })\n  }\n\n\n  handleRemoveDownvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    axios\n      .delete( remove_article_downvote_url(this.state.downvote_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        Event(\"Downvote Article\" , \"Remove Downvote Article SUCCESS\")\n        this.handleGetDownvotes()\n        console.log('removed downvote ')\n        this.setState({\n          downvoted : false ,\n\n        })\n      })\n      .catch(error => {\n        Event(\"Downvote Article\" , \"Remove Downvote Article FAIL\")\n        console.log('error removing downvote' + error )\n      })\n\n      //sets the ArticlePage state var \"article_downvoted\" to false\n      this.props.article_downvoted(false) ;\n\n  }\n\n\n  handleCreateDownvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    var downvote_data = new FormData() ;\n    downvote_data.append('article' , this.props.article_id )\n    downvote_data.append('user' , this.props.user_id)\n\n    axios\n      .post(create_article_downvote_url , downvote_data ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        Event(\"Downvote Article\" , \"Create Downvote Article SUCCESS\")\n        this.handleGetDownvotes()\n      })\n      .catch(error => {\n        Event(\"Downvote Article\" , \"Create Downvote Article FAIL\")\n        console.log('error creating upvote: ' + error.code)\n      })\n      //sets the ArticlePage state var \"article_downvoted\" to true\n      this.props.article_downvoted(true) ;\n  }\n\n  handleDownvoteClickWithGA = () => {\n    Event(\"Downvote Article\" , \"Downvote Article Attempt\")\n    this.handleDownvoteClick()\n  }\n\n\n  handleDownvoteClick = ( text ) => {\n    if(this.props.user_id === 0)\n    {\n      alert(\"You need to sign in to do this.\")\n    }else {\n      if(this.state.downvoted){\n        this.handleRemoveDownvote()\n      }else{\n        this.handleCreateDownvote()\n      }\n    }\n  }\n\n\n\n\n\n  render(){\n    const {\n      downvoted ,\n      number_of_downvotes ,\n\n    } = this.state\n\n    const {\n      comment_id ,\n      user_id ,\n    } = this.props\n\n    //used to determine if the user has already downvoted this article and has just hit the upvote button.. removes the downvote if true\n    if(this.props.article_upvoted && downvoted){\n      this.handleRemoveDownvote() ;\n    }\n\n    return(\n      <Badge\n        onClick={this.handleDownvoteClickWithGA}\n        className={(this.state.downvoted ? \"cursor-pointer color-red \" : \"cursor-pointer\" )}\n      >\n        <ChevronDown size={25}/> {number_of_downvotes}\n      </Badge>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    token : state.auth.token ,\n    user_id : state.auth.user_id\n  };\n};\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(ArticleDownvote) ;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {\n  Container ,\n  Badge ,\n  Col ,\n  Row ,\n  Form ,\n  ListGroup ,\n  Button ,\n  Alert ,\n\n} from 'react-bootstrap';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n// import { Event } from \"./Misc/Tracking\";\nimport { Event, PageView} from '../GlobalMisc/Tracking';\n\n// found at https://www.npmjs.com/package/react-bootstrap-icons\n\nimport TwitterLogo      from    '../GlobalMisc/TwitterLogo';\nimport RedditLogo       from    '../GlobalMisc/RedditLogo';\nimport LinkedInLogo     from    '../GlobalMisc/LinkedInLogo';\nimport EmailLogo        from    '../GlobalMisc/EmailLogo';\nimport FacebookLogo     from    '../GlobalMisc/FacebookLogo';\n\nimport RichText         from    '../GlobalMisc/RichText';\nimport LoaderSpinner    from    '../GlobalMisc/LoaderSpinner';\n\nimport RegisterEmail    from    './Misc/RegisterEmail';\nimport CommentSection   from    './Misc/CommentSection' ;\nimport ArticleUpvote    from    './Misc/ArticleUpvote' ;\nimport ArticleDownvote  from    './Misc/ArticleDownvote' ;\n\n\nimport \"../../content/css/App.css\";\nimport {\n  article_url,\n  create_user_read_article_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\n\n\nclass ArticlePage extends React.Component  {\n\n  state = {\n    loading : false , //to determine if the page is loading\n    error : null , //stores the error that comes from backend\n    article_data: [] , //stores the article information\n    article_upvoted : false , //determines if the article is upvoted or not.\n    article_downvoted : false , //determines if the article is downvoted or not.\n    window_width : null , // stores the width of the window. used to determine if the left sidebar should be hidden\n  }\n\n  componentDidMount(){\n    //resize event listener so the app knows when to remove the left sidebar. found at => https://gist.github.com/nma/33f8057e4899bdb55440a693a02c431b\n    window.addEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n    this.updateWindowDimensions();\n\n    this.setState({\n      loading: true ,\n    })\n    PageView();\n    this.handleGetArticle() ;\n    this.handleCreateUserReadArticle() ;\n\n\n  }\n\n\n  updateWindowDimensions() {\n      this.setState({ window_width: window.innerWidth >= 992, height: window.innerHeight });\n  }\n\n\n\n  handleGetArticle = () => {\n    var article_id = this.props.match.params.article_id\n    axios\n      .get(article_url(article_id) )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          loading: false ,\n          article_data: response.data ,\n        })\n      })\n      .catch(error => {\n        this.setState({\n          error: error ,\n          loading : false\n        })\n      })\n  }\n\n  handleCreateUserReadArticle = () => {\n    // var user_id = null ;\n    //gets the user_id from local storage. difficulty getting user_id from redux-store\n\n    var user_read_article_data = new FormData() ;\n    user_read_article_data.append('article' , this.props.match.params.article_id )\n    if(localStorage.getItem(\"user_id\") != null){\n      // user_id = localStorage.getItem(\"user_id\")\n      user_read_article_data.append('user' , localStorage.getItem(\"user_id\"))\n    }\n\n    console.log(\"this.props.match.params.article_id : \" + this.props.match.params.article_id) ;\n    // console.log(\"this.props.user_id : \" + user_id) ;\n\n    axios\n      .post(create_user_read_article_url , user_read_article_data)\n      .then( response => {\n        console.log(\"Create userreadarticle: \" + response.data)\n      })\n      .catch(error => {\n        console.log(\"error userreadarticle: \" + error.data )\n      })\n  }\n\n\n  /***the following two functions (handleArticleUpvoteClick & handleArticleDownvoteClick) are used when a user has upvoted an article and then hits the downvote button (and vise versa)***/\n\n  //callback function for ArticleUpvote component. if the user is creating an upvote, it sets it to true. and false if the upvote is being removed (by the user hitting downvote)\n  handleArticleUpvoteClick = (value) => {\n    console.log(\"handleArticleUpvoted value : \" + value)\n    this.setState({\n      article_upvoted : value ,\n    })\n  }\n  //callback function for ArticleDownvote component. if the user is creating a downvote, it sets it to true. and flase if the downvote is being removed (by the user hitting upvote)\n  handleArticleDownvoteClick = (value) => {\n    console.log(\"handleArticleDownvoted value : \" + value )\n    this.setState({\n      article_downvoted : value ,\n    })\n  }\n\n\n  handleHomeButtonClickWithGA = () => {\n    this.props.history.push('/') ;\n    Event(\"Routing\", \"Opening Home Page\", \"From Article Page\")\n  }\n\n\n\n  render(){\n\n    const {\n      article_data ,\n      loading ,\n      article_upvoted ,\n      article_downvoted ,\n      window_width ,\n\n    } = this.state\n\n    const {\n      authenticated ,\n\n    } = this.props\n\n    // console.log(\"window_width : \" + window_width)\n    // console.log(commenter_name)\n\n    // console.log(  article_data['comments'] )\n\n\n    const article_date = new Date(article_data['created_date']).toDateString()  ;\n\n    var apollo_div = document.getElementById(\"apollo_widget_left_sidebar\")\n    // var sm_div = document.getElementById(\"sm_links_left_sidebar\")\n    //gets the first element with the tag name \"body\" aka, the entire page\n    var body= document.getElementsByTagName(\"body\")[0];\n    body.onscroll = function(e){\n      //documentElement.scrollTop gets the number of elements from the top\n      if( document.documentElement.scrollTop >= 70){\n        //makes the \"apollo\" thing appear after they scroll more than 70 px. (approx the height of the nav bar)\n        apollo_div.classList.add(\"AfterScroll\")  ;\n\n      }else {\n        //removes the \"apollo\" thing if the navbar comes into view\n        apollo_div.classList.remove(\"AfterScroll\") ;\n      }\n\n    }\n\n    const twitter_link = \"https://twitter.com/intent/tweet?text=check%20out%20this%20new%20ecommerce%20startup!%20https%3A%2F%2Flocalhost%3A3000%2Fblog%2Farticle%2F\"+article_data['id']\n    const facebook_link = \"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;src=sdkpreparse \"\n    //\" https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocalhost%3A3000%2Fblog%2Farticle%2F\"+article_data['id']\n    const reddit_link = \"https://www.reddit.com/submit?url=https%3A%2F%2Fwww.apollo-blog-269301.appspot.com%2Fblog%2Farticle%2F\"+article_data['id']+\"&title=Check%20Out%20This%20New%20Ecommerce%20Startup \"\n    const email_link = \"mailto:?subject=Check Out This New Ecommerce Startup&body=Check Out This New Ecommerce Startup!%0A%0A They are the first ecommerce site that is accepting Bitcoin and they've got big plans!%0A%0A You can read more about them out at https%3A%2F%2Fwww.apollo-blog-269301.appspot.com%2Fblog%2Farticle%2F\"+article_data['id']\n    const linkedin_link = \"https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fwww.apollo-blog-269301.appspot.com%2Fblog%2Farticle%2F\"+article_data['id']\n\n\n    return (\n\n      <React.Fragment>\n        <Row>\n\n          {\n            window_width  &&\n              <Col lg={2} >\n\n                <ListGroup\n                  variant=\"flush\"\n                  className=\"sticky-top BeforeScroll \"\n                >\n                  <div id=\"apollo_widget_left_sidebar\">\n                    <ListGroup.Item className=\"bg-app border-width-0px \">\n                      <h4\n                        className=\"roboto-regular-font\"\n                        onClick={this.handleHomeButtonClickWithGA }\n                        style={{cursor: 'pointer'}}\n                      >\n                          Apollo\n                      </h4>\n\n                    </ListGroup.Item>\n\n                    <ListGroup.Item className=\"bg-app border-width-0px \">\n\n                      {\n                        !loading &&\n                          <React.Fragment>\n                            <ArticleUpvote article_id={article_data['id']} article_downvoted={article_downvoted} article_upvoted={this.handleArticleUpvoteClick} />\n                            <ArticleDownvote article_id={article_data['id']} article_upvoted={article_upvoted} article_downvoted={this.handleArticleDownvoteClick} />\n                          </React.Fragment>\n                      }\n\n                      <br />\n\n                      <a\n                        class=\"margin-top-5-percent\"\n                        target=\"_blank\"\n                        href={twitter_link}\n                        onClick={ () => Event(\"Article Sharing\", \"Sharing Article via Twitter Link in Left Sidebar\", \"From Article Page\") }\n                      >\n                        <TwitterLogo />\n                      </a>\n                      <br />\n                      <br />\n                      <a\n                        class=\"margin-top-5-percent\"\n                        target=\"_blank\"\n                        href={reddit_link}\n                        onClick={ () => Event(\"Article Sharing\", \"Sharing Article via Reddit Link in Left Sidebar\", \"From Article Page\") }\n                      >\n                        <RedditLogo />\n                      </a>\n                      <br />\n                      <br />\n                      <a\n                        class=\"margin-top-5-percent\"\n                        target=\"_blank\"\n                        href={linkedin_link}\n                        onClick={ () => Event(\"Article Sharing\", \"Sharing Article via Linkedin Link in Left Sidebar\", \"From Article Page\") }\n                      >\n                        <LinkedInLogo />\n                      </a>\n                      <br />\n                      <br />\n                      <a\n                        class=\"margin-top-5-percent\"\n                        target=\"_blank\"\n                        href={email_link}\n                        onClick={ () => Event(\"Article Sharing\", \"Sharing Article via Email Link in Left Sidebar\", \"From Article Page\") }\n                      >\n                        <EmailLogo />\n                      </a>\n\n                      {\n                        !authenticated &&\n                          <React.Fragment>\n                            <br />\n                            <br />\n                            <Link to=\"/signup\" className=\"article-link\" onClick={() => Event(\"Routing\", \"Opening Signup Page\", \"From Article Page\") }>\n                              <Button\n                                variant=\"outline-secondary\"\n                                size=\"sm\"\n                                className=\"roboto-bold-font\"\n                              >\n                                Signup\n                              </Button>\n                            </Link>\n\n                          </React.Fragment>\n                      }\n                    </ListGroup.Item>\n                  </div>\n                </ListGroup>\n\n              </Col>\n          }\n          <Col lg={8} md={12}  >\n\n            {\n              loading ?\n                <LoaderSpinner />\n              :\n                <React.Fragment>\n                  {\n                    article_data  ?\n                      <React.Fragment>\n                        <h1 className=\"roboto-bold-font\">\n                          {  article_data['title'] }\n                        </h1>\n\n                        <h6 className=\"padding-left-10px roboto-regular-font\">\n                          By { article_data['author']}, <Badge>{ article_date }</Badge>\n                          <div class=\"float-right width-300px\" >\n\n                            <a\n                              class=\" float-right margin-right-5-percent \"\n                              target=\"_blank\"\n                              href={reddit_link}\n                              onClick={ () => Event(\"Article Sharing\", \"Sharing Article via Reddit Link in Left Sidebar\", \"From Article Page\") }\n                            >\n                              <RedditLogo />\n                            </a>\n\n                            <a\n                              class=\" float-right margin-right-5-percent \"\n                              target=\"_blank\"\n                              href={linkedin_link}\n                              onClick={ () => Event(\"Article Sharing\", \"Sharing Article via Linkedin Link in Left Sidebar\", \"From Article Page\") }\n                            >\n                              <LinkedInLogo />\n                            </a>\n\n                            <a\n                              class=\" float-right margin-right-5-percent \"\n                              target=\"_blank\"\n                              href={email_link}\n                              onClick={ () => Event(\"Article Sharing\", \"Sharing Article via Email Link in Left Sidebar\", \"From Article Page\") }\n                            >\n                              <EmailLogo />\n                            </a>\n\n                            <a\n                              class=\" float-right margin-right-5-percent \"\n                              target=\"_blank\"\n                              href={twitter_link}\n                              onClick={ () => Event(\"Article Sharing\", \"Sharing Article via Twitter Link in Title\", \"From Article Page\") }\n                            >\n                              <TwitterLogo />\n                            </a>\n\n\n\n\n                          </div>\n                        </h6>\n\n                        <hr />\n\n                        {/*Displays the body of the article in Rich Text*/}\n                        <div id=\"article_body\">\n                          <RichText text={article_data['body']} classes=\" font-size-19px \"/>\n                        </div>\n\n                      </React.Fragment>\n                    :\n                      <Alert variant=\"dark\">There was an issue loading this article</Alert>\n                  }\n\n                  <br />\n\n                <CommentSection  article_id={this.props.match.params.article_id}/>\n\n              </React.Fragment>\n            }\n          </Col>\n        </Row>\n\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading ,\n    error: state.auth.error ,\n    authenticated: state.auth.token !== null ,\n  };\n};\n\nexport default\n    connect(\n      mapStateToProps,\n\n    )(ArticlePage);\n","import React from \"react\" ;\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport {\n  Card ,\n  ListGroup ,\n  Badge ,\n\n} from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { Event } from \"../../GlobalMisc/Tracking\";\n\n// found at https://www.npmjs.com/package/react-bootstrap-icons\nimport { StarFill  } from 'react-bootstrap-icons';\n\nimport RichText from '../../GlobalMisc/RichText';\n\nimport \"../../../content/css/App.css\";\n\n\n\nclass PinnedArticle extends React.Component {\n\n  render(){\n    return(\n      <ListGroup.Item className=\"bg-app\" >\n        <Link\n          to={'blog/article/'+this.props.pinned_article.id}\n          className=\"article-link\"\n          onClick={() => Event(\"Routing\", \"Opening Pinned Article; id = \" + this.props.pinned_article.id, \"From Home Page\")}\n        >\n          <Card\n            className=\"width-100-percent border-radius-25px \"\n            id={this.props.pinned_article.id}\n          >\n            <Card.Body>\n              <Card.Title className=\"roboto-bold-font\">\n                {this.props.pinned_article.title} <StarFill color=\"royalblue\" className=\"float-right font-size-1-25em\" />\n              </Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted roboto-regular-font\">\n                By {this.props.pinned_article.author}, <Badge>{new Date(this.props.pinned_article.created_date).toDateString() }</Badge>\n              </Card.Subtitle>\n              <Card.Text className=\"roboto-regular-font\" >\n                <RichText text={this.props.pinned_article.body +\"...\" } />\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Link>\n      </ListGroup.Item>\n\n    )\n  }\n\n}\n\n\nexport default PinnedArticle ;\n","import React from \"react\" ;\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport {\n  Container ,\n  Card ,\n  ListGroup ,\n  Button,\n  Col ,\n  Badge ,\n  Alert ,\n  Row ,\n  Navbar ,\n\n} from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { Event, PageView } from \"../GlobalMisc/Tracking\";\n\nimport RichText from '../GlobalMisc/RichText';\nimport LoaderSpinner from '../GlobalMisc/LoaderSpinner'\nimport RegisterEmail from './Misc/RegisterEmail';\nimport PinnedArticle from './Misc/PinnedArticle';\n\nimport {\n  all_articles_url ,\n\n} from \"../../backend-urls.js\" ;\n\nimport \"../../content/css/App.css\";\n\n\n\nclass Home extends React.Component {\n\n  state = {\n    error: null , //stores the error that comes from the backend\n    loading : true , //to determine if the page is loading\n    articles : [] , //stores all of the articles retrieved from the database\n    pinned_article : null , //stores the data for the pinned article\n\n  }\n\n  componentDidMount(){\n    this.setState({\n      loading: true ,\n    })\n    PageView();\n\n    this.handleGetArticles();\n  }\n\n  //retrieves all the articles from the database\n  handleGetArticles = () => {\n    axios\n      .get(all_articles_url)\n      .then(response => {\n\n        //gets all the information for the article with pinned = true. had to put it in here because this function wouldn't set the state fast enough for another method to access it in the componentDidMount.\n        var articles = response.data\n        var pinned_article = []\n        for(var article_id in articles){\n          if (response.data[article_id].pinned ){\n            pinned_article.id = articles[article_id].id ;\n            pinned_article.title = articles[article_id].title ;\n            pinned_article.author = articles[article_id].author ;\n            pinned_article.created_date = articles[article_id].created_date ;\n            pinned_article.body = articles[article_id].body.substring(0, 500) ;\n            break ;\n          }\n        }\n\n        this.setState({\n          loading: false ,\n          articles: response.data ,\n          pinned_article : pinned_article ,\n\n        })\n      })\n      .catch(error => {\n        this.setState({\n          error: error ,\n          loading : false\n        })\n      })\n  }\n\n\n  render(){\n\n    const {\n      loading ,\n      error ,\n      articles ,\n      pinned_article ,\n      username ,\n\n    } = this.state\n\n    const {\n      authenticated ,\n      token ,\n\n    } = this.props\n\n\n    console.log(articles)\n    return(\n\n      <React.Fragment>\n        <Container>\n          <Row>\n            <h1 className=\"ubuntu-bold-font\">\n              The Apollo Blog\n            </h1>\n          </Row>\n          <Row>\n            {/*this nav with the class is used to make the text grey*/}\n            <nav className=\"navbar-light\">\n              <Navbar.Text><h5 className=\"ubuntu-bold-font\">Updates, news, and stories from the future of ecommerce</h5></Navbar.Text>\n            </nav>\n          </Row>\n          <Row>\n            <Col >\n\n            </Col>\n          </Row>\n        </Container>\n        <hr />\n\n        <ListGroup variant=\"flush\" className=\"bg-app\">\n\n            {/* cannot put this inside the \"loading === true\" ternary below for some reason*/\n              loading === false &&\n                /*This prevents the pinned_article from displaying if loading is false... it runs parallel to the logic of LoaderSpinner in the following ternary -> If loading, display the LoaderSpinner and don't display pinned article   */\n                pinned_article !== null &&\n                  <PinnedArticle pinned_article={pinned_article} />\n            }\n            {\n              loading === true ?\n                <LoaderSpinner />\n              :\n                articles.length > 0 ?\n                  articles.map(article =>  (\n                      <ListGroup.Item className=\"bg-app\">\n                        <Link to={'blog/article/'+article.id} className=\"article-link\" onClick={()=> Event(\"Routing\", \"Opening Pinned Article;; id = \" + article.id, \"From Home Page\")}>\n                          <Card\n                            className=\"width-100-percent border-radius-25px \"\n                            id={article.id}\n                          >\n                            <Card.Body>\n                              <Card.Title className=\"roboto-bold-font\">\n                                {article.title}\n                              </Card.Title>\n                              <Card.Subtitle className=\"mb-2 text-muted roboto-regular-font\">\n                                By {article.author}, <Badge>{new Date(article.created_date).toDateString() } </Badge>\n                              </Card.Subtitle>\n                              <Card.Text className=\"roboto-regular-font\" >\n                                <RichText text={article.body.substring(0, 200) + '...'} />\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Link>\n                      </ListGroup.Item>\n                    )\n                  )\n                :\n                  <Alert variant=\"dark\">\n                    There was an error retrieving our articles\n                  </Alert>\n          }\n        </ListGroup>\n      </ React.Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    token : state.auth.token ,\n    authenticated: state.auth.token !== null ,\n    username : state.auth.username\n  }\n}\n\n\nexport default\n  connect(\n    mapStateToProps,\n\n  )(Home) ;\n","import React from \"react\" ;\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport {\n  Container ,\n  Card ,\n  ListGroup ,\n  Button,\n  Col ,\n  Badge ,\n  Alert ,\n  Row ,\n  Navbar ,\n  Form ,\n  InputGroup ,\n  FormControl ,\n\n} from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { Event, PageView } from \"../GlobalMisc/Tracking\";\n\nimport { ConeStriped , CheckCircle  } from 'react-bootstrap-icons';\n\nimport TwitterLogo      from    '../GlobalMisc/TwitterLogo';\nimport RedditLogo       from    '../GlobalMisc/RedditLogo';\nimport LinkedInLogo     from    '../GlobalMisc/LinkedInLogo';\nimport EmailLogo        from    '../GlobalMisc/EmailLogo';\nimport FacebookLogo     from    '../GlobalMisc/FacebookLogo';\n\nimport ButtonLoaderSpinner    from    '../GlobalMisc/ButtonLoaderSpinner'\n\n\nimport {\n  create_email_address_url ,\n\n} from \"../../backend-urls.js\" ;\n\nimport \"../../content/css/App.css\";\n\n\n\n//base on one of these.... -> https://colorlib.com/wp/free-under-construction-templates/\n//I like a mix of V02 and V05\nclass StoreLandingPage extends React.Component {\n\n  state = {\n    error: null , //stores the error that comes from the backend\n    loading : false , //to determine if the page is loading\n    email: \"\" , //stores the email from the \"add email\" widget\n    email_submitted : null , //stores the response value after a user submits their email\n\n  }\n\n\n\n\n\n  handlePostEmailWithGA = () => {\n    Event(\"Register Email\" , \"Register Email Atempt\")\n    this.handlePostEmail()\n  }\n  handlePostEmail = () => {\n    this.setState({\n      loading: true ,\n      error: null ,\n\n    })\n\n    var data = new FormData();\n    data.append('email' , this.state.email) ;\n\n    axios\n      .post(create_email_address_url , data)\n      .then(response => {\n\n        Event(\"Register Email\" , \"Register Email SUCCESS\" )\n        this.setState({\n          email_submitted : true ,\n          loading: false ,\n        })\n\n      })\n      .catch(error => {\n\n        Event(\"Register Email\" , \"Register Email FAIL\" )\n        this.setState({\n          error: error.response.data  ,\n          loading: false ,\n        })\n\n      })\n  }\n\n   handleEmailValidated = () => {\n    var email = this.state.email\n    //these are the most abstract validations that I can think of.. length is greater than 5 (contains an @, a ., and a letter before/after each. ie \"a@b.co\" would pass (I'm not sure if there are top-level domains with single letter so i just required 2 for the tld))\n    var email_length_more_than_four = email.length > 5\n    var email_contains_at = email.includes(\"@\")\n    var email_contains_period = email.includes(\".\")\n\n    return !(email_length_more_than_four && email_contains_at && email_contains_period )\n  }\n\n  handleEmail = (text) => {\n\n    // console.log(text.target.value)\n    this.setState({\n      email: text.target.value\n    });\n\n  }\n\n\n\n  render(){\n    const {\n      error ,\n      loading ,\n      email_submitted ,\n      email ,\n\n    } = this.state\n\n    const twitter_link = \"https://twitter.com/intent/tweet?text=check%20out%20this%20new%20ecommerce%20startup!%20https%3A%2F%2Fwww.apollostore.co/store\"\n    const facebook_link = \"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;src=sdkpreparse \"\n    //\" https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocalhost%3A3000%2Fblog%2Farticle%2F\"+article_data['id']\n    const reddit_link = \"https://www.reddit.com/submit?url=https%3A%2F%2Fwww.apollostore.co/store&title=Check%20Out%20This%20New%20Ecommerce%20Startup \"\n    const email_link = \"mailto:?subject=Check Out This New Ecommerce Startup&body=Check Out This New Ecommerce Startup!%0A%0A They are the first ecommerce site that is accepting Bitcoin and they've got big plans!%0A%0A You can read more about them out at https%3A%2F%2Fwww.apollostore.co/store\"\n    const linkedin_link = \"https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fwww.apollostore.co/store\"\n\n    return(\n      <React.Fragment>\n        <Container>\n\n          <Col xs={{ span: 8, offset: 2 }}>\n            <br />\n            <br />\n            <br />\n            <br />\n            <Row>\n              <h3 className=\"l1-txt1 txt-center p-b-10\">\n                Under\n              </h3>\n            </Row>\n            <Row>\n              <h3 className=\"l1-txt1 txt-center p-b-10\">\n                Construction\n              </h3>\n            </Row>\n            <Row>\n              {/*this nav with the class is used to make the text grey*/}\n              <nav className=\"navbar-light\">\n                <Navbar.Text><h6 className=\" ubuntu-regular-font font-size-24px\">This part of our website is currently under development, sign up below for updates!</h6></Navbar.Text>\n              </nav>\n            </Row>\n\n            <hr />\n\n            <br />\n            <br />\n\n            <Form>\n              <Form.Row className=\"align-items-center\">\n                <Col xs={9}>\n\n                  <Form.Label htmlFor=\"inlineFormInput\" srOnly>Email</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    onChange={this.handleEmail}\n                    value={email}\n                    className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n                    placeholder=\"Email\"\n                  />\n                </Col>\n\n                <Col xs={3}>\n                  {\n                    email_submitted ?\n                      <CheckCircle className=\"text-success font-size-4em\" />\n                    :\n                      loading ?\n                        <Button\n                          disabled={true}\n                          type=\"submit\"\n                          className=\"mb-2 flex-c-m s1-txt4 size3 where1 how-btn \"\n                        >\n                          <ButtonLoaderSpinner />\n                        </Button>\n                      :\n                        <Button\n                          disabled={this.handleEmailValidated()}\n                          onClick={this.handlePostEmailWithGA }\n                          type=\"submit\"\n                          className=\"mb-2 flex-c-m s1-txt4 size3 where1 how-btn \"\n                        >\n                          Submit\n                        </Button>\n                  }\n\n                </Col>\n\n              </Form.Row>\n            </Form>\n\n            <br />\n            <br />\n            <br />\n            <br />\n\n            <h6 className=\"txt-center\">Share us on social media with the links below.</h6>\n            <br />\n            <Row    >\n              <Col xs={{ span: 4, offset: 4 }} >\n                <div class=\"float-right width-300px\" >\n                  <a\n                    class=\" float-right margin-right-5-percent \"\n                    target=\"_blank\"\n                    href={twitter_link}\n                    onClick={ () => Event(\"Article Sharing\", \"Sharing Article via Twitter Link in Left Sidebar\", \"From Article Page\") }\n                  >\n                    <TwitterLogo />\n                  </a>\n\n                  <a\n                    class=\" float-right margin-right-5-percent \"\n                    target=\"_blank\"\n                    href={reddit_link}\n                    onClick={ () => Event(\"Article Sharing\", \"Sharing Article via Reddit Link in Left Sidebar\", \"From Article Page\") }\n                  >\n                    <RedditLogo />\n                  </a>\n\n                  <a\n                    class=\" float-right margin-right-5-percent \"\n                    target=\"_blank\"\n                    href={linkedin_link}\n                    onClick={ () => Event(\"Article Sharing\", \"Sharing Article via Linkedin Link in Left Sidebar\", \"From Article Page\") }\n                  >\n                    <LinkedInLogo />\n                  </a>\n\n                  <a\n                    class=\" float-right margin-right-5-percent \"\n                    target=\"_blank\"\n                    href={email_link}\n                    onClick={ () => Event(\"Article Sharing\", \"Sharing Article via Email Link in Left Sidebar\", \"From Article Page\") }\n                  >\n                    <EmailLogo />\n                  </a>\n                </div>\n              </Col>\n            </Row>\n            <br />\n            <br />\n            <br />\n            <br />\n          </Col>\n\n        </Container>\n\n\n\n      </React.Fragment>\n    )\n  }\n\n}\n\n\n\nexport default StoreLandingPage ;\n","import React from \"react\";\nimport axios from 'axios';\nimport {\n  Container ,\n  Col ,\n  Row ,\n  Form ,\n  Button ,\n  Card ,\n  Alert ,\n\n} from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport {withRouter} from 'react-router';\n\n//for ReactQuill. found at https://github.com/zenoamaro/react-quill\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n\nimport \"../../content/css/App.css\";\nimport {\n  create_article_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\n\n\n\nclass CreateArticle extends React.Component  {\n\n  state = {\n    error: null , //stores the error that comes from the backend\n    loading : false , //to determine if the page is loading\n    author : \"\" , //stores the author (from the author input)\n    title : \"\" , //stores the title (from the title input)\n    body : \"\" , //stores the body (from the body input)\n    article_submitted : false , //to determine if the article was successfully submitted (if true, display a banner at the bottom of the page and redirect the user)\n    countdown: 3 , //countdown to redirect, after the article gets submitted\n\n  }\n\n\n\n  componentDidMount(){\n    this.setState({\n      author: this.props.username ,\n      loading : false\n    })\n  }\n\n  handleTitle = (text) => {\n    this.setState({\n      title: text.target.value\n    });\n  }\n\n  handleBody = (text) => {\n    this.setState({\n      body: text\n    });\n  }\n\n  submitForm = () => {\n\n    // creates a new FormData object and adds all the form data to it\n    var article_data = new FormData();\n    article_data.append('author' , this.props.username) ;\n    article_data.append('title' , this.state.title) ;\n    article_data.append('body' , this.state.body) ;\n\n    var token = 'Token ' + this.props.token ;\n    console.log('token : ' + token  ) ;\n    axios\n      .post(create_article_url , article_data ,\n        {\n          headers: { Authorization: token } //DRF requires the token in the header to create an article\n        }\n      )\n      .then(response => {\n        this.setState({\n          article_submitted : true\n        })\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          error: error ,\n          loading : false\n        })\n      }) ;\n  }\n\n  countdown = ( s ) => {\n      s -= 1 ;\n      this.setState({\n        countdown : s\n      }) ;\n  }\n\n\n  handleValidated = () => {\n    // return (this.state.author.length > 1 && this.state.title.length > 1 && this.state.body.length > 1)\n    return !(this.state.title.length > 1 && this.state.body.length > 1)\n\n  }\n\n\n  modules = {\n    toolbar: [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link', 'image'],\n      ['clean']\n    ],\n  }\n\n  formats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent',\n    'link', 'image'\n  ]\n\n\n  render(){\n    const {\n      author ,\n      title ,\n      body ,\n      article_submitted ,\n      countdown ,\n      error ,\n\n    } = this.state ;\n\n    const {\n      authenticated ,\n      token ,\n\n    } = this.props ;\n\n\n\n    //for counting down the \"redirect\" (redirect in 3.. 2.. 1..)\n    // article_submitted &&\n    //   setInterval(function(){\n    //     s = 5 ;\n    //     this.setState({\n    //\n    //     })\n    //   }  , 1000 );\n\n\n    return(\n\n      <Container>\n        <Row>\n            <Col xs={2}>\n            </Col>\n            <Col xs={8} >\n\n            {\n              !authenticated ? (\n                <React.Fragment>\n                   {/*<meta http-equiv=\"refresh\" content=\"3;url=/\" />*/}\n                  <Alert variant=\"danger\">\n                    How did you get here? Oops. Click here to <a href=\"/blog\">go to Home.</a>\n                  </Alert>\n                </React.Fragment>\n              )\n              :\n              (\n                <React.Fragment>\n                <Card className=\"border-radius-25px \" >\n                  <Card.Body>\n                    <Card.Title as=\"h3\" className=\"roboto-bold-font\" >\n                      Add an Article\n                    </Card.Title>\n                    <hr />\n                    <Card.Text>\n                      <Form>\n                        <Form.Row>\n                          <Form.Label>Article Title:</Form.Label>\n                          <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"Enter Title\"\n                            onChange = {this.handleTitle}\n                          />\n                        </Form.Row>\n                        <br/>\n                        <Form.Row>\n                          <Col>\n                            <Form.Label>Article Body:</Form.Label>\n                            <ReactQuill\n                              required\n                              placeholder=\"Start Writing...\"\n                              onChange={this.handleBody}\n                              className=\"editor_form_control\"\n                              modules={this.modules}\n                              formats={this.formats}\n                              theme=\"snow\"\n                            />\n                          </Col>\n                        </Form.Row>\n                      </Form>\n\n                    </Card.Text>\n                    <br/>\n                    <Button\n                      variant=\"primary\"\n                      onClick={this.submitForm}\n                      disabled={this.handleValidated()}\n                      className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n                    >\n                      Add Article\n                    </Button>\n                  </Card.Body>\n                </Card>\n\n                {\n                  error &&\n                    <React.Fragment>\n                      <br/>\n                      {/*<meta http-equiv=\"refresh\" content=\"3;url=/\" />*/}\n                      <Alert variant=\"danger\">\n                        Nice try buddy\n                      </Alert>\n                    </React.Fragment>\n                }\n                {\n                  article_submitted  &&\n                    <React.Fragment>\n                      <br/>\n                      <meta http-equiv=\"refresh\" content=\"3;url=/\" />\n                      <Alert variant=\"success\">\n                        You successfully created an article! You will be redirected in {countdown} seconds\n                      </Alert>\n                    </React.Fragment>\n                }\n                </React.Fragment>\n              )\n            }\n            </Col>\n        </Row>\n      </Container>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.auth.token)\n  return {\n    loading: state.auth.loading ,\n    error: state.auth.error ,\n    token: state.auth.token ,\n    username: state.auth.username ,\n    authenticated: state.auth.token !== null ,\n  };\n};\n\nexport default\n  withRouter(\n    connect(\n      mapStateToProps,\n\n    )(CreateArticle)\n  );\n","import React from \"react\";\nimport axios from 'axios';\nimport {\n  Container ,\n  Col ,\n  Row ,\n  Form ,\n  Button ,\n  Card ,\n  Alert ,\n\n} from 'react-bootstrap';\n\nimport { connect }            from \"react-redux\";\nimport {withRouter}           from 'react-router';\n\nimport {\n  get_user_email_preferences_url ,\n  create_promotional_email_url ,\n\n} from \"../../../backend-urls.js\" ;\n\nimport { PageView , Event }   from    '../../GlobalMisc/Tracking';\nimport LoaderSpinner          from    \"../../GlobalMisc/LoaderSpinner\"\n\n//for ReactQuill. found at https://github.com/zenoamaro/react-quill\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n\n\n\n\nclass SendEmail extends React.Component  {\n\n  state = {\n    error: null , //stores the error that comes from the backend\n    loading : false , //to determine if the page is loading\n    email_option : \"\" , //stores the option ( col from UserEmailPreferences) of which users to send to\n    subject : \"\" , //stores the subject (from the subject input)\n    body : \"\" , //stores the body (from the body input)\n    recipient : \"\" , //stores the recipients of the email (from the select box)\n    article_submitted : false , //to determine if the article was successfully submitted (if true, display a banner at the bottom of the page and redirect the user)\n    countdown: 3 , //countdown to redirect, after the article gets submitted\n    email_preferences_options : \"\" , //stores the options for the select\n\n  }\n\n  componentDidMount(){\n    this.setState({\n      loading : true\n    })\n\n    PageView() ;\n\n  }\n\n  //has to check that the prop for token has changed (it is originally null)\n  componentDidUpdate(prevProps) {\n    if (this.props.token !== prevProps.token) {\n      this.handleGetEmailPreferencesOptions()\n    }\n  }\n\n  handleGetEmailPreferencesOptions = () => {\n\n    this.setState({\n      loading: true ,\n    })\n\n    console.log(\"inside handleGetEmailPreferencesOptions\")\n\n    const user_id = this.props.user_id ;\n    const auth_token = 'Token ' + this.props.token ;\n\n    console.log(user_id + \" \" + auth_token)\n    //utilizes the same url from UserEmailPreferences Component becuase that already verifies the user's id and Token. We just will be ignoring this user's preferences and only look at the columns\n    axios\n      .get( get_user_email_preferences_url(user_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n\n        this.setState({\n          loading : false ,\n          email_preferences_options : response.data[0] , //have to use [0] because it returns an object of all the preferences. There will only ever be 1 because there will only be 1 User Preferences row per user\n          recipient : Object.keys( response.data[0] )[0] , //set the recipient (value) of the select box to the first key from the response.data. This is so the value is stored in the state even if the user doesn't change the select box\n        })\n\n      })\n      .catch(error => {\n\n        console.log(\"email prefs error: \" + error.data)\n        this.setState({\n          loading : false ,\n          error : error.data\n        })\n\n      })\n  }\n\n\n  handleSubject = (text) => {\n    this.setState({\n      subject: text.target.value\n    });\n  }\n\n  handleBody = (text) => {\n    this.setState({\n      body: text\n    });\n  }\n\n  handleChangeRecipients = (option) => {\n    // console.log(option.target.value)\n    this.setState({\n      recipient: option.target.value\n    });\n  }\n\n\n  submitForm = () => {\n\n\n    Event(\"Send Promotional Email\", \"Send Promotional Email Attempt\", \"From Send Email Page\") ;\n\n    console.log(\"subject : \" + this.state.subject)\n    console.log(\"body : \" + this.state.body)\n    console.log(\"recipient : \" +  this.state.recipient)\n\n    // creates a new FormData object and adds all the form data to it\n    var email_data = new FormData();\n    email_data.append('subject' , this.state.subject) ;\n    email_data.append('body' , this.state.body) ;\n    email_data.append('recipients' , this.state.recipient) ;\n    email_data.append('user' , this.props.user_id) ;\n\n    var token = 'Token ' + this.props.token ;\n\n    console.log('token : ' + token  ) ;\n    axios\n      .post(create_promotional_email_url , email_data ,\n        {\n          headers: { Authorization: token } //DRF requires the token in the header\n        }\n      )\n      .then(response => {\n\n        Event(\"Send Promotional Email\", \"Send Promotional Email SUCCESS\", \"From Send Email Page\") ;\n\n        console.log(response.data);\n        this.setState({\n          article_submitted : true\n        })\n\n      })\n      .catch(error => {\n\n        Event(\"Send Promotional Email\", \"Send Promotional Email FAIL\", \"From Send Email Page\") ;\n\n        console.log(error)\n        this.setState({\n          error: error ,\n          loading : false\n        })\n      }) ;\n\n  }\n\n  //determines if the inputs are valid. Used to toggle the disable on the submit button\n  handleValidated = () => {\n    return !(this.state.subject.length > 1 && this.state.body.length > 1)\n  }\n\n\n  modules = {\n    toolbar: [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link', 'image'],\n      ['clean']\n    ],\n  }\n\n  formats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent',\n    'link', 'image'\n  ]\n\n\n  render(){\n    const {\n      email_preferences_options ,\n      title ,\n      body ,\n      article_submitted ,\n      countdown ,\n      error ,\n      loading ,\n      recipient ,\n\n\n    } = this.state ;\n\n    const {\n      authenticated ,\n      token ,\n\n    } = this.props ;\n\n\n    return(\n\n      <Container>\n        <Row>\n            <Col xs={2}>\n            </Col>\n            <Col xs={8} >\n\n            {\n              !authenticated ? (\n                <React.Fragment>\n                   {/*<meta http-equiv=\"refresh\" content=\"3;url=/\" />*/}\n                  <Alert variant=\"danger\">\n                    How did you get here? Oops. Click here to go <a href=\"/blog\">home.</a>\n                  </Alert>\n                </React.Fragment>\n              )\n              :\n              (\n                loading ?\n                  <LoaderSpinner />\n\n                :\n                <React.Fragment>\n                  <Card className=\"border-radius-25px \" >\n                    <Card.Body>\n                      <Card.Title as=\"h3\" className=\"roboto-bold-font\" >\n                        Send an Email\n                      </Card.Title>\n                      <hr />\n                      <Card.Text>\n                        <Form>\n                          <Form.Row>\n                            <Form.Label>Email Subject:</Form.Label>\n                            <Form.Control\n                              required\n                              type=\"text\"\n                              placeholder=\"Enter Subject\"\n                              onChange = {this.handleSubject}\n                            />\n                          </Form.Row>\n                          <br/>\n                          <Form.Row>\n                            <Form.Label>Recipients</Form.Label>\n                            <Form.Control\n                              as=\"select\"\n                              onChange={this.handleChangeRecipients}\n                              value={recipient}\n                            >\n                              {\n                                Object.entries(email_preferences_options).map(([key, value]) => {\n                                    // replaces the underscores from the value and capitalizes the first letter\n                                    const key_with_spaces = key.replace(/_/g , \" \")\n                                    const key_with_spaces_and_capitalized = key_with_spaces.replace( key_with_spaces.charAt(0) , key_with_spaces.charAt(0).toUpperCase() )\n\n                                    return(\n                                            <option value={key}>{key_with_spaces_and_capitalized}</option>\n                                          )\n                                        }\n                                      )\n                              }\n                            </Form.Control>\n                          </Form.Row>\n                          <br />\n                          <Form.Row>\n                            <Col>\n                              <Form.Label>Email Body:</Form.Label>\n                              <ReactQuill\n                                required\n                                placeholder=\"Start Writing...\"\n                                onChange={this.handleBody}\n                                className=\"editor_form_control\"\n                                modules={this.modules}\n                                formats={this.formats}\n                                theme=\"snow\"\n                              />\n                            </Col>\n                          </Form.Row>\n                        </Form>\n\n                      </Card.Text>\n                      <br/>\n                      <Button\n                        variant=\"primary\"\n                        onClick={this.submitForm}\n                        disabled={this.handleValidated()}\n                        className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n                      >\n                        Send Email\n                      </Button>\n                    </Card.Body>\n                  </Card>\n\n                  {\n                    error &&\n                      <React.Fragment>\n                        <br/>\n                        {/*<meta http-equiv=\"refresh\" content=\"3;url=/\" />*/}\n                        <Alert variant=\"danger\">\n                          Error sending email\n                        </Alert>\n                      </React.Fragment>\n                  }\n                  {\n                    article_submitted  &&\n                      <React.Fragment>\n                        <br/>\n                        <meta http-equiv=\"refresh\" content=\"3;url=/\" />\n                        <Alert variant=\"success\">\n                          You successfully sent an email! You will be redirected in {countdown} seconds\n                        </Alert>\n                      </React.Fragment>\n                  }\n                </React.Fragment>\n              )\n            }\n            </Col>\n        </Row>\n      </Container>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // console.log(state.auth.token)\n  return {\n    loading: state.auth.loading ,\n    error: state.auth.error ,\n    token: state.auth.token ,\n    user_id : state.auth.user_id ,\n    username: state.auth.username ,\n    authenticated: state.auth.token !== null ,\n  };\n};\n\nexport default\n  withRouter(\n    connect(\n      mapStateToProps,\n\n    )(SendEmail)\n  );\n","\nimport React from \"react\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n  Form ,\n\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport {withRouter} from 'react-router';\nimport { Event, PageView} from '../GlobalMisc/Tracking';\n\n\nimport \"../../content/css/App.css\";\nimport { authLogin } from \"../../store/actions/auth\";\n\n\n\n\nclass Login extends React.Component {\n  state = {\n    username: \"\" , //stores the username that is getting entered\n    password: \"\" , //stores the password that is getting entered\n\n  }\n  componentDidMount(){\n    PageView();\n  }\n\n  handleUsername = e => {\n    this.setState({ username : e.target.value });\n  };\n\n  handlePassword = e => {\n    this.setState({ password : e.target.value });\n  };\n\n  //\n  validateForm = () =>  {\n    console.log(this.state.email.length)\n    console.log(this.state.email.length > 0 && this.state.password.length > 8)\n    return this.state.email.length > 0 && this.state.password.length > 8;\n  }\n\n  handleSubmit = (event) => {\n\n    event.preventDefault();\n    const {username, password} = this.state;\n    this.props.login(username, password)\n  }\n\n  render(){\n    const { error, loading, token } = this.props;\n    const { username, password } = this.state;\n\n    //redirects the user to the home page if they are logged in\n    if(token){\n      return <Redirect to='/' />\n    }\n\n\n    // if(error){\n    //   var errors = error.response.data\n    // }\n\n\n    return (\n\n      <div className=\"account-form bg-app\">\n\n        <form onSubmit={this.handleSubmit}>\n          <h3\n            className=\"ubuntu-bold-font\"\n          >\n            Login\n          </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            <Form.Label htmlFor=\"inlineFormInput\" srOnly>\n              Username\n            </Form.Label>\n            <FormControl\n              placeholder=\"Username\"\n              required\n              autoFocus\n              value={username}\n              onChange= {this.handleUsername}\n              className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <Form.Label htmlFor=\"inlineFormInput\" srOnly>\n              Password\n            </Form.Label>\n            <FormControl\n              placeholder=\"Password\"\n              required\n              value={password}\n              onChange= {this.handlePassword}\n              className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button\n            block\n            onClick={() => Event(\"Login\" , \"Login Attempt\" , \"Hit Login Button\")}\n            type=\"submit\"\n            className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n          >\n            Login\n          </Button>\n          <Badge>\n            New to Apollo? <NavLink to=\"/signup\" onClick={() => Event(\"Routing\", \"Opening Signup Page\", \"From Login Page\") } >Signup </NavLink>\n          </Badge>\n          <br/>\n          <Badge>\n            <NavLink\n              to=\"/reset\"\n              onClick={() => Event(\"Routing\", \"Opening reset-password Page\", \"From Login Page\")}\n            >\n              Forgot your password?\n            </NavLink>\n          </Badge>\n          <br />\n          {\n            error &&\n              <Alert variant=\"danger\">\n                {\n                  //loops through all the returned errors and prints them with a bullet\n                  Object.keys(error).map(e => {\n                    return <li>{error[e][0]}</li>\n                  })\n                }\n                {/*error*/}\n              </Alert>\n\n          }\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password)),\n    // mergeCartOnLogin: () => dispatch(mergeCartOnLogin()),\n\n  };\n};\n\nexport default withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(Login)\n  );\n","\nimport React from \"react\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { Event, PageView} from '../GlobalMisc/Tracking';\nimport \"../../content/css/App.css\";\nimport { authSignup } from \"../../store/actions/auth\";\nimport ButtonLoaderSpinner from '../GlobalMisc/ButtonLoaderSpinner'\n\nclass  Signup extends React.Component  {\n  state = {\n    loading: null , //for whne the page is loading\n    error: null , //holds any error with submitting the form\n    email : \"\" , //holds the email value\n    username : \"\" , //holds the email value\n    password : \"\" , //holds the password value\n    confirm_password : \"\" , //holds the confirm_password value\n    passwords_match : true ,\n\n  }\n  componentDidMount(){\n    PageView();\n  }\n\n  //sets the email in the state\n  handleEmail = (e) => {\n    this.setState({\n      email : e.target.value\n    })\n  }\n\n  //sets the username in the state\n  handleUsername = (e) => {\n    this.setState({\n      username : e.target.value\n    })\n  }\n\n  //sets the password into the state and determines if the two password fields match\n  handlePassword = (e) => {\n    if(this.state.confirm_password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        password : e.target.value\n      })\n    }\n  }\n\n  //sets the confirm_password into the state and determines if the two password fields match\n  handleConfirmPassword = (e) => {\n    if(this.state.password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        confirm_password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        confirm_password : e.target.value\n      })\n    }\n  }\n\n  //does a simple validation of the user's input and returns true or false\n  handleValidated = () => {\n    var email_valid = this.state.email.length > 0\n    var username_valid = this.state.username.length > 0\n    var password_valid = this.state.password.length > 8\n    var confirm_password_valid = this.state.confirm_password.length > 8\n    var passwords_match = this.state.password_valid === this.state.confirm_password_valid\n    return email_valid && username_valid && password_valid && confirm_password_valid && passwords_match && this.state.passwords_match  ;\n  }\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {email, username, password , confirm_password} = this.state;\n    // console.log(email) ;\n    this.props.signup(username, email, password , confirm_password)\n  }\n\n  render(){\n\n    const {\n      email ,\n      username ,\n      password ,\n      confirm_password ,\n      passwords_match ,\n\n    } = this.state ;\n\n    const {\n      error ,\n      token ,\n      loading ,\n      success_message ,\n\n    } = this.props ;\n\n\n\n\n    if(error){\n      var errors = error.response.data\n    }\n\n    if(token){\n      return <Redirect to='/' />\n    }\n\n    // console.log(\"error: \" , error)\n    return (\n      <div className=\"account-form bg-app\">\n\n        <form onSubmit={this.handleSubmit}>\n          <h3\n            className=\"ubuntu-bold-font\"\n          >\n            Signup\n          </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            <FormControl\n              placeholder=\"Email\"\n              required\n              autoFocus\n              type=\"email\"\n              value={email}\n              onChange={this.handleEmail}\n              className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n            />\n          </FormGroup>\n          <FormGroup controlId=\"username\" bsSize=\"large\">\n            <FormControl\n              placeholder=\"Username\"\n              required\n              value={username}\n              onChange={this.handleUsername}\n              className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <FormControl\n              placeholder=\"Password\"\n              required\n              value={password}\n              onChange={this.handlePassword}\n              type=\"password\"\n              className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n            />\n          </FormGroup>\n          <FormGroup controlId=\"confirm_password\" bsSize=\"large\">\n            <FormControl\n              placeholder=\"Confirm Password\"\n              required\n              value={confirm_password}\n              onChange={this.handleConfirmPassword}\n              type=\"password\"\n              className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n            />\n          </FormGroup>\n\n          {\n            loading ?\n              <Button\n                block\n                bsSize=\"large\"\n                disabled={true}\n                type=\"submit\"\n                className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n               >\n                <ButtonLoaderSpinner />\n              </Button>\n            :\n              <Button\n                block\n                bsSize=\"large\"\n                disabled={!this.handleValidated()}\n                onClick={() => Event(\"Signup\" , \"Signup Attempt\" , \"Hit Signup Button\")}\n                type=\"submit\"\n                className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n               >\n                Signup\n              </Button>\n\n          }\n\n          <Badge>\n            Already have an account?\n            <NavLink\n              to=\"/login\"\n              onClick={() => Event(\"Routing\", \"Opening Login Page\", \"From Signup Page\") }\n            >\n              Login\n            </NavLink>\n          </Badge>\n\n          {\n            !passwords_match &&\n              <Alert variant=\"danger\">Your passwords must match</Alert>\n          }\n          {\n            success_message &&\n              <Alert variant=\"success\">\n                {\n                  //loops through all the returned errors and prints them with a bullet\n                  Object.keys(success_message).map(e => {\n                    return <li>{success_message[e] }</li>\n                  })\n                }\n              </Alert>\n          }\n          {\n            error &&\n              <Alert variant=\"danger\">\n                {\n                  //loops through all the returned errors and prints them with a bullet\n                  Object.keys(errors).map(e => {\n                    return <li>{errors[e][0]}</li>\n                  })\n                }\n              </Alert>\n          }\n\n\n        </form>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n    success_message : state.auth.success_message ,\n\n  };\n};\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signup: (email, username, password1 , password2) => dispatch(authSignup(email, username, password1 , password2)),\n\n  };\n};\n\nexport default\n  connect(\n    mapStateToProps ,\n    mapDispatchToProps\n  )(Signup) ;\n","import React from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {\n  Container ,\n  Form ,\n  Button ,\n  Alert ,\n  Card ,\n\n} from 'react-bootstrap';\nimport {\n  change_password_url ,\n\n} from \"../../../backend-urls.js\" ;\n\nimport { Event }              from    '../../GlobalMisc/Tracking';\nimport ButtonLoaderSpinner    from    '../../GlobalMisc/ButtonLoaderSpinner';\n\n\nclass ChangePassword extends React.Component {\n\n\n  state = {\n    error : null , //holds error\n    loading : false , //loading\n    old_password : \"\" , //holds the old password from the user input\n    new_password1 : \"\" , //holds the first password from the user input\n    new_password2 : \"\" , //holds the confirm password from user input\n    reset_password : null , //holds the success message from the backen\n    passwords_match : true , //determines if the new passwords match\n\n  }\n\n\n  handleOldPassword = (text) => {\n    console.log(\"old password :\" + text.target.value)\n    this.setState({\n      old_password: text.target.value\n    });\n  }\n\n  handlePassword = (text) => {\n    if(this.state.confirm_password != text.target.value)\n    {\n      this.setState({\n        passwords_match : false ,\n        new_password1 : text.target.value\n      });\n    }else{\n      this.setState({\n        passwords_match : true ,\n        new_password1 : text.target.value\n      });\n    }\n  }\n\n  handleConfirmPassword = (text) => {\n\n    if(this.state.password != text.target.value)\n    {\n      this.setState({\n        passwords_match : false ,\n        new_password2 : text.target.value\n      });\n    }else{\n      this.setState({\n        passwords_match : true ,\n        new_password2 : text.target.value\n      });\n    }\n  }\n\n\n\n  handleChangePasswordWithGA = () => {\n    Event(\"Change Password\", \"Change Password Attempt\", \"Change Password Attempt\" )\n    this.handleChangePassword() ;\n  }\n\n  handleChangePassword = () => {\n    this.setState({\n      loading: true\n    });\n\n    var password_data = new FormData();\n    password_data.append('new_password1' , this.state.new_password1) ;\n    password_data.append('new_password2' , this.state.new_password2) ;\n    password_data.append('old_password' , this.state.old_password) ;\n\n    for (const value of password_data.values()) {\n       console.log(\"value: \" + value);\n    }\n    const auth_token = 'Token ' + this.props.token ;\n    axios\n      .post( \"/rest-auth/password/change/\"  , password_data ,\n        {\n          headers: { Authorization: auth_token } //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        console.log(\"response: \" + response.data )\n        Event(\"Change Password\", \"Change Password SUCCESS\", \"Change Password SUCCESS\" )\n        this.setState({\n          loading : false ,\n          error : null ,\n          reset_password : response.data.detail ,\n          passwords_match : true ,\n        })\n      })\n      .catch(error => {\n        console.log(\"error: \" + error.response.data )\n        Event(\"Change Password\", \"Change Password FAIL\", \"Change Password FAIL\" )\n        this.setState({\n          loading: false ,\n          error : error.response.data ,\n          passwords_match : true ,\n        })\n      })\n  }\n\n  handleValidated = () => {\n    return (this.state.old_password.length > 1 && this.state.new_password2.length > 1 && this.state.new_password1.length > 1 && this.state.new_password2 == this.state.new_password1)\n  }\n\n\n\n  render(){\n    const {\n      error ,\n      loading ,\n      new_password1 ,\n      new_password2 ,\n      old_password ,\n      reset_password ,\n      passwords_match ,\n\n    } = this.state ;\n\n    const {\n      token ,\n\n    } = this.props\n\n\n\n    return(\n\n\n      <Container>\n        <Card className=\"border-radius-25px \" >\n          <Card.Body>\n            <Card.Title>\n              <h5\n                className=\"ubuntu-bold-font\"\n              >\n                Change Your Password\n              </h5>\n            </Card.Title>\n            <hr />\n            <Form.Group >\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Old Password\"\n                onChange={this.handleOldPassword}\n                className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n              />\n            </Form.Group>\n            <Form.Group >\n              <Form.Control\n                type=\"password\"\n                placeholder=\"New Password\"\n                onChange={this.handlePassword}\n                className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n               />\n            </Form.Group>\n            <Form.Group >\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Confirm New Password\"\n                onChange={this.handleConfirmPassword}\n                className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n               />\n            </Form.Group>\n            <Form.Group >\n              {\n                loading ?\n                  <Button\n                    block\n                    bsSize=\"large\"\n                    disabled={\n                      !(this.handleValidated())\n                    }\n                    className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n                  >\n                    <ButtonLoaderSpinner />\n                  </Button>\n                :\n                  <Button\n                    block\n                    bsSize=\"large\"\n                    disabled={\n                      !(this.handleValidated())\n                    }\n                    onClick={this.handleChangePasswordWithGA}\n                    className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n                  >\n                    Change Your Password\n                  </Button>\n              }\n            </Form.Group>\n\n            {\n              !passwords_match &&\n                <React.Fragment>\n                  <br/>\n                  <Alert variant=\"danger\">Your passwords must match</Alert>\n                </React.Fragment>\n            }\n            {\n              reset_password &&\n                <React.Fragment>\n                  <br/>\n                  <Alert variant=\"success\">\n                    {reset_password}\n                  </Alert>\n                </React.Fragment>\n            }\n            {\n              error &&\n                <React.Fragment>\n                  <br/>\n                  <Alert variant=\"danger\">\n                    {\n                      //loops through all the returned errors and prints them with a bullet\n                      Object.keys(error).map(e => {\n                        return <li>{error[e][0]}</li>\n                      })\n                    }\n                  </Alert>\n                </React.Fragment>\n            }\n          </Card.Body>\n        </Card>\n      </Container>\n\n\n\n\n    )\n  }\n}\n\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n    // username : state.auth.username ,\n    token : state.auth.token ,\n    // authenticated: state.auth.token !== null ,\n  }\n}\n\n\n\n\nexport default\n    connect(\n      mapStateToProps ,\n\n    )(ChangePassword) ;\n","import React from 'react';\nimport axios from \"axios\";\n\nimport {\n  Container ,\n  Col ,\n  Row ,\n  Card ,\n\n} from 'react-bootstrap';\n\n\nimport LoaderSpinner    from    '../../GlobalMisc/LoaderSpinner';\n\n\nimport {\n  get_user_details_url ,\n\n} from \"../../../backend-urls.js\" ;\n\n\n\nclass UserInformation extends React.Component {\n\n  state = {\n    error : null , //holds the error\n    loading : true , //to determine if the page is loading\n    account_info : [] , //holds the account info\n    // selected_button : \"change_password\" , //changes whenever a user selected a button. is on the top button by default\n\n  }\n\n\n  componentDidMount(){\n    this.setState({\n      loading: true ,\n    })\n\n    this.handleGetAccount() ;\n  }\n\n\n  handleGetAccount = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    var auth_token = 'Token ' + this.props.token ;\n    axios\n      .get( get_user_details_url ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        // console.log(\"response: \" + response.data)\n        this.setState({\n          loading : false ,\n          account_info : response.data\n        })\n\n      })\n      .catch(error => {\n        // console.log(\"error: \" + error.data)\n        this.setState({\n          loading : false ,\n          erorr : error.data\n        })\n      })\n  }\n\n\n  render(){\n\n    const {\n      error ,\n      loading ,\n      account_info ,\n\n    } = this.state\n\n\n    return(\n      <Container>\n        <Card className=\"border-radius-25px  \">\n          <Card.Body>\n            <Card.Title>\n              <h5\n                className=\"ubuntu-bold-font\"\n              >\n                Account Information\n              </h5>\n            </Card.Title>\n            <hr />\n            {\n              loading ?\n                <LoaderSpinner />\n              :\n                <Row>\n                    <Col sm={{ span: 4 }} className=\"open-sans-bold-font\">\n                      Email:\n                    </Col>\n                    <Col sm={{ span: 8 }} className=\"open-sans-regular-font\">\n                      {account_info['email']}\n                    </Col>\n                    <Col sm={{ span: 4 }} className=\"open-sans-bold-font\">\n                      Username:\n                    </Col>\n                    <Col sm={{ span: 8 }} className=\"open-sans-regular-font\">\n                      {account_info['username']}\n                    </Col>\n                    <Col sm={{ span: 4 }} className=\"open-sans-bold-font\">\n                      Joined:\n                    </Col>\n                    <Col sm={{ span: 8 }} className=\"open-sans-regular-font\">\n                      {!loading && new Date(account_info['date_joined']).toDateString()}\n                    </Col>\n                    <Col sm={{ span: 4 }} className=\"open-sans-bold-font\">\n                      Last Login:\n                    </Col>\n                    <Col sm={{ span: 8 }} className=\"open-sans-regular-font\">\n                      {!loading && new Date(account_info['last_login']).toDateString()}\n                    </Col>\n                </Row>\n            }\n          </Card.Body>\n        </Card>\n      </Container>\n    )\n  }\n\n}\n\n\n\nexport default (UserInformation) ;\n","import React from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {\n  Container ,\n  Form ,\n  Button ,\n  Alert ,\n  Card ,\n\n} from 'react-bootstrap';\nimport {\n  get_user_email_preferences_url ,\n  update_user_email_preferences_url ,\n\n} from \"../../../backend-urls.js\" ;\n\n\nimport { Event }              from    '../../GlobalMisc/Tracking';\nimport ButtonLoaderSpinner    from    '../../GlobalMisc/ButtonLoaderSpinner';\nimport LoaderSpinner          from    '../../GlobalMisc/LoaderSpinner';\n\n//stores the values of the\nvar changed_prefs_data = {}\n\nclass UserEmailPreferences extends React.Component {\n\n  state = {\n    error : null , //holds error\n    loading : false , //loading\n    updated : false , //determines if the user successfully updated their preferences\n    update_loading : false , //set to true while sending new prefs to db.. used to turn on the spinner in the button while loading\n    email_preferences : null , //holds the email preferences objects\n    prefs_edited : false , //determines if preferences were changed. Used to determine if save button should be disabled or not\n\n  }\n\n  componentDidMount(){\n    this.setState({\n      loading: true\n    })\n    this.handleGetUserEmailPreferences()\n  }\n\n  handleGetUserEmailPreferences = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    const user_id = this.props.user_id ;\n    const auth_token = 'Token ' + this.props.token ;\n\n    axios\n      .get( get_user_email_preferences_url(user_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        // console.log(response.data  )\n        //assign the response data into the state. this is used to set the boxes as checkedor u\n        Object.entries( response.data[0] ).map(([key, value]) => {\n            this.setState({\n              [key] : value\n            })\n            //ternary based on value... backend doesn't like \"True\" or \"False\"... wants 1/0\n            changed_prefs_data[key] =  value ? 1 : 0\n            // console.log(changed_prefs_data)\n          }\n        )\n\n        this.setState({\n          loading : false ,\n          email_preferences : response.data[0] //have to use [0] because it returns an object of all the preferences. There will only ever be 1 because there will only be 1 User Preferences row per user\n        })\n      })\n      .catch(error => {\n        console.log(\"email prefs error: \" + error.data)\n        this.setState({\n          loading : false ,\n          error : error.data\n        })\n      })\n\n  }\n\n  // handleInputChangeWithGA = () => {\n  //   Event(\"Change Email Preferences\", \"Change Email Preferences Checkbox\", \"From Profile Page\") ;\n  //   this.handleInputChange()\n  // }\n\n  //handle here -> https://reactjs.org/docs/forms.html#handling-multiple-inputs\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.checked ;\n    const name = target.name;\n\n    Event(\"Change Email Preferences\", \"Change Email Preferences Checkbox\", name) ;\n\n    this.setState({\n      [name]: value ,\n      prefs_edited : true ,\n      updated : false\n    });\n    //ternary based on value... backend doesn't like \"True\" or \"False\"... wants 1/0\n    changed_prefs_data[name] = value ? 1 : 0\n\n    // console.log(changed_prefs_data)\n  }\n\n\n  handleUpdatePreferencesWithGA = () => {\n    Event(\"Change Email Preferences\", \"Submit New Email Preferences Attempt\", \"From Profile Page\") ;\n    this.handleUpdatePreferences()\n  }\n\n  handleUpdatePreferences = () => {\n    // console.log(changed_prefs_data)\n    this.setState({\n      update_loading : true\n    })\n\n\n    const user_id = this.props.user_id ;\n    const auth_token = 'Token ' + this.props.token ;\n\n    axios\n      .put( update_user_email_preferences_url( user_id ) , changed_prefs_data ,\n          {\n            headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n          }\n        )\n      .then(response => {\n        this.setState({\n          loading : false ,\n          updated : true ,\n          update_loading : false\n\n        })\n        Event(\"Change Email Preferences\", \"Submit New Email Preferences SUCCESS\", \"From Profile Page\") ;\n\n\n      })\n      .catch(error => {\n        // console.log(\"update email prefs error: \" + error.data)\n        this.setState({\n          loading : false ,\n          error : error.data ,\n          update_loading : false\n\n        })\n        Event(\"Change Email Preferences\", \"Submit New Email Preferences FAIL\", \"From Profile Page\") ;\n\n      })\n\n\n  }\n\n\n  render(){\n    const {\n      error ,\n      loading ,\n      updated ,\n      email_preferences ,\n      prefs_edited ,\n      update_loading ,\n    } = this.state ;\n\n    const {\n      token ,\n\n    } = this.props\n\n\n    return(\n      <Container>\n      \n        <Card className=\"border-radius-25px  \" >\n          <Card.Body>\n            <Card.Title>\n              <h5\n                className=\"ubuntu-bold-font\"\n              >\n                Email Preferences\n              </h5>\n            </Card.Title>\n            <hr />\n            {\n              loading ?\n                <LoaderSpinner />\n              :\n                email_preferences &&\n                    Object.entries(email_preferences).map(([key, value]) => {\n                        //replaces the underscores from the value and capitalizes the first letter\n                        const key_with_spaces = key.replace(/_/g , \" \")\n                        const key_with_spaces_and_capitalized = key_with_spaces.replace( key_with_spaces.charAt(0) , key_with_spaces.charAt(0).toUpperCase() )\n\n                        return(\n                          <Form.Group >\n                            <Form.Check\n                              name={key}\n                              checked={this.state[key]}\n                              type={\"checkbox\"}\n                              label={key_with_spaces_and_capitalized}\n                              onChange={this.handleInputChange}\n                              bsPrefix=\"form-check open-sans-regular-font\"\n                            />\n                          </Form.Group >\n                        )\n                      }\n                    )\n            }\n            {\n              !loading &&\n                //couldn't fit this inside the ternary above so I had to put it in it's own \"loading\" conditional... idk why (didn't want to cooperate with the React.Fragment)\n                (\n                  update_loading ?\n                  <Form.Group >\n                    <Button\n                      block\n                      bsSize=\"large\"\n                      disabled={true}\n                      className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n                    >\n                      <ButtonLoaderSpinner />\n                    </Button>\n                  </Form.Group >\n                :\n                  <Form.Group >\n                    <Button\n                      block\n                      bsSize=\"large\"\n                      disabled={!prefs_edited}\n                      onClick={this.handleUpdatePreferencesWithGA}\n                      className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n                    >\n                      Save\n                    </Button>\n                  </Form.Group >\n                )\n            }\n            {\n              updated &&\n                <Alert variant=\"success\">Your preferences have been updated</Alert>\n            }\n          </Card.Body>\n        </Card>\n      </Container>\n    )\n\n  }\n\n\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    user_id : state.auth.user_id ,\n    token : state.auth.token ,\n    // authenticated: state.auth.token !== null ,\n  }\n}\n\n\n\n\nexport default\n    connect(\n      mapStateToProps ,\n\n    )(UserEmailPreferences) ;\n","import React from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nimport {\n  Container ,\n  Col ,\n  Row ,\n  Card ,\n\n} from 'react-bootstrap';\n\n\nimport LoaderSpinner    from    '../../GlobalMisc/LoaderSpinner';\n\nimport {\n  get_user_article_upvotes_url ,\n  get_user_article_downvotes_url ,\n  get_user_comment_upvotes_url ,\n  get_user_comment_downvotes_url ,\n  get_user_read_article_url ,\n\n} from \"../../../backend-urls.js\" ;\n\n\n\nclass UserArticleInteractions extends React.Component {\n\n  state = {\n    error : null , //holds the error\n    loading : true , //to determine if the page is loading\n    article_upvotes : null , //holds the user's upvotes\n    article_downvotes : null , //holds the user's downvotes\n    comment_upvotes : null , //holds the number of comment upvotes from the user\n    comment_downvotes : null , //holds the number of downvotes from the user\n    // selected_button : \"change_password\" , //changes whenever a user selected a button. is on the top button by default\n    articles_read : null , //holds the number of articles that the user has read\n  }\n  componentDidMount(){\n    // console.log('token CDM : ' + this.props.token)\n    // console.log('username CDM: ' + this.props.username)\n    this.setState({\n      loading: true ,\n    })\n\n    this.handleGetUserArticleUpvotes() ;\n    this.handleGetUserArticleDownvotes() ;\n    this.handleGetUserCommentUpvotes() ;\n    this.handleGetUserCommentDownvotes() ;\n    this.handleGetUserReadArticle() ;\n  }\n\n  handleGetUserArticleUpvotes = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    const user_id = this.props.user_id ;\n    const auth_token = 'Token ' + this.props.token ;\n    axios\n      .get( get_user_article_upvotes_url(user_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        // console.log(\"response: \" + response.data.length )\n        this.setState({\n          loading : false , //is true bc getting the downvotes comes right after getting this\n          article_upvotes : response.data.length\n        })\n\n      })\n      .catch(error => {\n        // console.log(\"error: \" + error.data)\n        this.setState({\n          loading : true ,\n          error : error.data\n        })\n      })\n  }\n\n\n\n  handleGetUserArticleDownvotes = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    var auth_token = 'Token ' + this.props.token ;\n    axios\n      .get( get_user_article_downvotes_url(this.props.user_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        // console.log(\"response: \" + response.data.length )\n        this.setState({\n          loading : false ,\n          article_downvotes : response.data.length\n        })\n\n      })\n      .catch(error => {\n        // console.log(\"error: \" + error.data)\n        this.setState({\n          loading : false ,\n          error : error.data\n        })\n      })\n  }\n\n  handleGetUserCommentUpvotes = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    var auth_token = 'Token ' + this.props.token ;\n    axios\n      .get( get_user_comment_upvotes_url(this.props.user_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        // console.log(\"response: \" + response.data.length )\n        this.setState({\n          loading : false ,\n          comment_upvotes : response.data.length\n        })\n\n      })\n      .catch(error => {\n        // console.log(\"error: \" + error.data)\n        this.setState({\n          loading : false ,\n          error : error.data\n        })\n      })\n  }\n\n\n  handleGetUserCommentDownvotes = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    var auth_token = 'Token ' + this.props.token ;\n    axios\n      .get( get_user_comment_downvotes_url(this.props.user_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        // console.log(\"article interactions response: \" + response.data.length )\n        this.setState({\n          loading : false ,\n          comment_downvotes : response.data.length\n        })\n\n      })\n      .catch(error => {\n        // console.log(\"article interactions error: \" + error.data)\n        this.setState({\n          loading : false ,\n          error : error.data\n        })\n      })\n  }\n\n  handleGetUserReadArticle = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    var auth_token = 'Token ' + this.props.token ;\n    axios\n      .get( get_user_read_article_url(this.props.user_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        // console.log(\"response: \" + response.data )\n        this.setState({\n          loading : false ,\n          articles_read : response.data.length\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error.data)\n        this.setState({\n          loading : false ,\n          error : error.data\n        })\n      })\n  }\n  render(){\n\n    const {\n      error ,\n      loading ,\n      article_upvotes ,\n      article_downvotes ,\n      comment_upvotes ,\n      comment_downvotes ,\n      articles_read ,\n\n    } = this.state\n\n\n    return(\n      <Container>\n        <Card className=\"border-radius-25px  \" >\n          <Card.Body>\n            <Card.Title>\n              <h5\n                className=\"ubuntu-bold-font\"\n              >\n                Article Interactions\n              </h5>\n            </Card.Title>\n            <hr />\n            {\n            loading ?\n              <LoaderSpinner />\n            :\n              <React.Fragment>\n                <Row>\n                    <Col sm={{ span: 6 }} className=\"open-sans-bold-font\">\n                      Articles Read:\n                    </Col>\n                    <Col sm={{ span: 6 }} className=\"open-sans-italic-font\">\n                      {articles_read}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={{ span: 6 }} className=\"open-sans-bold-font\">\n                      Articles Upvoted:\n                    </Col>\n                    <Col sm={{ span: 6 }} className=\"open-sans-italic-font\">\n                      {article_upvotes}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={{ span: 6 }} className=\"open-sans-bold-font\">\n                      Articles Downvoted:\n                    </Col>\n                    <Col sm={{ span: 6 }} className=\"open-sans-italic-font\">\n                      {article_downvotes}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={{ span: 6 }} className=\"open-sans-bold-font\">\n                      Comments Upvoted:\n                    </Col>\n                    <Col sm={{ span: 6 }} className=\"open-sans-italic-font\">\n                      {comment_upvotes}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={{ span: 6 }} className=\"open-sans-bold-font\">\n                      Comments Downvoted:\n                    </Col>\n                    <Col sm={{ span: 6 }} className=\"open-sans-italic-font\">\n                      {comment_downvotes}\n                    </Col>\n                </Row>\n              </React.Fragment>\n            }\n          </Card.Body>\n        </Card>\n      </Container>\n    )\n  }\n\n}\n\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    token : state.auth.token ,\n    user_id : state.auth.user_id\n  };\n};\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(UserArticleInteractions) ;\n","import React from 'react';\nimport axios from \"axios\";\n\n\nimport {\n  Container ,\n  Col ,\n  Row ,\n  Card ,\n  Button ,\n  Form ,\n\n} from 'react-bootstrap';\n\nimport {Link} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {withRouter} from 'react-router';\n\nimport { Event }        from    '../GlobalMisc/Tracking';\nimport LoaderSpinner    from    '../GlobalMisc/LoaderSpinner';\n\n\n\n\nclass AdminCard extends React.Component {\n\n  state = {\n    error : null , //holds the error\n    loading : true , //to determine if the page is loading\n\n  }\n  componentDidMount(){\n    this.setState({\n      loading: false ,\n    })\n\n  }\n\n\n\n  render(){\n\n    const {\n      error ,\n      loading ,\n\n    } = this.state\n\n    const {\n      token ,\n\n    } = this.props\n\n    return(\n      <Container>\n        <Card className=\"border-radius-25px \" >\n          <Card.Body>\n            <Card.Title>\n              <h5\n                className=\"ubuntu-bold-font\"\n              >\n                Admin\n              </h5>\n              </Card.Title>\n            <hr />\n            {\n              loading ?\n                <LoaderSpinner />\n              :\n                token === \"8eb05e1e2a096148f4686c071328cd1fbdec1904\" &&\n                  <React.Fragment>\n                      <Row>\n                        <Button\n                          block\n\n                          href=\"/create-article\"\n                          onclick={ Event(\"Routing\", \"Opening Write Article Page\", \"From Profile Page\")}\n                          className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n                        >\n                          Write an Article\n                        </Button>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Button\n                          block\n\n                          href=\"/send-email\"\n                          onclick={ Event(\"Routing\", \"Opening Send Email Page\", \"From Profile Page\") }\n                          className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n                        >\n                          Send an Email\n                        </Button>\n                      </Row>\n                  </React.Fragment>\n            }\n          </Card.Body>\n        </Card>\n      </Container>\n    )\n  }\n\n}\n\n\nconst mapStateToProps = state => {\n  console.log(state.auth.token)\n  return {\n    loading: state.auth.loading ,\n    error: state.auth.error ,\n    token: state.auth.token ,\n    username: state.auth.username ,\n    authenticated: state.auth.token !== null ,\n  };\n};\n\nexport default\n  withRouter(\n    connect(\n      mapStateToProps,\n\n    )(AdminCard)\n  );\n","import React from 'react';\nimport axios from \"axios\";\n\nimport {\n  Container ,\n  Card ,\n  ListGroup ,\n  Button,\n  Col ,\n  Badge ,\n  Alert ,\n  Row ,\n  Grid ,\n  Form ,\n\n} from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport {withRouter} from 'react-router';\n\nimport ChangePassword           from    './Misc/ChangePassword' ;\nimport UserInformation          from    './Misc/UserInformation';\nimport UserEmailPreferences     from    './Misc/UserEmailPreferences';\nimport UserArticleInteractions  from    './Misc/UserArticleInteractions';\n\nimport AdminCard                from    '../Admin/AdminCard.js' ;\n\nimport { PageView , Event }     from    '../GlobalMisc/Tracking';\nimport LoaderSpinner            from    '../GlobalMisc/LoaderSpinner';\n\n\nimport {\n  get_user_details_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\nclass Profile extends React.Component {\n  state = {\n    error : null , //holds the error\n    loading : true , //to determine if the page is loading\n    account_info : [] , //holds the account info\n    // selected_button : \"change_password\" , //changes whenever a user selected a button. is on the top button by default\n\n  }\n\n  componentDidMount(){\n    // console.log('token CDM : ' + this.props.token)\n    // console.log('username CDM: ' + this.props.username)\n    this.setState({\n      loading: false ,\n    })\n\n    PageView() ;\n  }\n\n\n\n  handleProfileInfo = () => {\n    switch(this.state.selected_button){\n      case \"change_password\" :\n        return(\n          <React.Fragment>\n            <ChangePassword />\n          </React.Fragment>\n          )\n        break ;\n      case \"email_preferences\" :\n        return(\n          <Container>\n            <h5>Change Your Email Preferences</h5>\n            <hr />\n            <Form.Check\n              type='checkbox'\n              label={`New product alerts`}\n            />\n            <br />\n            <Form.Check\n              type='checkbox'\n              label={`Updates on the progress of our website`}\n            />\n            <br />\n            <Form.Check\n              type='checkbox'\n              label={`Hot Deals`}\n            />\n          </Container>\n\n        )\n        break;\n      default :\n        return(\n          <h5>\n          default case\n          </h5>\n        )\n    }\n  }\n\n  render(){\n    const {\n      error ,\n      loading ,\n      account_info ,\n      selected_button ,\n\n    } = this.state\n\n    const {\n      username ,\n      authenticated ,\n      token ,\n\n    } = this.props\n\n\n\n    console.log(selected_button)\n\n    return(\n      <React.Fragment>\n        {\n          authenticated  ?\n            <Container>\n              <h4\n                className=\"ubuntu-bold-font\"\n              >\n                {username}\n              </h4>\n              <hr />\n              <Row>\n                <Col sm={{ span: 6 }}>\n                  <ListGroup variant=\"flush\" className=\"bg-app\">\n                  {\n                    !loading &&\n                      <React.Fragment>\n                        <ListGroup.Item className=\"bg-app\">\n                          <UserInformation token={token} />\n                        </ListGroup.Item>\n                        <ListGroup.Item className=\"bg-app\">\n                          <UserArticleInteractions token={token} />\n                        </ListGroup.Item>\n                        {/*only display the admin card if the user is me (that is my token)*/\n                          token === \"8eb05e1e2a096148f4686c071328cd1fbdec1904\" &&\n                            <ListGroup.Item className=\"bg-app\">\n                              <AdminCard />\n                            </ListGroup.Item>\n                        }\n                      </React.Fragment>\n                  }\n                  </ListGroup>\n                </Col>\n                <Col sm={{ span: 6}} >\n                  <ListGroup variant=\"flush\" className=\"bg-app\">\n                    <ListGroup.Item className=\"bg-app\">\n                      <ChangePassword />\n                    </ListGroup.Item>\n                    <ListGroup.Item className=\"bg-app\">\n                      <UserEmailPreferences />\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Col>\n              </Row>\n\n            </Container>\n          :\n            <React.Fragment>\n\n\n              <Alert variant=\"secondary\" >\n                <Alert.Heading>Oops! How'd you get here? </Alert.Heading>\n                <hr/>\n                <p className=\"mb-0\">\n                  Are you lost? You can <Alert.Link href=\"/login\" onClick={() => Event(\"Routing\", \"Opening Login Page\", \"From 'user not logged in' section of Profile Page\")}>login</Alert.Link> or <Alert.Link href=\"/signup\" onClick={() => Event(\"Routing\", \"Opening Signup Page\", \"From 'user not logged in' section of Profile Page\") }>signup</Alert.Link>.\n                </p>\n\n              </Alert>\n\n            </React.Fragment>\n\n        }\n      </React.Fragment>\n    )\n  }\n\n}\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n    username : state.auth.username ,\n    token : state.auth.token ,\n    authenticated: state.auth.token !== null ,\n  }\n}\n\nexport default\n  // withRouter(\n    connect(\n      mapStateToProps ,\n\n    )(Profile) ;\n  // );\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\n\nimport { Event, PageView}   from    '../GlobalMisc/Tracking';\nimport LoaderSpinner        from    '../GlobalMisc/LoaderSpinner'\nimport ButtonLoaderSpinner  from    '../GlobalMisc/ButtonLoaderSpinner'\n\n\n\n\nimport \"../../content/css/App.css\";\nimport {\n  reset_password_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\nclass ForgotPassword extends React.Component {\n\n  state = {\n    loading : false , //stores the loading page\n    error : null , //stores any error that would get returned from the backend\n    email : \"\" , //stores the email from the input\n    email_submitted : null , //stores response after user submits their email\n    message : null , //stores the response message\n\n  }\n\n  componentDidMount(){\n    PageView();\n  }\n\n  handleEmail = (e) => {\n    console.log(e.target.value) ;\n    this.setState({email : e.target.value}) ;\n  }\n\n  handleValidated = () => {\n    return !(this.state.email.length > 1  )\n  }\n\n  handleSubmitWithGA = () => {\n    Event(\"Forgot Password\", \"Forgot Password Reset Attempt\", \"From Forgot Password Page\") ;\n    this.handleSubmit()\n  }\n\n  handleSubmit = () => {\n    this.setState({\n      loading: true ,\n\n    })\n\n    var data = new FormData() ;\n    data.append('email' , this.state.email) ;\n    axios\n      .post(reset_password_url , data)\n      .then(response => {\n        console.log(response)\n        Event(\"Forgot Password\", \"Forgot Password Reset SUCCESS\", \"From Forgot Password Page\") ;\n        this.setState({\n          email_submitted : true ,\n          loading : false ,\n          message : response.data.message\n        })\n      })\n      .catch(error => {\n        console.log(error)\n        Event(\"Forgot Password\", \"Forgot Password Reset FAIL\", \"From Forgot Password Page\") ;\n        this.setState({\n          error : error.response.data ,\n          loading : false ,\n\n        })\n      })\n  }\n\n\n  render(){\n    const {\n      loading ,\n      error ,\n      email ,\n      email_submitted ,\n      message ,\n\n    } = this.state ;\n\n    return(\n\n      <div className=\"account-form bg-app\">\n\n          <h3\n            className=\"ubuntu-bold-font\"\n          >\n            Reset Password\n          </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            <FormControl\n              required\n              autoFocus\n              value={email}\n              onChange= {this.handleEmail}\n              className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n              placeholder=\"Email\"\n            />\n          </FormGroup>\n\n          {\n            loading ?\n                <Button\n                  block\n                  bsSize=\"large\"\n                  disabled={true}\n                  className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n                >\n                  <ButtonLoaderSpinner />\n                </Button>\n            :\n              <Button\n                block\n                bsSize=\"large\"\n                disabled={\n                  (this.handleValidated())\n                }\n                onClick={this.handleSubmitWithGA}\n                className=\"mb-2 s1-txt4 flex-c-m size3-without-width how-btn \"\n              >\n                Submit\n              </Button>\n          }\n\n          <br />\n          {\n            email_submitted &&\n              <Alert variant=\"success\">\n                {message}\n              </Alert>\n          }\n          {\n            error &&\n              <Alert variant=\"danger\">\n                There was an error with your submitted email :\n                {error}\n              </Alert>\n          }\n\n      </div>\n\n    )\n  }\n\n\n\n}\n\nexport default ForgotPassword;\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\n\nimport { Event, PageView}   from    '../GlobalMisc/Tracking';\n\nimport LoaderSpinner        from    '../GlobalMisc/LoaderSpinner'\n\nimport \"../../content/css/App.css\";\nimport {\n  set_new_password_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\nclass SetNewPassword extends React.Component {\n\n  state = {\n    loading : false , //determines if the page is laoding\n    error : null , //holds the error that gets returned from the database\n    password : \"\" , //holds the password value\n    confirm_password : \"\" , //holds the confirm_password value\n    passwords_match : true , //if the passwords match\n    success_message : \"\" , //holds the success message from the server\n  }\n\n  componentDidMount(){\n    PageView();\n  }\n\n  //sets the password into the state and determines if the two password fields match\n  handlePassword = (e) => {\n    if(this.state.confirm_password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        password : e.target.value\n      })\n    }\n  }\n\n  //sets the confirm_password into the state and determines if the two password fields match\n  handleConfirmPassword = (e) => {\n    if(this.state.password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        confirm_password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        confirm_password : e.target.value\n      })\n    }\n  }\n\n\n  //does a simple validation of the user's input and returns true or false\n  handleValidated = () => {\n    var password_valid = this.state.password.length > 8\n    var confirm_password_valid = this.state.confirm_password.length > 8\n    var passwords_match = this.state.password_valid === this.state.confirm_password_valid\n    return password_valid && confirm_password_valid && passwords_match && this.state.passwords_match  ;\n  }\n\n\n  handleSubmitWithGA = () => {\n    Event(\"Set New Password\", \"Set New Password Reset Attempt\", \"From Set New Password Page\") ;\n    this.handleSubmit()\n  }\n\n\n  handleSubmit = (event) => {\n    this.setState({\n      loading: true\n    })\n    event.preventDefault();\n    var uid = this.props.match.params.uid ;\n    var token = this.props.match.params.token;\n\n    console.log(uid + \" : \" +token)\n    // creates a new FormData object and adds all the form data to it\n    var password_data = new FormData();\n    password_data.append('new_password1' , this.state.password) ;\n    password_data.append('new_password2' , this.state.confirm_password) ;\n    password_data.append('uid' , uid) ;\n    password_data.append('token' , token) ;\n\n    axios\n      .post(set_new_password_url , password_data)\n      .then(response => {\n        console.log(response)\n        Event(\"Set New Password\", \"Set New Password Reset SUCCESS\", \"From Set New Password Page\") ;\n        this.setState({\n          loading: true ,\n          success_message : response.data.detail\n        })\n      })\n      .catch(error => {\n        console.log(error)\n        Event(\"Set New Password\", \"Set New Password Reset FAIL\", \"From Set New Password Page\") ;\n        this.setState({\n          loading: false ,\n          error: error.response.data ,\n\n        })\n      })\n\n    // const {email, username, password , confirm_password} = this.state;\n    // console.log(email) ;\n    // this.props.signup(username, email, password , confirm_password)\n  }\n\n\n\n  render(){\n    const {\n        error ,\n        loading ,\n        password ,\n        confirm_password ,\n        passwords_match ,\n        success_message ,\n\n    } = this.state\n\n    return(\n\n      <div className=\"account-form bg-app\">\n        <form>\n          <h5>Enter New Password </h5>\n            <hr />\n            <FormGroup controlId=\"password\" bsSize=\"large\">\n              <FormControl\n                placeholder=\"Password\"\n                required\n                value={password}\n                onChange={this.handlePassword}\n                type=\"password\"\n                className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n              />\n            </FormGroup>\n            <FormGroup controlId=\"confirm_password\" bsSize=\"large\">\n              Confirm Password\n              <FormControl\n                placeholder=\"Confirm Password\"\n                required\n                value={confirm_password}\n                onChange={this.handleConfirmPassword}\n                type=\"password\"\n                className=\"mb-2 s1-txt3 placeholder0 wrap-input100 \"\n              />\n            </FormGroup>\n\n            <Button block bsSize=\"large\" disabled={!this.handleValidated()} onClick={this.handleSubmit}>\n              Set New Password\n            </Button>\n\n            <br/>\n\n            {\n              !passwords_match &&\n              <Alert variant=\"danger\">Your passwords must match</Alert>\n            }\n            {\n              success_message &&\n              <Alert variant=\"success\">{success_message}</Alert>\n            }\n            {\n              error &&\n              <Alert variant=\"danger\">\n                {\n                  //loops through all the returned errors and prints them with a bullet\n                  Object.keys(error).map(e => {\n                    return <li>{error[e][0]}</li>\n                  })\n                }\n              </Alert>\n            }\n\n          </form>\n      </div>\n    )\n  }\n\n\n}\n\n\nexport default SetNewPassword ;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {\n  Container ,\n  Row ,\n  Col ,\n\n} from 'react-bootstrap';\n\nimport { Event, PageView} from './GlobalMisc/Tracking';\n\n\n\nclass Careers extends React.Component  {\n\n  componentDidMount(){\n    PageView() ;\n  }\n\n\n  render() {\n    return(\n      <Container >\n\n        <h1 className=\"verdana-font\">\n          Careers With Apollo\n        </h1>\n\n        <hr />\n\n        <p>\n          If you are interested in what we're doing here, send us an email with your resume and skills at <a href=\"mailto:careers@apollo.com\" onClick={() => Event(\"Careers Email Link\" , \"Click Careers Email Link\" , \"From Careers Page\")}>careers@apollo.com</a>\n        </p>\n\n      </Container>\n    )\n  }\n}\n\n\n\nexport default Careers ;\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport { NavLink, Redirect }  from    \"react-router-dom\";\n\nimport { Event, PageView}     from    '../GlobalMisc/Tracking';\n\nimport LoaderSpinner          from    '../GlobalMisc/LoaderSpinner'\n\n\nimport \"../../content/css/App.css\";\nimport {\n  verify_email_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\nclass VerifyEmail extends React.Component {\n\n  state = {\n    loading : false , //determines if the page is laoding\n    error : null , //holds the error that gets returned from the database\n    password : \"\" , //holds the password value\n    email_confirmed : null , //holds the return value if the key was confirmed (if the user opens the link)\n  }\n\n  componentDidMount(){\n    PageView();\n    this.handlePostAccountKey();\n  }\n\n\n  handlePostAccountKey = () => {\n\n    this.setState({\n      loading: true ,\n      error: null ,\n\n    })\n\n    Event(\"Register Account\" , \"Register Account Atempt\")\n\n    var key = this.props.match.params.key ;\n\n    var data = new FormData();\n    data.append('key' , key) ;\n\n    axios\n      .post(verify_email_url , data)\n      .then(response => {\n        console.log(response.data)\n        Event(\"Register Account\" , \"Register Account SUCCESS\" )\n        this.setState({\n          email_confirmed : true ,\n          loading:false ,\n        })\n\n      })\n      .catch(error => {\n        console.log(error.data)\n        console.log(error)\n        Event(\"Register Account\" , \"Register Account FAIL\" )\n        this.setState({\n          error: error.response.data  ,\n          loading: false ,\n        })\n\n      })\n  }\n\n\n  render(){\n    const {\n        error ,\n        loading ,\n        password ,\n        email_confirmed ,\n\n    } = this.state\n\n    return(\n\n      <React.Fragment>\n\n        <div className=\"account-form bg-app\">\n\n          <h3\n            className=\"ubuntu-bold-font\"\n          >\n            Account Verification\n          </h3>\n          <hr />\n\n          {\n            loading ?\n              <LoaderSpinner />\n            :\n              email_confirmed &&\n                <Alert variant=\"success\">\n                  Your account has been confirmed! <NavLink to=\"/login\" onClick={() => Event(\"Routing\", \"Opening Login Page\", \"From Verify Email Page\") }>Login </NavLink>\n                </Alert>\n          }\n\n          {\n            error &&\n              <Alert variant=\"danger\">\n                There was an error with confirming your account. The link you tried may be expired or incorrect. You can try to <NavLink to=\"/signup\" onClick={() => Event(\"Routing\", \"Opening Signup Page\", \"From Verify Email Page\") }>signup </NavLink> again.\n              </Alert>\n          }\n        </div>\n\n      </React.Fragment>\n\n\n\n\n    )\n\n  }\n\n}\n\n\nexport default VerifyEmail ;\n","import React from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport Hoc from \"./hoc/hoc\";\n\nimport ArticlePage          from \"./containers/Blog/ArticlePage\";\nimport Home                 from './containers/Blog/Home' ;\nimport StoreLandingPage     from './containers/Blog/StoreLandingPage' ;\n\nimport CreateArticle        from './containers/Admin/CreateArticle';\nimport SendEmail            from './containers/Admin/Misc/SendEmail';\n\nimport Login                from './containers/Account/Login';\nimport Signup               from './containers/Account/Signup';\nimport Profile              from './containers/Account/Profile';\nimport ForgotPassword       from './containers/Account/ForgotPassword';\nimport SetNewPassword       from './containers/Account/SetNewPassword';\nimport Careers              from './containers/Careers';\nimport VerifyEmail          from './containers/Account/VerifyEmail';\n\nimport UserEmailPreferences from './containers/Account/Misc/UserEmailPreferences';\n\n\nconst BaseRouter = () => (\n  <Hoc>\n    <Route exact path=\"/store\" component={StoreLandingPage}/>\n    <Route exact path=\"/\" >\n        <Redirect to=\"/blog\" />\n    </Route >\n\n    <Route exact path=\"/blog\" component={Home} />\n\n    <Route exact path=\"/profile\" component={Profile} />\n    <Route exact path=\"/blog/article/:article_id\" component={ArticlePage} />\n    <Route exact path=\"/signup\" component={Signup} />\n    <Route exact path=\"/login\" component={Login} />\n    <Route exact path=\"/create-article\" component={CreateArticle} />\n    <Route exact path=\"/send-email\" component={SendEmail} />\n    <Route exact path=\"/reset\" component={ForgotPassword} />\n    <Route exact path=\"/reset/:uid/:token\" component={SetNewPassword}/>\n    <Route exact path=\"/careers\" component={Careers} />\n    <Route exact path=\"/verify-email/:key\" component={VerifyEmail}/>\n\n    <Route exact path=\"/email-prefs\" component={UserEmailPreferences}/>\n\n  </Hoc>\n);\n\nexport default BaseRouter;\n","import React from 'react';\nimport {BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport 'bootstrap/dist/css/bootstrap.min.css' ;\nimport {\n  Container ,\n\n} from 'react-bootstrap';\nimport {PageView, initGA} from './containers/GlobalMisc/Tracking';\n\nimport * as actions from \"./store/actions/auth\";\nimport NavigationBar from \"./containers/Layout/NavigationBar\";\nimport Footer from \"./containers/Layout/Footer\";\nimport BaseRouter from \"./routes\";\n// import ReactGA from 'react-ga';\n// import {PageView, initGA} from './containers/Misc/Tracking';\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    //keeps the token in redux state from getting erased on page reload\n    this.props.checkState();\n    initGA('UA-163650811-1');\n    PageView();\n  }\n\n  render() {\n    return(\n      <div className=\"bg-app\" >\n        <Router >\n\n            <NavigationBar/>\n              <Container >\n                <BaseRouter/>\n              </Container>\n            <Footer />\n\n        </Router>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkState: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n//updates the oldObject object with the properties from updatedProperties\nexport const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n// import {\n//   removeCartOnLogout,\n// } from \"../actions/cart\";\n\n\n\n//staff is deprecated but i'm leaving it because it'll eventually be replaced with \"role\" or \"privs\" or something to insight role based authentication\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n  username: null ,\n  user_id: 0 ,\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\n\nconst authSuccess = (state, action) => {\n\n  return updateObject(state, {\n    token: action.token ,\n    username: action.username ,\n    user_id: action.user_id ,\n    success_message : action.success_message ,\n    error: null ,\n    loading: false ,\n\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    success_message : null ,\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n\n  return updateObject(state, {\n    token : null ,\n    user_id : 0 ,\n\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport authReducer from \"./store/reducers/auth\";\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhances(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n\nReactDOM.render( app , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}