{"version":3,"sources":["backend-urls.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Layout/NavigationBar.js","containers/Layout/Footer.js","hoc/hoc.js","containers/Misc/TwitterLogo.js","containers/Misc/FacebookLogo.js","containers/Misc/LoaderSpinner.js","containers/Misc/RegisterEmail.js","containers/Misc/RichText.js","containers/Misc/CommentUpvote.js","containers/Misc/CommentDownvote.js","containers/Misc/ArticleComment.js","containers/Misc/CommentSection.js","containers/Misc/ArticleUpvote.js","containers/Misc/ArticleDownvote.js","containers/ArticlePage.js","containers/Home.js","containers/CreateArticle.js","containers/Account/Login.js","containers/Account/Signup.js","containers/Misc/ChangePassword.js","containers/Misc/UserInformation.js","containers/Misc/UserArticleInteractions.js","containers/Account/Profile.js","containers/Account/ForgotPassword.js","containers/Account/SetNewPassword.js","containers/Careers.js","routes.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["article_url","id","endpoint","remove_comment_upvote_url","upvote","get_comment_upvotes_url","comment_id","remove_comment_downvote_url","downvote","get_comment_downvotes_url","remove_article_upvote_url","get_article_upvotes_url","article_id","remove_article_downvote_url","get_article_downvotes_url","get_user_article_upvotes_url","user_id","get_user_article_downvotes_url","get_user_comment_upvotes_url","get_user_comment_downvotes_url","get_user_read_article_url","authSuccess","token","username","type","authFail","error","checkAuthTimeout","expirationTime","dispatch","setTimeout","NavigationBar","this","props","authenticated","loading","Fragment","Navbar","expand","className","Container","Brand","onClick","history","push","style","cursor","Toggle","aria-controls","Collapse","Text","Nav","Link","href","logout","React","Component","withRouter","connect","state","auth","localStorage","removeItem","Footer","sticky","Date","getFullYear","Hoc","children","TwitterLogo","width","height","class","d","FacebookLogo","LoaderSpinner","Spinner","animation","role","RegisterEmail","email","email_submitted","handlePostEmail","setState","data","FormData","append","axios","post","then","response","catch","handleEmailValidated","email_length_more_than_four","length","email_contains_at","includes","email_contains_period","handleEmail","text","target","value","handleClosePopover","alert","document","getElementById","click","email_popover","Popover","Title","as","Content","Row","Col","Form","Control","placeholder","onChange","color","Button","disabled","variant","OverlayTrigger","trigger","placement","direction","overlay","Badge","RichText","classes","dangerouslySetInnerHTML","__html","CommentUpvote","upvoted","upvote_id","number_of_upvotes","upvotes","handleGetUpvotes","get","forEach","user","parseInt","console","log","handleRemoveUpvote","auth_token","delete","headers","Authorization","comment_upvoted","handleCreateUpvote","upvote_data","code","handleUpvoteClick","comment_downvoted","size","CommentDownvote","downvoted","downvote_id","number_of_downvotes","downvotes","handleGetDownvotes","handleRemoveDownvote","handleCreateDownvote","downvote_data","handleDownvoteClick","ArticleComment","handleCommentUpvoteClick","handleCommentDownvoteClick","Card","Body","comment","author","Subtitle","created_date","toDateString","body","CommentSection","commenter_name","comment_body","comment_submitted","handleCommentBody","handleCommenterName","handlePostComment","comment_data","handleValidateComment","comments","map","Alert","Header","Label","ArticleUpvote","article_upvoted","article_downvoted","ArticleDownvote","ArticlePage","article_data","handleGetArticle","match","params","handleCreateUserReadArticle","user_read_article_data","getItem","handleArticleUpvoteClick","handleArticleDownvoteClick","article_date","apollo_div","getElementsByTagName","onscroll","e","documentElement","scrollTop","classList","add","remove","twitter_link","facebook_link","xs","ListGroup","Item","to","backgroundColor","paddingTop","paddingBottom","paddingLeft","borderRadius","Home","articles","pinned_article","handleGetArticles","pinned","title","substring","article","CreateArticle","article_submitted","countdown","handleAuthor","handleTitle","handleBody","submitForm","s","handleValidated","modules","toolbar","formats","required","theme","http-equiv","content","Login","password","handleUsername","handlePassword","validateForm","handleSubmit","event","preventDefault","login","errors","onSubmit","FormGroup","controlId","bsSize","FormControl","autoFocus","block","Object","keys","res","key","expirationDate","getTime","setItem","err","authLogin","Signup","confirm_password","passwords_match","handleConfirmPassword","email_valid","username_valid","password_valid","confirm_password_valid","signup","password1","password2","authSignup","ChangePassword","old_password","new_password1","new_password2","reset_password","handleOldPassword","handleChangePassword","password_data","values","detail","Group","UserInformation","account_info","handleGetAccount","erorr","sm","span","UserArticleInteractions","article_upvotes","article_downvotes","comment_upvotes","comment_downvotes","articles_read","handleGetUserArticleUpvotes","handleGetUserArticleDownvotes","handleGetUserCommentUpvotes","handleGetUserCommentDownvotes","handleGetUserReadArticle","Profile","handleProfileInfo","selected_button","Check","label","ForgotPassword","message","SetNewPassword","success_message","uid","Careers","BaseRouter","exact","path","component","App","checkState","isAuthenticated","undefined","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","authStart","action","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0308f62e.chunk.js","sourcesContent":["\n\n//export const endpoint_without_api = `http://127.0.0.1:8000/` ;\n// export const endpoint = `http://127.0.0.1:8000/api/`;\nexport const endpoint = `/api/`;\n\n\n\nexport const all_articles_url =     endpoint+`all-articles/` ;\nexport const article_url = (id) =>  endpoint+`article/`+id+`/` ;\n\nexport const create_article_url = endpoint+ `create-article/` ;\nexport const create_email_url = endpoint+ `create-email/` ;\n\nexport const create_comment_url = endpoint+'create-comment/' ;\n\nexport const login_url = endpoint+`login/`;\nexport const signup_url = endpoint+`signup/` ;\n\n\nexport const create_comment_upvote_url = endpoint+`create-comment-upvote/` ;\nexport const remove_comment_upvote_url = (upvote) => endpoint+`remove-comment-upvote/` + upvote ;\nexport const get_comment_upvotes_url = (comment_id) => endpoint+'comment-upvote/' + comment_id + '/';\n\nexport const create_comment_downvote_url = endpoint+`create-comment-downvote/` ;\nexport const remove_comment_downvote_url = (downvote) => endpoint+`remove-comment-downvote/` + downvote ;\nexport const get_comment_downvotes_url = (comment_id) => endpoint+'comment-downvote/' + comment_id + '/';\n\n\nexport const create_article_upvote_url = endpoint+`create-article-upvote/` ;\nexport const remove_article_upvote_url = (upvote) => endpoint+`remove-article-upvote/` + upvote ;\nexport const get_article_upvotes_url = (article_id) => endpoint+'article-upvote/' + article_id + '/';\n\nexport const create_article_downvote_url = endpoint+`create-article-downvote/` ;\nexport const remove_article_downvote_url = (downvote) => endpoint+`remove-article-downvote/` + downvote ;\nexport const get_article_downvotes_url = (article_id) => endpoint+'article-downvote/' + article_id + '/';\n\nexport const get_user_details_url = endpoint+`user-details/` ;\nexport const get_user_article_upvotes_url = (user_id) => endpoint + 'user-article-upvote/' + user_id + '/' ;\nexport const get_user_article_downvotes_url = (user_id) => endpoint + 'user-article-downvote/' + user_id + '/' ;\nexport const get_user_comment_upvotes_url = (user_id) => endpoint + 'user-comment-upvote/' + user_id + '/' ;\nexport const get_user_comment_downvotes_url = (user_id) => endpoint + 'user-comment-downvote/' + user_id + '/' ;\n\n\nexport const create_user_read_article_url = endpoint+`create-user-read-article/` ;\nexport const get_user_read_article_url = (user_id) => endpoint+`user-read-article/`+user_id+'/' ;\n\n\nexport const reset_password_url = endpoint+`password-reset/`;\n\n\n\n\nexport const set_new_password_url =  `http://127.0.0.1:8000/rest-auth/password/reset/confirm/` ;\n\nexport const get_user_info_url =  `http://127.0.0.1:8000/rest-auth/user/` ;\n\nexport const change_password_url =  `http://127.0.0.1:8000/password-change/` ;\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport {\n    signup_url ,\n    login_url ,\n\n} from '../../backend-urls' ;\n// import {\n//   mergeCartOnLogin,\n//   removeCartOnLogout,\n// } from \"./cart\";\n\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token , username , user_id) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username : username,\n    user_id : user_id\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(login_url, {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.key;\n        const user_id = res.data.user_id;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"user_id\", user_id);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token , username , user_id));\n        dispatch(checkAuthTimeout(10000));\n\n        //merges the cart when the user logs in. mergeCartOnLogin is located in actions/cart.js\n        // dispatch( mergeCartOnLogin(token) )\n\n      })\n      .catch(err => {\n        // console.log(err.response.data.non_field_errors)\n        dispatch(authFail(err));\n      });\n  };\n};\n\n\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(signup_url, {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 86400 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token , username , false));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\n//added username to the authSuccess part and in the parameters of the function on 11/5/19\nexport const authCheckState = (username) => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    const user_id = localStorage.getItem(\"user_id\") ;\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token , username , user_id));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n\n\n\n\nexport const logoutUser = () => {\n    return dispatch => {\n      //removes the user token, expiration date, staff status, and username from local storage\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"expirationDate\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"staff\");\n      localStorage.removeItem(\"user_id\");\n      dispatch( logout() )\n    }\n}\n\n\n\n\n//deprecated (from other apollo code)\nexport const logoutRemoveCart = () => {\n  const token = localStorage.getItem('token')\n  //removes the token and expiration date from local storage\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n\n  console.log('TOKEN: ', token)\n  return dispatch => {\n    //calls removeCartOnLogout() from actions/cart.js\n    // dispatch( removeCartOnLogout(token) )\n    dispatch( logout() )\n  }\n}\n","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\n\nexport const EMAIL_START = \"EMAIL_START\" ;\nexport const EMAIL_SUCCESS = \"EMAIL_SUCCESS\";\nexport const EMAIL_FAIL = \"EMAIL_FAIL\";\nexport const EMAIL_LOGOUT = \"EMAIL_LOGOUT\";\n","import React from \"react\" ;\nimport {withRouter} from 'react-router';\nimport {\n  Navbar ,\n  Nav ,\n  Container ,\n\n} from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport {\n  logoutUser ,\n\n} from \"../../store/actions/auth\";\n\n\nclass NavigationBar extends React.Component {\n\n  render(){\n    const { error, loading , authenticated , username } = this.props;\n\n    return (\n      <React.Fragment >\n        <Navbar expand=\"lg\" className=\"bg-navbar\">\n          <Container >\n            <Navbar.Brand\n\n              onClick={() => this.props.history.push('/')}\n              style={{cursor: 'pointer'}}\n            >\n              <h4 className=\"verdana-font \">\n                Apollo\n              </h4>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse className=\"justify-content-end \" id=\"basic-navbar-nav\">\n                {\n                  authenticated ?\n                    <React.Fragment>\n                      <Navbar.Text>\n                        <Nav.Link href=\"/profile\">Hello, {username}!</Nav.Link>\n                      </Navbar.Text>\n                      <Navbar.Text>\n                        <Nav.Link onClick={ () => this.props.logout() }>Logout</Nav.Link>\n                      </Navbar.Text>\n                    </React.Fragment>\n                  :\n                    <React.Fragment>\n                      <Navbar.Text>\n                        <Nav.Link href=\"/login\">Login</Nav.Link>\n                      </Navbar.Text>\n                      <Navbar.Text>\n                        <Nav.Link href=\"/signup\">Signup</Nav.Link>\n                      </Navbar.Text>\n                    </React.Fragment>\n                }\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n        <br/>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading ,\n    error: state.auth.error ,\n    authenticated: state.auth.token !== null ,\n    username : state.auth.username ,\n\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: (token) => dispatch(logoutUser(token))\n  };\n};\n\n\nexport default\n  withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )\n    (NavigationBar)\n  );\n","import React from \"react\" ;\nimport {\n  Container ,\n  Navbar ,\n  Nav ,\n\n} from 'react-bootstrap';\n\nimport \"../../content/css/App.css\";\n\n\nfunction Footer() {\n\n  return (\n    <Navbar sticky=\"bottom\" className=\"footer\">\n      <Container>\n        <Navbar.Text >&copy; {new Date().getFullYear()} - Apollo</Navbar.Text>\n        <Nav>\n          <Navbar.Text ><Nav.Link href=\"#\">Legal</Nav.Link></Navbar.Text>\n          <Navbar.Text ><Nav.Link href=\"#\">Privacy</Nav.Link></Navbar.Text>\n          <Navbar.Text ><Nav.Link href=\"/careers\">Careers</Nav.Link></Navbar.Text>\n        </Nav>\n      </Container>\n    </Navbar>\n  );\n}\n\n\n\nexport default Footer;\n","const Hoc = props => props.children;\n\nexport default Hoc;\n","import React from 'react';\n\n\nfunction TwitterLogo() {\n  return (\n\n    <svg width=\"29\" height=\"29\" class=\"q\">\n      <path d=\"M22.05 7.54a4.47 4.47 0 0 0-3.3-1.46 4.53 4.53 0 0 0-4.53 4.53c0 .35.04.7.08 1.05A12.9 12.9 0 0 1 5 6.89a5.1 5.1 0 0 0-.65 2.26c.03 1.6.83 2.99 2.02 3.79a4.3 4.3 0 0 1-2.02-.57v.08a4.55 4.55 0 0 0 3.63 4.44c-.4.08-.8.13-1.21.16l-.81-.08a4.54 4.54 0 0 0 4.2 3.15 9.56 9.56 0 0 1-5.66 1.94l-1.05-.08c2 1.27 4.38 2.02 6.94 2.02 8.3 0 12.86-6.9 12.84-12.85.02-.24 0-.43 0-.65a8.68 8.68 0 0 0 2.26-2.34c-.82.38-1.7.62-2.6.72a4.37 4.37 0 0 0 1.95-2.51c-.84.53-1.81.9-2.83 1.13z\">\n      </path>\n    </svg>\n\n  )\n}\n\nexport default TwitterLogo\n","import React from 'react';\n\nfunction FacebookLogo() {\n  return (\n    <svg width=\"29\" height=\"29\" class=\"q\">\n      <path d=\"M23.2 5H5.8a.8.8 0 0 0-.8.8V23.2c0 .44.35.8.8.8h9.3v-7.13h-2.38V13.9h2.38v-2.38c0-2.45 1.55-3.66 3.74-3.66 1.05 0 1.95.08 2.2.11v2.57h-1.5c-1.2 0-1.48.57-1.48 1.4v1.96h2.97l-.6 2.97h-2.37l.05 7.12h5.1a.8.8 0 0 0 .79-.8V5.8a.8.8 0 0 0-.8-.79\"></path>\n    </svg>\n  )\n}\n\nexport default FacebookLogo\n","import React from 'react';\nimport {Spinner} from 'react-bootstrap';\n\n//text is what gets passed in. should be used like : <RichText text={example_rich_text} />\nfunction LoaderSpinner() {\n  return  (\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default LoaderSpinner ;\n","import React from 'react';\nimport axios from \"axios\";\n\nimport {\n  Button,\n  Popover ,\n  OverlayTrigger ,\n  Badge ,\n  Row ,\n  Col ,\n  Form,\n\n} from 'react-bootstrap';\nimport { CheckCircle } from 'react-bootstrap-icons';\nimport LoaderSpinner from './LoaderSpinner'\n\nimport \"../../content/css/App.css\";\nimport {\n  create_email_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\n//text is what gets passed in. should be used like : <RichText text={example_rich_text} />\nclass RegisterEmail extends React.Component {\n\n  state = {\n    error: null , //stores the error that comes from the backend\n    loading : false , //to determine if the page is loading\n    email: \"\" , //stores the email from the \"add email\" widget\n    email_submitted : null , //stores the response value after a user submits their email\n\n  }\n\n   handlePostEmail = () => {\n    this.setState({\n      loading: true ,\n      error: null ,\n\n    })\n\n    var data = new FormData();\n    data.append('email' , this.state.email) ;\n\n    axios\n      .post(create_email_url , data)\n      .then(response => {\n        this.setState({\n          email_submitted : true ,\n          loading:false ,\n        })\n      })\n      .catch(error => {\n        this.setState({\n          error: error.response.data  ,\n          loading: false ,\n        })\n      })\n  }\n\n   handleEmailValidated = () => {\n    var email = this.state.email\n    //these are the most abstract validations that I can think of.. length is greater than 5 (contains an @, a ., and a letter before/after each. ie \"a@b.co\" would pass (I'm not sure if there are top-level domains with single letter so i just required 2 for the tld))\n    var email_length_more_than_four = email.length > 5\n    var email_contains_at = email.includes(\"@\")\n    var email_contains_period = email.includes(\".\")\n\n    return !(email_length_more_than_four && email_contains_at && email_contains_period )\n  }\n\n   handleEmail = (text) => {\n    this.setState({\n      email: text.target.value\n    });\n  }\n\n  handleClosePopover = () => {\n    alert('blurred')\n    document.getElementById(\"emailBadge\").click()\n  }\n\n  render(){\n\n    const {\n      error ,\n      loading ,\n      email_submitted ,\n    } = this.state\n\n      //for email popover\n      const email_popover = (\n        <Popover\n          id=\"popover-basic\"\n          className=\"max-width-800px\"\n          // onBlur={() => {\n          //   document.getElementById(\"emailBadge\").click()\n          // }}\n        >\n          <Popover.Title as=\"h3\">Email Updates</Popover.Title>\n          <Popover.Content >\n              <Row >\n                <Col>\n                  <Form.Control\n                    // style={{width:'200px'}}\n                    className=\"width-250px\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    onChange={this.handleEmail}\n                  />\n                  {\n                    error&&\n                      <small style={{color:'red'}} >{error}</small>\n                    }\n                </Col>\n                <Col>\n                  {\n                    email_submitted ?\n                      <CheckCircle className=\"text-success font-size-2-5em\" />\n                    :\n                      loading ?\n                          <Button\n                            disabled={true}\n                            variant=\"primary\"\n                            type=\"submit\"\n                            onClick={this.handlePostEmail }\n                            className=\"float-right\"\n                          >\n                            <LoaderSpinner />\n                          </Button>\n                      :\n                        <Button\n                          disabled={this.handleEmailValidated()}\n                          variant=\"primary\"\n                          type=\"submit\"\n                          onClick={this.handlePostEmail }\n                          className=\"float-right\"\n                        >\n                          Submit\n                        </Button>\n                  }\n                </Col>\n              </Row>\n          </Popover.Content>\n        </Popover>\n      )\n\n\n\n    return (\n        <OverlayTrigger\n          trigger='click'\n          placement={this.props.direction}\n          overlay={email_popover}\n\n        >\n          <Badge\n            id=\"emailBadge\"\n            className=\"font-size-10px\"\n            style={{cursor: 'pointer' , }}\n          >\n            {this.props.text}\n          </Badge>\n        </OverlayTrigger>\n    )\n\n  }\n\n}\n\nexport default RegisterEmail ;\n","import React from 'react';\n\n\n//text is what gets passed in. should be used like : <RichText text={example_rich_text} />\nfunction RichText(props) {\n  var classes = \"\"\n\n  if(props.classes){\n    classes = props.classes\n  }\n\n  return <div className={classes} dangerouslySetInnerHTML={{__html: props.text}} />\n}\n\nexport default RichText ;\n","import React from \"react\" ;\nimport axios from \"axios\";\n\nimport {\n  Badge ,\n\n} from 'react-bootstrap';\nimport { ChevronUp } from 'react-bootstrap-icons';\n\nimport { connect } from \"react-redux\";\n\nimport {\n  create_comment_upvote_url ,\n  remove_comment_upvote_url ,\n  get_comment_upvotes_url ,\n\n} from \"../../backend-urls.js\" ;\n//should get triggered if the user enteres a URL that is nonexistant..\n//if they enter \"apollo.com/buystuff\" it'll redirect here. try something with wildcards?? idk\n// or with something like this.  <Route exact path=\"*\" component={Error} />\n\nclass CommentUpvote extends React.Component {\n\n  state = {\n    upvoted : false , //if the user has given this comment an upvote\n    upvote_id : null , //holds the upvote id if the user has already upvoted this comment\n    number_of_upvotes : null , //displays the number of upvotes\n    upvotes : null , //holds the upvote objects\n  }\n\n  componentDidMount(){\n\n    this.handleGetUpvotes()\n\n  }\n\n  handleGetUpvotes = () => {\n    axios\n      .get(get_comment_upvotes_url(this.props.comment_id))\n      .then(response => {\n        // console.log(\"response: \" + response.data )\n        response.data.forEach( upvote => {\n          if(upvote.user === parseInt(this.props.user_id) ){\n            this.setState({\n              upvoted : true ,\n              upvote_id : upvote.id\n            })\n          }\n        })\n\n        this.setState({\n          number_of_upvotes : response.data.length ,\n          upvotes : response.data\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error )\n      })\n  }\n\n\n  handleRemoveUpvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    axios\n      .delete( remove_comment_upvote_url(this.state.upvote_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        console.log('removed upvote ')\n        this.setState({\n          upvoted : false ,\n          number_of_upvotes : this.state.number_of_upvotes - 1 ,\n\n        })\n      })\n      .catch(error => {\n        console.log('error removing upvote' + error )\n      })\n\n      //sets the CommentSection state var \"comment_upvoted\" to false\n      this.props.comment_upvoted(false)\n  }\n\n\n\n  handleCreateUpvote = () => {\n      var auth_token = 'Token ' + this.props.token ;\n\n      var upvote_data = new FormData() ;\n      upvote_data.append('comment' , this.props.comment_id )\n      upvote_data.append('user' , this.props.user_id)\n\n      axios\n        .post(create_comment_upvote_url , upvote_data ,\n          {\n            headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n          }\n        )\n        .then(response => {\n          this.handleGetUpvotes()\n        })\n        .catch(error => {\n          console.log('error creating upvote: ' + error.code)\n        })\n        //sets the CommentSection state var \"comment_upvoted\" to true\n        this.props.comment_upvoted(true) ;\n  }\n\n\n\n\n\n  handleUpvoteClick = ( text ) => {\n    if(this.props.user_id === 0)\n    {\n      alert(\"You need to sign in to do this.\")\n    }else {\n      if(this.state.upvoted){\n        this.handleRemoveUpvote()\n      }else{\n        this.handleCreateUpvote()\n      }\n    }\n  }\n\n\n  render(){\n    const {\n      upvoted ,\n      number_of_upvotes ,\n\n    } = this.state\n\n    const {\n      comment_id ,\n      user_id ,\n    } = this.props\n\n\n    //used to determine if the user has already upvoted this article and has just hit the downvote button.. removes the upvote if true\n    if(this.props.comment_downvoted && upvoted){\n      this.handleRemoveUpvote() ;\n    }\n\n    return(\n\n      <Badge\n        onClick={this.handleUpvoteClick}\n        className={(upvoted ? \"cursor-pointer color-green \" : \"cursor-pointer\" )}\n        >\n        <ChevronUp size={25}/> {number_of_upvotes}\n      </Badge>\n\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    token : state.auth.token ,\n    user_id : state.auth.user_id\n  };\n};\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(CommentUpvote) ;\n","import React from \"react\" ;\nimport axios from \"axios\";\nimport {\n  Badge ,\n\n} from 'react-bootstrap';\nimport { ChevronDown } from 'react-bootstrap-icons';\n\nimport { connect } from \"react-redux\";\nimport {\n  create_comment_downvote_url ,\n  remove_comment_downvote_url ,\n  get_comment_downvotes_url ,\n\n} from \"../../backend-urls.js\" ;\n\nclass CommentDownvote extends React.Component {\n\n  state = {\n    downvoted : false , //if the user has given this comment an upvote\n    downvote_id : null , //holds the upvote id if the user has already upvoted this comment\n    number_of_downvotes : null , //displays the number of upvotes\n    downvotes : null , //holds the upvote objects\n  }\n\n\n  componentDidMount(){\n\n    this.handleGetDownvotes()\n\n  }\n\n  handleGetDownvotes = () => {\n    axios\n      .get(get_comment_downvotes_url(this.props.comment_id))\n      .then(response => {\n\n        // console.log(\"response: \" + response.data )\n        response.data.forEach( downvote => {\n          if(downvote.user === parseInt(this.props.user_id) ){\n            this.setState({\n              downvoted : true ,\n              downvote_id : downvote.id\n            })\n          }\n        })\n\n        this.setState({\n          number_of_downvotes : response.data.length ,\n          downvotes : response.data\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error )\n      })\n  }\n\n  handleRemoveDownvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    axios\n      .delete( remove_comment_downvote_url(this.state.downvote_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        console.log('removed downvote ')\n        this.setState({\n          downvoted : false ,\n          number_of_downvotes : this.state.number_of_downvotes - 1 ,\n\n        })\n      })\n      .catch(error => {\n        console.log('error removing downvote' + error )\n      })\n\n      //sets the CommentSection state var \"comment_downvoted\" to false\n      this.props.comment_downvoted(false) ;\n  }\n\n\n  handleCreateDownvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    var downvote_data = new FormData() ;\n    downvote_data.append('comment' , this.props.comment_id )\n    downvote_data.append('user' , this.props.user_id)\n\n    axios\n      .post(create_comment_downvote_url , downvote_data ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        this.handleGetDownvotes()\n      })\n      .catch(error => {\n        console.log('error creating upvote: ' + error.code)\n      })\n\n      //sets the CommentSection state var \"comment_downvoted\" to true\n      this.props.comment_downvoted(true) ;\n  }\n\n\n\n\n  handleDownvoteClick = ( text ) => {\n\n    if(this.state.downvoted){\n      this.handleRemoveDownvote()\n    }else{\n      this.handleCreateDownvote()\n    }\n  }\n\n\n  render(){\n    const {\n      downvoted ,\n      number_of_downvotes ,\n\n    } = this.state\n\n    const {\n      comment_id ,\n      user_id ,\n    } = this.props\n\n    //used to determine if the user has already downvoted this comment and has just hit the upvote button.. removes the downvote if true\n    if(this.props.comment_upvoted && downvoted){\n      this.handleRemoveDownvote() ;\n    }\n\n\n    return(\n      <Badge\n        onClick={this.handleDownvoteClick}\n        className={(this.state.downvoted ? \"cursor-pointer color-red \" : \"cursor-pointer\" )}\n        >\n        <ChevronDown size={25}/> {number_of_downvotes}\n      </Badge>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    token : state.auth.token ,\n    user_id : state.auth.user_id\n  };\n};\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(CommentDownvote) ;\n","import React from 'react';\n\n\nimport {\n  Card ,\n\n} from 'react-bootstrap';\n\n\nimport RichText from './RichText'\nimport CommentUpvote from './CommentUpvote'\nimport CommentDownvote from './CommentDownvote'\n\nimport \"../../content/css/App.css\";\n\n\n\nclass ArticleComment extends React.Component {\n  state = {\n    comment_upvoted : false , //determines if the comment is upvoted or not.\n    comment_downvoted : false , //determines if the comment is downvoted or not.\n  }\n\n\n  /***the following two functions (handleCommentUpvoteClick & handleArticleDownvoteClick) are used when a user has upvoted a comment and then hits the downvote button (and vise versa)***/\n\n  //callback function for CommentUpvote component. if the user is creating an upvote, it sets it to true. and false if the upvote is being removed (by the user hitting downvote)\n  handleCommentUpvoteClick = (value) => {\n    console.log(\"handleCommentUpvoteClick value : \" + value)\n    this.setState({\n      comment_upvoted : value ,\n    })\n  }\n  //callback function for CommentDownvote component. if the user is creating a downvote, it sets it to true. and flase if the downvote is being removed (by the user hitting upvote)\n  handleCommentDownvoteClick = (value) => {\n    console.log(\"handleCommentDownvoteClick value : \" + value )\n    this.setState({\n      comment_downvoted : value ,\n    })\n  }\n\n\n\n\n  render(){\n    const {\n      comment_upvoted ,\n      comment_downvoted ,\n    } = this.state\n\n    return(\n      <React.Fragment>\n        <Card >\n          <Card.Body>\n            <Card.Title>{this.props.comment.author}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              { new Date(this.props.comment.created_date).toDateString() }\n            </Card.Subtitle>\n\n            <Card.Text>\n              <RichText text={this.props.comment.body} />\n            </Card.Text>\n\n            <CommentUpvote comment_id={this.props.comment.id} comment_downvoted={comment_downvoted} comment_upvoted={this.handleCommentUpvoteClick}/>\n            {' '}\n            <CommentDownvote comment_id={this.props.comment.id} comment_upvoted={comment_upvoted} comment_downvoted={this.handleCommentDownvoteClick}/>\n\n          </Card.Body>\n        </Card>\n        <hr />\n\n      </React.Fragment>\n\n\n    )\n\n  }\n\n}\n\nexport default ArticleComment ;\n","import React from 'react';\nimport axios from \"axios\";\n\nimport {\n  Container ,\n  Card ,\n  Button,\n  Col ,\n  Form,\n  Alert ,\n  Badge ,\n\n} from 'react-bootstrap';\n//for ReactQuill (comment box). found at https://github.com/zenoamaro/react-quill\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { connect } from \"react-redux\";\n\n\nimport ArticleComment from './ArticleComment'\nimport LoaderSpinner from './LoaderSpinner'\nimport CommentUpvote from './CommentUpvote'\nimport CommentDownvote from './CommentDownvote'\nimport RichText from './RichText'\nimport \"../../content/css/App.css\";\n\nimport {\n  create_comment_url ,\n  create_upvote_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\n\nclass CommentSection extends React.Component {\n\n  state = {\n    error : null , //stores any error that comes back from the database\n    loading : null , //set to determine if the page is loading\n    commenter_name : \"\" , //stores the anme of the person that is writing the comment\n    comment_body : \"\" , //stores the body of the comment\n    comment_submitted : false , //determines if the comment has been submitted.\n    comment_upvoted : false , //determines if the comment is upvoted or not.\n    comment_downvoted : false , //determines if the comment is downvoted or not.\n  }\n\n\n\n  handleCommentBody = (text) => {\n    this.setState({\n      comment_body : text\n    })\n  }\n\n  handleCommenterName = (text) => {\n    this.setState({\n      commenter_name : text.target.value\n    })\n  }\n\n  handlePostComment = () => {\n    this.setState({\n      loading: true\n    })\n    var comment_data = new FormData() ;\n    comment_data.append('body' , this.state.comment_body )\n    comment_data.append('author' , this.state.commenter_name)\n    comment_data.append('article', this.props.article_id )\n\n    axios\n      .post(create_comment_url , comment_data)\n      .then(response => {\n        console.log('comment submitted')\n        this.setState({\n          loading: false ,\n          commenter_name : \"\" ,\n          comment_body : \"\" ,\n          comment_submitted : true ,\n\n        })\n      })\n      .catch(error => {\n        this.setState({\n          error: error.response.data ,\n          loading: false ,\n        })\n      })\n  }\n\n  handleValidateComment = () => {\n    return !(this.state.comment_body.length > 1 && this.state.commenter_name.length > 1)\n  }\n\n\n\n  /***the following two functions (handleCommentUpvoteClick & handleArticleDownvoteClick) are used when a user has upvoted a comment and then hits the downvote button (and vise versa)***/\n\n  //callback function for CommentUpvote component. if the user is creating an upvote, it sets it to true. and false if the upvote is being removed (by the user hitting downvote)\n  handleCommentUpvoteClick = (value) => {\n    console.log(\"handleCommentUpvoteClick value : \" + value)\n    this.setState({\n      comment_upvoted : value ,\n    })\n  }\n  //callback function for CommentDownvote component. if the user is creating a downvote, it sets it to true. and flase if the downvote is being removed (by the user hitting upvote)\n  handleCommentDownvoteClick = (value) => {\n    console.log(\"handleCommentDownvoteClick value : \" + value )\n    this.setState({\n      comment_downvoted : value ,\n    })\n  }\n\n\n\n  render(){\n\n    const {\n      loading ,\n      error ,\n      comment_body ,\n      commenter_name ,\n      comment_submitted ,\n      comment_downvoted ,\n      comment_upvoted ,\n\n    } = this.state\n\n    const {\n      comments ,\n      user_id ,\n\n    } = this.props\n\n\n\n    // console.log(comments);\n\n    return(\n        <div >\n          <h2 className=\"tahoma-font\">Article Comments</h2>\n          <hr />\n          <Container>\n            {\n              comments  ?\n                comments.map(comment => (\n                    <ArticleComment comment={comment} />\n                  )\n                )\n              :\n                <Alert variant=\"dark\">There are no comments yet! Leave one below</Alert>\n            }\n            <Card >\n              <Card.Header as=\"h3\">Add a Comment</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  <Form>\n                    <Form.Row>\n                      <Form.Label>Name:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter Name\"\n                        value={commenter_name}\n                        onChange={this.handleCommenterName}\n                      />\n                    </Form.Row>\n                    <br/>\n                    <Form.Row>\n                      <Col>\n                        <Form.Label>Comment:</Form.Label>\n                          <ReactQuill\n                            placeholder=\"Start Writing...\"\n                            onChange={this.handleCommentBody}\n                            value={comment_body}\n                          />\n                      </Col>\n                    </Form.Row>\n                  </Form>\n                </Card.Text>\n                {\n                  loading ?\n                      <Button\n                        disabled={true}\n                        variant=\"primary\"\n                      >\n                        <LoaderSpinner />\n                      </Button>\n                  :\n\n                    <Button\n                      onClick={this.handlePostComment}\n                      disabled={this.handleValidateComment()}\n                      variant=\"primary\"\n                    >\n                      Add Comment\n                    </Button>\n                }\n              </Card.Body>\n            </Card>\n            <br />\n            {\n              comment_submitted &&\n                <Alert variant=\"success\">You successfully added a comment!</Alert>\n            }\n\n\n\n\n\n          </Container>\n\n        </div>\n\n    )\n  }\n\n\n}\n\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    authenticated : state.auth.token !== null ,\n    user_id : state.auth.user_id\n  };\n};\n\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(CommentSection) ;\n","import React from \"react\" ;\nimport axios from \"axios\";\n\nimport {\n  Badge ,\n\n} from 'react-bootstrap';\nimport { ChevronUp } from 'react-bootstrap-icons';\n\nimport { connect } from \"react-redux\";\n\nimport {\n  create_article_upvote_url ,\n  remove_article_upvote_url ,\n  get_article_upvotes_url ,\n\n} from \"../../backend-urls.js\" ;\n//should get triggered if the user enteres a URL that is nonexistant..\n//if they enter \"apollo.com/buystuff\" it'll redirect here. try something with wildcards?? idk\n// or with something like this.  <Route exact path=\"*\" component={Error} />\n\nclass ArticleUpvote extends React.Component {\n\n  state = {\n    upvoted : false , //if the user has given this comment an upvote\n    upvote_id : null , //holds the upvote id if the user has already upvoted this comment\n    number_of_upvotes : null , //displays the number of upvotes\n    upvotes : null , //holds the upvote objects\n  }\n\n  componentDidMount(){\n\n    this.handleGetUpvotes()\n\n\n  }\n\n  handleGetUpvotes = () => {\n    axios\n      .get(get_article_upvotes_url(this.props.article_id))\n      .then(response => {\n\n\n        // console.log(\"user_id inside get upvotes: \" + this.props.user_id)\n        // console.log(\"response: \" + response.data )\n        response.data.forEach( upvote => {\n          // console.log(\"user_id and upvote.user inside get upvotes: \" + this.props.user_id + \" \" + upvote.user)\n          if(upvote.user === parseInt(this.props.user_id) ){\n            this.setState({\n              upvoted : true ,\n              upvote_id : upvote.id\n            })\n          }\n        })\n\n        this.setState({\n          number_of_upvotes : response.data.length ,\n          upvotes : response.data\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error )\n      })\n  }\n\n\n  handleRemoveUpvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    axios\n      .delete( remove_article_upvote_url(this.state.upvote_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        this.handleGetUpvotes()\n        console.log('removed upvote ')\n        this.setState({\n          upvoted : false ,\n        })\n      })\n      .catch(error => {\n        console.log('error removing upvote' + error )\n      })\n\n      //sets the ArticlePage state var \"article_upvoted\" to false\n      this.props.article_upvoted(false)\n  }\n\n\n  handleCreateUpvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    var upvote_data = new FormData() ;\n    upvote_data.append('article' , this.props.article_id )\n    upvote_data.append('user' , this.props.user_id)\n\n    axios\n      .post(create_article_upvote_url , upvote_data ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        this.handleGetUpvotes()\n      })\n      .catch(error => {\n        console.log('error creating upvote: ' + error.code)\n      })\n\n    //sets the ArticlePage state var \"article_upvoted\" to true\n    this.props.article_upvoted(true) ;\n  }\n\n\n\n\n  handleUpvoteClick = ( text ) => {\n    if(this.props.user_id === 0)\n    {\n      alert(\"You need to sign in to do this.\")\n    }else {\n      if(this.state.upvoted){\n        this.handleRemoveUpvote()\n      }else{\n        this.handleCreateUpvote()\n      }\n    }\n  }\n\n\n  render(){\n    const {\n      upvoted ,\n      number_of_upvotes ,\n\n    } = this.state\n\n    const {\n      comment_id ,\n      user_id ,\n    } = this.props\n\n    //used to determine if the user has already upvoted this article and has just hit the downvote button.. removes the upvote if true\n    if(this.props.article_downvoted && upvoted){\n      this.handleRemoveUpvote() ;\n    }\n\n    // console.log( \"number_of_upvotes : \" + number_of_upvotes )\n    return(\n\n      <Badge\n        onClick={this.handleUpvoteClick}\n        className={(this.state.upvoted ? \"cursor-pointer color-green \" : \"cursor-pointer\" )}\n        >\n        <ChevronUp size={25}/> {number_of_upvotes}\n      </Badge>\n\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    token : state.auth.token ,\n    user_id : state.auth.user_id\n  };\n};\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(ArticleUpvote) ;\n","import React from \"react\" ;\nimport axios from \"axios\";\nimport {\n  Badge ,\n\n} from 'react-bootstrap';\nimport { ChevronDown } from 'react-bootstrap-icons';\n\nimport { connect } from \"react-redux\";\nimport {\n  create_article_downvote_url ,\n  remove_article_downvote_url ,\n  get_article_downvotes_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\n\nclass ArticleDownvote extends React.Component {\n\n  state = {\n    downvoted : false , //if the user has given this comment an upvote\n    downvote_id : null , //holds the upvote id if the user has already upvoted this comment\n    number_of_downvotes : null , //displays the number of upvotes\n    downvotes : null , //holds the upvote objects\n  }\n\n\n  componentDidMount(){\n\n    this.handleGetDownvotes()\n\n\n\n  }\n\n  handleGetDownvotes = () => {\n    axios\n      .get(get_article_downvotes_url(this.props.article_id))\n      .then(response => {\n\n        console.log(\"response: \" + response.data )\n\n        response.data.forEach( downvote => {\n          if(downvote.user === parseInt(this.props.user_id) ){\n            this.setState({\n              downvoted : true ,\n              downvote_id : downvote.id\n            })\n          }\n        })\n\n        this.setState({\n          number_of_downvotes : response.data.length ,\n          downvotes : response.data\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error )\n      })\n  }\n\n\n  handleRemoveDownvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    axios\n      .delete( remove_article_downvote_url(this.state.downvote_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        this.handleGetDownvotes()\n        console.log('removed downvote ')\n        this.setState({\n          downvoted : false ,\n\n        })\n      })\n      .catch(error => {\n        console.log('error removing downvote' + error )\n      })\n      \n      //sets the ArticlePage state var \"article_downvoted\" to false\n      this.props.article_downvoted(false) ;\n\n  }\n\n\n  handleCreateDownvote = () => {\n    var auth_token = 'Token ' + this.props.token ;\n\n    var downvote_data = new FormData() ;\n    downvote_data.append('article' , this.props.article_id )\n    downvote_data.append('user' , this.props.user_id)\n\n    axios\n      .post(create_article_downvote_url , downvote_data ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        this.handleGetDownvotes()\n      })\n      .catch(error => {\n        console.log('error creating upvote: ' + error.code)\n      })\n      //sets the ArticlePage state var \"article_downvoted\" to true\n      this.props.article_downvoted(true) ;\n  }\n\n\n\n  handleDownvoteClick = ( text ) => {\n    if(this.props.user_id === 0)\n    {\n      alert(\"You need to sign in to do this.\")\n    }else {\n      if(this.state.downvoted){\n        this.handleRemoveDownvote()\n      }else{\n        this.handleCreateDownvote()\n      }\n    }\n  }\n\n\n\n\n\n  render(){\n    const {\n      downvoted ,\n      number_of_downvotes ,\n\n    } = this.state\n\n    const {\n      comment_id ,\n      user_id ,\n    } = this.props\n\n    //used to determine if the user has already downvoted this article and has just hit the upvote button.. removes the downvote if true\n    if(this.props.article_upvoted && downvoted){\n      this.handleRemoveDownvote() ;\n    }\n\n    return(\n      <Badge\n        onClick={this.handleDownvoteClick}\n        className={(this.state.downvoted ? \"cursor-pointer color-red \" : \"cursor-pointer\" )}\n      >\n        <ChevronDown size={25}/> {number_of_downvotes}\n      </Badge>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    token : state.auth.token ,\n    user_id : state.auth.user_id\n  };\n};\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(ArticleDownvote) ;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {\n  Container ,\n  Badge ,\n  Col ,\n  Row ,\n  Form ,\n  ListGroup ,\n  Button ,\n  Alert ,\n\n} from 'react-bootstrap';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n// found at https://www.npmjs.com/package/react-bootstrap-icons\n\n\nimport TwitterLogo from './Misc/TwitterLogo';\nimport FacebookLogo from './Misc/FacebookLogo';\nimport RegisterEmail from './Misc/RegisterEmail';\nimport RichText from './Misc/RichText';\nimport LoaderSpinner from './Misc/LoaderSpinner';\nimport CommentSection from './Misc/CommentSection' ;\nimport ArticleUpvote from './Misc/ArticleUpvote' ;\nimport ArticleDownvote from './Misc/ArticleDownvote' ;\n\nimport \"../content/css/App.css\";\nimport {\n  article_url,\n  create_user_read_article_url ,\n\n} from \"../backend-urls.js\" ;\n\n\n\n\nclass ArticlePage extends React.Component  {\n\n  state = {\n    loading : false , //to determine if the page is loading\n    error : null , //stores the error that comes from backend\n    article_data: [] , //stores the article information\n    article_upvoted : false , //determines if the article is upvoted or not.\n    article_downvoted : false , //determines if the article is downvoted or not.\n\n  }\n\n  componentDidMount(){\n    this.setState({\n      loading: true ,\n    })\n\n    this.handleGetArticle() ;\n    this.handleCreateUserReadArticle() ;\n\n  }\n\n\n\n  handleGetArticle = () => {\n    var article_id = this.props.match.params.article_id\n    axios\n      .get(article_url(article_id) )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          loading: false ,\n          article_data: response.data ,\n        })\n      })\n      .catch(error => {\n        this.setState({\n          error: error ,\n          loading : false\n        })\n      })\n  }\n\n  handleCreateUserReadArticle = () => {\n\n    // var user_id = null ;\n    //gets the user_id from local storage. difficulty getting user_id from redux-store\n\n\n    var user_read_article_data = new FormData() ;\n    user_read_article_data.append('article' , this.props.match.params.article_id )\n    if(localStorage.getItem(\"user_id\") != null){\n      // user_id = localStorage.getItem(\"user_id\")\n      user_read_article_data.append('user' , localStorage.getItem(\"user_id\"))\n    }\n\n    console.log(\"this.props.match.params.article_id : \" + this.props.match.params.article_id) ;\n    // console.log(\"this.props.user_id : \" + user_id) ;\n\n    axios\n      .post(create_user_read_article_url , user_read_article_data)\n      .then( response => {\n        console.log(\"Create userreadarticle: \" + response.data)\n\n      })\n      .catch(error => {\n        console.log(\"error userreadarticle: \" + error.data )\n      })\n  }\n\n\n  /***the following two functions (handleArticleUpvoteClick & handleArticleDownvoteClick) are used when a user has upvoted an article and then hits the downvote button (and vise versa)***/\n\n  //callback function for ArticleUpvote component. if the user is creating an upvote, it sets it to true. and false if the upvote is being removed (by the user hitting downvote)\n  handleArticleUpvoteClick = (value) => {\n    console.log(\"handleArticleUpvoted value : \" + value)\n    this.setState({\n      article_upvoted : value ,\n    })\n  }\n  //callback function for ArticleDownvote component. if the user is creating a downvote, it sets it to true. and flase if the downvote is being removed (by the user hitting upvote)\n  handleArticleDownvoteClick = (value) => {\n    console.log(\"handleArticleDownvoted value : \" + value )\n    this.setState({\n      article_downvoted : value ,\n    })\n  }\n\n\n  render(){\n\n    const {\n      article_data ,\n      loading ,\n      article_upvoted ,\n      article_downvoted ,\n\n    } = this.state\n\n    const {\n      authenticated ,\n\n    } = this.props\n\n    // console.log(comment_body)\n    // console.log(commenter_name)\n\n    // console.log(  article_data['comments'] )\n\n\n    const article_date = new Date(article_data['created_date']).toDateString()  ;\n\n    var apollo_div = document.getElementById(\"apollo_widget_left_sidebar\")\n    // var sm_div = document.getElementById(\"sm_links_left_sidebar\")\n    //gets the first element with the tag name \"body\" aka, the entire page\n    var body= document.getElementsByTagName(\"body\")[0];\n    body.onscroll = function(e){\n      //documentElement.scrollTop gets the number of elements from the top\n      if( document.documentElement.scrollTop >= 70){\n        //makes the \"apollo\" thing appear after they scroll more than 70 px. (approx the height of the nav bar)\n        apollo_div.classList.add(\"AfterScroll\")  ;\n\n      }else {\n        //removes the \"apollo\" thing if the navbar comes into view\n        apollo_div.classList.remove(\"AfterScroll\") ;\n      }\n\n      // if(document.documentElement.scrollTop >= 225)\n      // {\n      //   sm_div.classList.add(\"AfterScroll\");\n      // }else{\n      //   sm_div.classList.remove(\"AfterScroll\");\n      // }\n\n\n    }\n\nvar twitter_link = \"https://twitter.com/intent/tweet?text=check%20out%20this%20new%20cryptocurrency%20startup!%20https%3A%2F%2Flocalhost%3A3000%2Fblog%2Farticle%2F\"+article_data['id']\nvar facebook_link = \"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocalhost%3A3000%2Fblog%2Farticle%2F\"+article_data['id']\n\n    return (\n\n      <React.Fragment>\n\n        <Container >\n\n          <Row>\n            <Col xs={2}>\n\n              <ListGroup\n                variant=\"flush\"\n                className=\"sticky-top BeforeScroll \"\n              >\n                <div id=\"apollo_widget_left_sidebar\">\n                  <ListGroup.Item className=\"bg-app\">\n                    <h4\n                      className=\"verdana-font\"\n                      onClick={() => this.props.history.push('/')}\n                      style={{cursor: 'pointer'}}\n                    >\n                        Apollo\n                    </h4>\n                  </ListGroup.Item>\n\n                  {\n                    !authenticated &&\n                      <ListGroup.Item className=\"bg-app\">\n                        <Link to=\"/signup\" className=\"article-link\">\n                          <Badge >\n                            Create an account\n                          </Badge>\n                        </Link>\n                        <RegisterEmail text=\"Get email updates\" direction=\"right\"/>\n                      </ListGroup.Item>\n                  }\n\n                  { /*checks that loading is false because if loading is false, then we know that article_data has actual information in it (as opposed to being empty. if it's empty, it can't get the upvote data)*/\n                    !loading &&\n                      <ListGroup.Item className=\"bg-app\">\n                        <div id=\"sm_links_left_sidebar\">\n                          <ArticleUpvote article_id={article_data['id']} article_downvoted={article_downvoted} article_upvoted={this.handleArticleUpvoteClick} />\n                          <ArticleDownvote article_id={article_data['id']} article_upvoted={article_upvoted} article_downvoted={this.handleArticleDownvoteClick} />\n                        </div>\n                      </ListGroup.Item>\n\n                  }\n                    <ListGroup.Item className=\"bg-app\">\n                      <a href={twitter_link} >\n                        <TwitterLogo />\n                      </a>\n\n                      <a href={facebook_link}>\n                        <FacebookLogo />\n                      </a>\n                    </ListGroup.Item>\n                </div>\n\n              </ListGroup>\n            </Col>\n\n            <Col xs={8} >\n\n              {\n                loading ?\n                  <LoaderSpinner />\n                :\n                  <React.Fragment>\n                    {\n                      article_data  ?\n                        <React.Fragment>\n                          <h1 className=\"times-new-roman-font\">\n                            {  article_data['title'] }\n                          </h1>\n\n                          <h6 className=\"padding-left-10px\">\n                            By { article_data['author']}, <Badge>{ article_date }</Badge>\n                            <div className=\"float-right\">\n                              <a href={twitter_link} >\n                                <TwitterLogo />\n                              </a>\n                              <a href={facebook_link}>\n                                <FacebookLogo />\n                              </a>\n                            </div>\n                          </h6>\n\n                          <hr />\n\n                          {/*Displays the body of the article in Rich Text*/}\n                          <RichText  text={article_data['body']} classes=\"times-new-roman-font\"/>\n                        </React.Fragment>\n                      :\n                        <Alert variant=\"dark\">There was an issue loading this article</Alert>\n                    }\n\n                    <br />\n                    {\n                      /*only displays the \"sign up for email updates\" if they aren't signed in*/\n                      !authenticated &&\n                        <div style={{backgroundColor:\"lightgrey\" , paddingTop:\"8px\" , paddingBottom:\"3px\", paddingLeft:\"8px\" , borderRadius:\"4px\"}}>\n                          <text >Like what you see? Subscribe for updates on our website</text>\n                          <Form >\n                            <Form.Row>\n                              <Col>\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                              </Col>\n                              <Col>\n                                <Button variant=\"primary\" type=\"submit\">\n                                  Submit\n                                </Button>\n                              </Col>\n                            </Form.Row>\n                            <small>We will never sell your information </small>\n                          </Form>\n                          <br />\n                        </div>\n\n                    }\n\n                  <CommentSection comments={article_data['comments']} article_id={this.props.match.params.article_id}/>\n                </React.Fragment>\n              }\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading ,\n    error: state.auth.error ,\n    authenticated: state.auth.token !== null ,\n  };\n};\n\nexport default\n    connect(\n      mapStateToProps,\n\n    )(ArticlePage);\n","import React from \"react\" ;\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport {\n  Container ,\n  Card ,\n  ListGroup ,\n  Button,\n  Col ,\n  Badge ,\n  Alert ,\n  Row ,\n  Navbar ,\n\n} from 'react-bootstrap';\nimport { connect } from \"react-redux\";\n\n// found at https://www.npmjs.com/package/react-bootstrap-icons\nimport { StarFill  } from 'react-bootstrap-icons';\n\nimport RichText from './Misc/RichText';\nimport LoaderSpinner from './Misc/LoaderSpinner'\nimport {\n  all_articles_url ,\n\n} from \"../backend-urls.js\" ;\n\nimport \"../content/css/App.css\";\nimport RegisterEmail from './Misc/RegisterEmail';\n\n\nclass Home extends React.Component {\n\n  state = {\n    error: null , //stores the error that comes from the backend\n    loading : true , //to determine if the page is loading\n    articles : [] , //stores all of the articles retrieved from the database\n    pinned_article : null , //stores the data for the pinned article\n\n  }\n\n  componentDidMount(){\n    this.setState({\n      loading: true ,\n    })\n    this.handleGetArticles();\n  }\n\n  //retrieves all the articles from the database\n  handleGetArticles = () => {\n    axios\n      .get(all_articles_url)\n      .then(response => {\n\n        //gets all the information for the article with pinned = true. had to put it in here because this function wouldn't set the state fast enough for another method to access it in the componentDidMount.\n        var articles = response.data\n        var pinned_article = []\n        for(var article_id in articles){\n          if (response.data[article_id].pinned ){\n            pinned_article.id = articles[article_id].id ;\n            pinned_article.title = articles[article_id].title ;\n            pinned_article.author = articles[article_id].author ;\n            pinned_article.created_date = articles[article_id].created_date ;\n            pinned_article.body = articles[article_id].body.substring(0, 500) ;\n            break ;\n          }\n        }\n\n        this.setState({\n          loading: false ,\n          articles: response.data ,\n          pinned_article : pinned_article ,\n\n        })\n      })\n      .catch(error => {\n        this.setState({\n          error: error ,\n          loading : false\n        })\n      })\n  }\n\n\n  render(){\n\n    const {\n      loading ,\n      error ,\n      articles ,\n      pinned_article ,\n      username ,\n\n    } = this.state\n\n    const {\n      authenticated ,\n      token ,\n\n    } = this.props\n\n\n    console.log(articles)\n    return(\n\n      <React.Fragment>\n        <Container>\n          <Row>\n            <h1 className=\"verdana-font\">\n              The Apollo Blog\n            </h1>\n          </Row>\n          <Row>\n            {/*this nav with the class is used to make the text grey*/}\n            <nav className=\"navbar-light\">\n              <Navbar.Text><h5 className=\"verdana-font \">Updates, news, and stories from the future of ecommerce</h5></Navbar.Text>\n            </nav>\n          </Row>\n          <Row>\n            <Col >\n              {\n                authenticated ?\n                  token === \"8eb05e1e2a096148f4686c071328cd1fbdec1904\" &&\n                    <div className=\"float-right\">\n                      <Link to=\"/create-article\" >\n                        <Button variant=\"outline-secondary\">Write an Article </Button>\n                      </Link>\n                    </div>\n                :\n                  <div className=\"float-right\">\n                    <RegisterEmail text=\"Sign up for email updates\" direction=\"left\"/>\n                  </div>\n              }\n            </Col>\n          </Row>\n        </Container>\n        <hr />\n\n        <ListGroup variant=\"flush\" className=\"bg-app\">\n\n            {/* cannot put this inside the \"loading === true\" ternary below for some reason*/\n            loading === false &&\n              pinned_article !== null &&\n                <ListGroup.Item className=\"bg-app\" > \n                  <Link to={'blog/article/'+pinned_article.id} className=\"article-link\">\n                    <Card className=\"width-100-percent \" id={pinned_article.id}>\n                      <Card.Body>\n                        <Card.Title>{pinned_article.title} <StarFill color=\"royalblue\" className=\"float-right font-size-1-25em\" /></Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">\n                          By {pinned_article.author}, <Badge>{new Date(pinned_article.created_date).toDateString() } </Badge>\n                        </Card.Subtitle>\n                        <Card.Text >\n                          <RichText text={pinned_article.body +\"...\" } />\n                        </Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </Link>\n                </ListGroup.Item>\n            }\n            {\n              loading === true ?\n                <LoaderSpinner />\n              :\n                articles.length > 0 ?\n                  articles.map(article =>  (\n                      <ListGroup.Item className=\"bg-app\">\n                        <Link to={'blog/article/'+article.id} className=\"article-link\">\n                          <Card className=\"width-100-percent\" id={article.id}>\n                            <Card.Body>\n                              <Card.Title>{article.title}</Card.Title>\n                              <Card.Subtitle className=\"mb-2 text-muted\">By {article.author}, <Badge>{new Date(article.created_date).toDateString() } </Badge></Card.Subtitle>\n                              <Card.Text >\n                                <RichText text={article.body.substring(0, 200) + '...'} />\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Link>\n                      </ListGroup.Item>\n                    )\n                  )\n                :\n                  <Alert variant=\"dark\">\n                    There was an error retrieving our articles\n                  </Alert>\n          }\n        </ListGroup>\n      </ React.Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    token : state.auth.token ,\n    authenticated: state.auth.token !== null ,\n    username : state.auth.username\n  }\n}\n\n\nexport default\n  connect(\n    mapStateToProps,\n\n  )(Home) ;\n","import React from \"react\";\nimport axios from 'axios';\nimport {\n  Container ,\n  Col ,\n  Row ,\n  Form ,\n  Button ,\n  Card ,\n  Alert ,\n\n} from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport {withRouter} from 'react-router';\n\n//for ReactQuill. found at https://github.com/zenoamaro/react-quill\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n\nimport \"../content/css/App.css\";\nimport {\n  create_article_url ,\n\n} from \"../backend-urls.js\" ;\n\n\n\n\n\nclass CreateArticle extends React.Component  {\n\n  state = {\n    error: null , //stores the error that comes from the backend\n    loading : false , //to determine if the page is loading\n    author : \"\" , //stores the author (from the author input)\n    title : \"\" , //stores the title (from the title input)\n    body : \"\" , //stores the body (from the body input)\n    article_submitted : false , //to determine if the article was successfully submitted (if true, display a banner at the bottom of the page and redirect the user)\n    countdown: 3 , //countdown to redirect, after the article gets submitted\n\n  }\n\n\n\n  componentDidMount(){\n    this.setState({\n      author: this.props.username ,\n      loading : false\n    })\n  }\n\n  handleAuthor = (text) => {\n    this.setState({\n      author: text.target.value\n    });\n  }\n\n  handleTitle = (text) => {\n    this.setState({\n      title: text.target.value\n    });\n  }\n\n  handleBody = (text) => {\n    this.setState({\n      body: text\n    });\n  }\n\n  submitForm = () => {\n\n    // creates a new FormData object and adds all the form data to it\n    var article_data = new FormData();\n    article_data.append('author' , this.props.username) ;\n    article_data.append('title' , this.state.title) ;\n    article_data.append('body' , this.state.body) ;\n\n    var token = 'Token ' + this.props.token ;\n    console.log('token : ' + token  ) ;\n    axios\n      .post(create_article_url , article_data ,\n        {\n          headers: { Authorization: token } //DRF requires the token in the header to create an article\n        }\n      )\n      .then(response => {\n        this.setState({\n          article_submitted : true\n        })\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          error: error ,\n          loading : false\n        })\n      }) ;\n  }\n\n  countdown = ( s ) => {\n      s -= 1 ;\n      this.setState({\n        countdown : s\n      }) ;\n  }\n\n\n  handleValidated = () => {\n    // return (this.state.author.length > 1 && this.state.title.length > 1 && this.state.body.length > 1)\n    return !(this.state.title.length > 1 && this.state.body.length > 1)\n\n  }\n\n\n  modules = {\n    toolbar: [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link', 'image'],\n      ['clean']\n    ],\n  }\n\n  formats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent',\n    'link', 'image'\n  ]\n\n\n  render(){\n    const {\n      author ,\n      title ,\n      body ,\n      article_submitted ,\n      countdown ,\n      error ,\n\n    } = this.state ;\n\n    const {\n      authenticated ,\n      token ,\n\n    } = this.props ;\n\n\n\n    //for counting down the \"redirect\" (redirect in 3.. 2.. 1..)\n    // article_submitted &&\n    //   setInterval(function(){\n    //     s = 5 ;\n    //     this.setState({\n    //\n    //     })\n    //   }  , 1000 );\n\n\n    return(\n\n      <Container>\n        <Row>\n            <Col xs={2}>\n            </Col>\n            <Col xs={8} >\n\n            {\n              !authenticated ? (\n                <React.Fragment>\n                   {/*<meta http-equiv=\"refresh\" content=\"3;url=/\" />*/}\n                  <Alert variant=\"danger\">\n                    How did you get here? oops. <a href=\"/\">go home</a>\n                  </Alert>\n                </React.Fragment>\n              )\n              :\n              (\n                <React.Fragment>\n                <Card >\n                  <Card.Header as=\"h3\">Add an Article</Card.Header>\n                  <Card.Body>\n                    <Card.Text>\n                      <Form>\n                        <Form.Row>\n                          <Form.Label>Article Title:</Form.Label>\n                          <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"Enter Title\"\n                            onChange = {this.handleTitle}\n                          />\n                        </Form.Row>\n                        <br/>\n                        <Form.Row>\n                          <Col>\n                            <Form.Label>Article Body:</Form.Label>\n                            <ReactQuill\n                              required\n                              placeholder=\"Start Writing...\"\n                              onChange={this.handleBody}\n                              className=\"editor_form_control\"\n                              modules={this.modules}\n                              formats={this.formats}\n                              theme=\"snow\"\n                            />\n                          </Col>\n                        </Form.Row>\n                      </Form>\n\n                    </Card.Text>\n                    <br/>\n                    <Button\n                      variant=\"primary\"\n                      onClick={this.submitForm}\n                      disabled={this.handleValidated()}\n                    >\n                      Add Article\n                    </Button>\n                  </Card.Body>\n                </Card>\n\n                {\n                  error &&\n                    <React.Fragment>\n                      <br/>\n                      {/*<meta http-equiv=\"refresh\" content=\"3;url=/\" />*/}\n                      <Alert variant=\"danger\">\n                        Nice try buddy\n                      </Alert>\n                    </React.Fragment>\n                }\n                {\n                  article_submitted  &&\n                    <React.Fragment>\n                      <br/>\n                      <meta http-equiv=\"refresh\" content=\"3;url=/\" />\n                      <Alert variant=\"success\">\n                        You successfully created an article! You will be redirected in {countdown} seconds\n                      </Alert>\n                    </React.Fragment>\n                }\n                </React.Fragment>\n              )\n            }\n            </Col>\n        </Row>\n      </Container>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.auth.token)\n  return {\n    loading: state.auth.loading ,\n    error: state.auth.error ,\n    token: state.auth.token ,\n    username: state.auth.username ,\n    authenticated: state.auth.token !== null ,\n  };\n};\n\nexport default\n  withRouter(\n    connect(\n      mapStateToProps,\n\n    )(CreateArticle)\n  );\n","\nimport React from \"react\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport {withRouter} from 'react-router';\n\n\nimport \"../../content/css/App.css\";\nimport { authLogin } from \"../../store/actions/auth\";\n\n\n\n\nclass Login extends React.Component {\n  state = {\n    username: \"\" , //stores the username that is getting entered\n    password: \"\" , //stores the password that is getting entered\n\n  }\n\n  handleUsername = e => {\n    this.setState({ username : e.target.value });\n  };\n\n  handlePassword = e => {\n    this.setState({ password : e.target.value });\n  };\n\n  //\n  validateForm = () =>  {\n    console.log(this.state.email.length)\n    console.log(this.state.email.length > 0 && this.state.password.length > 8)\n    return this.state.email.length > 0 && this.state.password.length > 8;\n  }\n\n  handleSubmit = (event) => {\n\n    event.preventDefault();\n    const {username, password} = this.state;\n    this.props.login(username, password)\n  }\n\n  handleValidated = () => {\n    return (this.state.username.length > 1 && this.state.password.length > 1 )\n  }\n\n  render(){\n    const { error, loading, token } = this.props;\n    const { username, password } = this.state;\n\n    //redirects the user to the home page if they are logged in\n    if(token){\n      return <Redirect to='/' />\n    }\n\n\n    if(error){\n      var errors = error.response.data\n    }\n\n\n    return (\n\n\n      <div className=\"account-form bg-app\">\n\n        <form onSubmit={this.handleSubmit}>\n          <h3>Login </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            Username\n            <FormControl\n              required\n              autoFocus\n              value={username}\n              onChange= {this.handleUsername}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            Password\n            <FormControl\n              required\n              value={password}\n              onChange= {this.handlePassword}\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button\n            block\n            bsSize=\"large\"\n            disabled={\n              !(this.handleValidated())\n            }\n            type=\"submit\"\n          >\n            Login\n          </Button>\n          <Badge> New to Apollo? <NavLink to=\"/signup\">Sign Up</NavLink> </Badge>\n          <br/>\n          <Badge> <NavLink to=\"/reset-password\">Forgot your password? </NavLink> </Badge>\n            <br />\n            {\n              error &&\n                <Alert variant=\"danger\">\n                  {\n                    //loops through all the returned errors and prints them with a bullet\n                    Object.keys(errors).map(e => {\n                      return <li>{errors[e][0]}</li>\n                    })\n                  }\n                </Alert>\n\n            }\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password)),\n    // mergeCartOnLogin: () => dispatch(mergeCartOnLogin()),\n\n  };\n};\n\nexport default withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(Login)\n  );\n","\nimport React from \"react\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"../../content/css/App.css\";\nimport { authSignup } from \"../../store/actions/auth\";\n\nclass  Signup extends React.Component  {\n  state = {\n    loading: null , //for whne the page is loading\n    error: null , //holds any error with submitting the form\n    email : \"\" , //holds the email value\n    username : \"\" , //holds the email value\n    password : \"\" , //holds the password value\n    confirm_password : \"\" , //holds the confirm_password value\n    passwords_match : true ,\n\n  }\n\n  //sets the email in the state\n  handleEmail = (e) => {\n    this.setState({\n      email : e.target.value\n    })\n  }\n\n  //sets the username in the state\n  handleUsername = (e) => {\n    this.setState({\n      username : e.target.value\n    })\n  }\n\n  //sets the password into the state and determines if the two password fields match\n  handlePassword = (e) => {\n    if(this.state.confirm_password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        password : e.target.value\n      })\n    }\n  }\n\n  //sets the confirm_password into the state and determines if the two password fields match\n  handleConfirmPassword = (e) => {\n    if(this.state.password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        confirm_password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        confirm_password : e.target.value\n      })\n    }\n  }\n\n  //does a simple validation of the user's input and returns true or false\n  handleValidated = () => {\n    var email_valid = this.state.email.length > 0\n    var username_valid = this.state.username.length > 0\n    var password_valid = this.state.password.length > 8\n    var confirm_password_valid = this.state.confirm_password.length > 8\n    var passwords_match = this.state.password_valid === this.state.confirm_password_valid\n    return email_valid && username_valid && password_valid && confirm_password_valid && passwords_match && this.state.passwords_match  ;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {email, username, password , confirm_password} = this.state;\n    console.log(email) ;\n    this.props.signup(username, email, password , confirm_password)\n  }\n\n  render(){\n\n    const {\n      email ,\n      username ,\n      password ,\n      confirm_password ,\n      passwords_match ,\n\n    } = this.state ;\n\n    const {\n      error\n    } = this.props ;\n\n    if(error){\n      var errors = error.response.data\n    }\n\n    console.log(\"error: \" , error)\n    return (\n      <div className=\"account-form bg-app\">\n\n        <form onSubmit={this.handleSubmit}>\n          <h3>Signup </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            Email\n            <FormControl\n              required\n              autoFocus\n              type=\"email\"\n              value={email}\n              onChange={this.handleEmail}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"username\" bsSize=\"large\">\n            Username\n            <FormControl\n              required\n              value={username}\n              onChange={this.handleUsername}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            Password\n            <FormControl\n              required\n              value={password}\n              onChange={this.handlePassword}\n              type=\"password\"\n            />\n          </FormGroup>\n          <FormGroup controlId=\"confirm_password\" bsSize=\"large\">\n            Confirm Password\n            <FormControl\n              required\n              value={confirm_password}\n              onChange={this.handleConfirmPassword}\n              type=\"password\"\n            />\n          </FormGroup>\n\n          <Button block bsSize=\"large\" disabled={!this.handleValidated()} type=\"submit\" >\n            Signup\n          </Button>\n          <Badge> Already have an account? <NavLink to=\"/login\">Login </NavLink> </Badge>\n\n          {\n            !passwords_match &&\n            <Alert variant=\"danger\">Your passwords must match</Alert>\n          }\n\n          {\n            error &&\n              <Alert variant=\"danger\">\n                {\n                  //loops through all the returned errors and prints them with a bullet\n                  Object.keys(errors).map(e => {\n                    return <li>{errors[e][0]}</li>\n                  })\n                }\n              </Alert>\n          }\n\n\n        </form>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n  };\n};\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signup: (email, username, password1 , password2) => dispatch(authSignup(email, username, password1 , password2)),\n\n  };\n};\n\nexport default\n  connect(\n    mapStateToProps ,\n    mapDispatchToProps\n  )(Signup) ;\n","import React from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {\n  Container ,\n  Form ,\n  Button ,\n  Alert ,\n  Card ,\n\n} from 'react-bootstrap';\nimport {\n  change_password_url ,\n\n} from \"../../backend-urls.js\" ;\n\nimport LoaderSpinner from '../Misc/LoaderSpinner'\n\n\nclass ChangePassword extends React.Component {\n\n\n  state = {\n    error : null , //holds error\n    loading : false , //loading\n    old_password : \"\" , //holds the old password from the user input\n    new_password1 : \"\" , //holds the first password from the user input\n    new_password2 : \"\" , //holds the confirm password from user input\n    reset_password : null , //holds the success message from the backen\n    passwords_match : true , //determines if the new passwords match\n\n  }\n\n\n  handleOldPassword = (text) => {\n    console.log(\"old password :\" + text.target.value)\n    this.setState({\n      old_password: text.target.value\n    });\n  }\n\n  handlePassword = (text) => {\n    if(this.state.confirm_password != text.target.value)\n    {\n      this.setState({\n        passwords_match : false ,\n        new_password1 : text.target.value\n      });\n    }else{\n      this.setState({\n        passwords_match : true ,\n        new_password1 : text.target.value\n      });\n    }\n  }\n\n  handleConfirmPassword = (text) => {\n\n    if(this.state.password != text.target.value)\n    {\n      this.setState({\n        passwords_match : false ,\n        new_password2 : text.target.value\n      });\n    }else{\n      this.setState({\n        passwords_match : true ,\n        new_password2 : text.target.value\n      });\n    }\n    // console.log(\"new password 2 :\" + text.target.value)\n    // this.setState({\n    //   new_password2: text.target.value\n    // });\n  }\n\n\n  handleChangePassword = () => {\n    this.setState({\n      loading: true\n    });\n\n    var password_data = new FormData();\n    password_data.append('new_password1' , this.state.new_password1) ;\n    password_data.append('new_password2' , this.state.new_password2) ;\n    password_data.append('old_password' , this.state.old_password) ;\n\n    for (var value of password_data.values()) {\n       console.log(\"value: \" + value);\n    }\n    var auth_token = 'Token ' + this.props.token ;\n    axios\n      .post( \"http://127.0.0.1:8000/rest-auth/password/change/\"  , password_data ,\n        {\n          headers: { Authorization: auth_token } //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        console.log(\"response: \" + response.data )\n        this.setState({\n          loading : false ,\n          error : null ,\n          reset_password : response.data.detail ,\n          passwords_match : true ,\n        })\n      })\n      .catch(error => {\n        console.log(\"error: \" + error.response.data )\n        this.setState({\n          loading: false ,\n          error : error.response.data ,\n          passwords_match : true ,\n        })\n      })\n  }\n\n  handleValidated = () => {\n    return (this.state.old_password.length > 1 && this.state.new_password2.length > 1 && this.state.new_password1.length > 1 && this.state.new_password2 == this.state.new_password1)\n  }\n\n\n\n  render(){\n    const {\n      error ,\n      loading ,\n      new_password1 ,\n      new_password2 ,\n      old_password ,\n      reset_password ,\n      passwords_match ,\n\n    } = this.state ;\n\n    const {\n      token ,\n\n    } = this.props\n\n\n\n    return(\n\n\n      <Container>\n        <Card>\n          <Card.Body>\n            <Card.Title><h5>Change Your Password</h5></Card.Title>\n            <hr />\n            <Form.Group >\n              <Form.Label>Old Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Enter old password\"\n                onChange={this.handleOldPassword}\n              />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>New Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"New Password\"\n                onChange={this.handlePassword}\n               />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Confirm New Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                onChange={this.handleConfirmPassword}\n               />\n            </Form.Group>\n            {\n              loading ?\n                <Button\n                  block\n                  bsSize=\"large\"\n                  disabled={\n                    !(this.handleValidated())\n                  }\n                  onClick={this.handleChangePassword}\n                >\n                  <LoaderSpinner />\n                </Button>\n              :\n                <Button\n                  block\n                  bsSize=\"large\"\n                  disabled={\n                    !(this.handleValidated())\n                  }\n                  onClick={this.handleChangePassword}\n                >\n                  Change Your Password\n                </Button>\n            }\n            <br/>\n            {\n              !passwords_match &&\n              <Alert variant=\"danger\">Your passwords must match</Alert>\n            }\n            {\n              reset_password &&\n\n                <Alert variant=\"success\">\n                  {reset_password}\n                </Alert>\n            }\n            {\n              error &&\n                <Alert variant=\"danger\">\n                  {\n                    //loops through all the returned errors and prints them with a bullet\n                    Object.keys(error).map(e => {\n                      return <li>{error[e][0]}</li>\n                    })\n                  }\n                </Alert>\n            }\n          </Card.Body>\n        </Card>\n      </Container>\n\n\n\n\n    )\n  }\n}\n\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n    // username : state.auth.username ,\n    token : state.auth.token ,\n    // authenticated: state.auth.token !== null ,\n  }\n}\n\n\n\n\nexport default\n    connect(\n      mapStateToProps ,\n\n    )(ChangePassword) ;\n","import React from 'react';\nimport axios from \"axios\";\n\nimport {\n  Container ,\n  Col ,\n  Row ,\n  Card ,\n\n} from 'react-bootstrap';\nimport LoaderSpinner from './LoaderSpinner';\n\n\nimport {\n  get_user_details_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\n\nclass UserInformation extends React.Component {\n\n  state = {\n    error : null , //holds the error\n    loading : true , //to determine if the page is loading\n    account_info : [] , //holds the account info\n    // selected_button : \"change_password\" , //changes whenever a user selected a button. is on the top button by default\n\n  }\n  componentDidMount(){\n    this.setState({\n      loading: true ,\n    })\n\n    this.handleGetAccount() ;\n  }\n\n  handleGetAccount = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    var auth_token = 'Token ' + this.props.token ;\n    axios\n      .get( get_user_details_url ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        // console.log(\"response: \" + response.data)\n        this.setState({\n          loading : false ,\n          account_info : response.data\n        })\n\n      })\n      .catch(error => {\n        // console.log(\"error: \" + error.data)\n        this.setState({\n          loading : false ,\n          erorr : error.data\n        })\n      })\n  }\n\n\n  render(){\n\n    const {\n      error ,\n      loading ,\n      account_info ,\n\n    } = this.state\n\n\n    return(\n      <Container>\n        {\n          loading ?\n            <LoaderSpinner />\n          :\n            <Card>\n              <Card.Body>\n                <Card.Title><h5>Account Information</h5></Card.Title>\n                <hr />\n                <Row>\n                    <Col sm={{ span: 4 }}>\n                      <b>Email:</b>\n                    </Col>\n                    <Col sm={{ span: 8 }}>\n                      {account_info['email']}\n                    </Col>\n                    <Col sm={{ span: 4 }}>\n                      <b>Username:</b>\n                    </Col>\n                    <Col sm={{ span: 8 }}>\n                      {account_info['username']}\n                    </Col>\n                    <Col sm={{ span: 4 }}>\n                      <b>Joined:</b>\n                    </Col>\n                    <Col sm={{ span: 8 }}>\n                      {!loading && new Date(account_info['date_joined']).toDateString()}\n                    </Col>\n                    <Col sm={{ span: 4 }}>\n                      <b>Last Login:</b>\n                    </Col>\n                    <Col sm={{ span: 8 }}>\n                      {!loading && new Date(account_info['last_login']).toDateString()}\n                    </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n\n        }\n\n      </Container>\n    )\n  }\n\n}\n\n\n\nexport default (UserInformation) ;\n","import React from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nimport {\n  Container ,\n  Col ,\n  Row ,\n  Card ,\n\n} from 'react-bootstrap';\nimport LoaderSpinner from './LoaderSpinner';\n\n\nimport {\n  get_user_article_upvotes_url ,\n  get_user_article_downvotes_url ,\n  get_user_comment_upvotes_url ,\n  get_user_comment_downvotes_url ,\n  get_user_read_article_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\n\nclass UserArticleInteractions extends React.Component {\n\n  state = {\n    error : null , //holds the error\n    loading : true , //to determine if the page is loading\n    article_upvotes : null , //holds the user's upvotes\n    article_downvotes : null , //holds the user's downvotes\n    comment_upvotes : null , //holds the number of comment upvotes from the user\n    comment_downvotes : null , //holds the number of downvotes from the user\n    // selected_button : \"change_password\" , //changes whenever a user selected a button. is on the top button by default\n    articles_read : null , //holds the number of articles that the user has read\n  }\n  componentDidMount(){\n    console.log('token CDM : ' + this.props.token)\n    console.log('username CDM: ' + this.props.username)\n    this.setState({\n      loading: true ,\n    })\n\n    this.handleGetUserArticleUpvotes() ;\n    this.handleGetUserArticleDownvotes() ;\n    this.handleGetUserCommentUpvotes() ;\n    this.handleGetUserCommentDownvotes() ;\n    this.handleGetUserReadArticle() ;\n  }\n\n  handleGetUserArticleUpvotes = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    var auth_token = 'Token ' + this.props.token ;\n    axios\n      .get( get_user_article_upvotes_url(this.props.user_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        console.log(\"response: \" + response.data.length )\n        this.setState({\n          loading : false , //is true bc getting the downvotes comes right after getting this\n          article_upvotes : response.data.length\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error.data)\n        this.setState({\n          loading : true ,\n          error : error.data\n        })\n      })\n  }\n\n\n\n  handleGetUserArticleDownvotes = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    var auth_token = 'Token ' + this.props.token ;\n    axios\n      .get( get_user_article_downvotes_url(this.props.user_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        console.log(\"response: \" + response.data.length )\n        this.setState({\n          loading : false ,\n          article_downvotes : response.data.length\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error.data)\n        this.setState({\n          loading : false ,\n          error : error.data\n        })\n      })\n  }\n\n  handleGetUserCommentUpvotes = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    var auth_token = 'Token ' + this.props.token ;\n    axios\n      .get( get_user_comment_upvotes_url(this.props.user_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        console.log(\"response: \" + response.data.length )\n        this.setState({\n          loading : false ,\n          comment_upvotes : response.data.length\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error.data)\n        this.setState({\n          loading : false ,\n          error : error.data\n        })\n      })\n  }\n\n\n  handleGetUserCommentDownvotes = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    var auth_token = 'Token ' + this.props.token ;\n    axios\n      .get( get_user_comment_downvotes_url(this.props.user_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        console.log(\"response: \" + response.data.length )\n        this.setState({\n          loading : false ,\n          comment_downvotes : response.data.length\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error.data)\n        this.setState({\n          loading : false ,\n          error : error.data\n        })\n      })\n  }\n\n  handleGetUserReadArticle = () => {\n    this.setState({\n      loading: true ,\n    })\n\n    var auth_token = 'Token ' + this.props.token ;\n    axios\n      .get( get_user_read_article_url(this.props.user_id) ,\n        {\n          headers: { Authorization: auth_token} //DRF requires the token in the header to retrieve user's info\n        }\n      )\n      .then(response => {\n        console.log(\"response: \" + response.data )\n        this.setState({\n          loading : false ,\n          articles_read : response.data.length\n        })\n\n      })\n      .catch(error => {\n        console.log(\"error: \" + error.data)\n        this.setState({\n          loading : false ,\n          error : error.data\n        })\n      })\n  }\n  render(){\n\n    const {\n      error ,\n      loading ,\n      article_upvotes ,\n      article_downvotes ,\n      comment_upvotes ,\n      comment_downvotes ,\n      articles_read ,\n\n    } = this.state\n\n\n    return(\n      <Container>\n        {\n          loading ?\n            <LoaderSpinner />\n          :\n            <Card>\n              <Card.Body>\n                <Card.Title><h5>Article Interactions</h5></Card.Title>\n                <hr />\n                <Row>\n                    <Col sm={{ span: 6 }}>\n                      <b>Articles Read:</b>\n                    </Col>\n                    <Col sm={{ span: 6 }}>\n                      <em>{articles_read}</em>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={{ span: 6 }}>\n                      <b>Articles Upvoted:</b>\n                    </Col>\n                    <Col sm={{ span: 6 }}>\n                      <em>{article_upvotes}</em>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={{ span: 6 }}>\n                      <b>Articles Downvoted:</b>\n                    </Col>\n                    <Col sm={{ span: 6 }}>\n                      <em>{article_downvotes}</em>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={{ span: 6 }}>\n                      <b>Comments Upvoted:</b>\n                    </Col>\n                    <Col sm={{ span: 6 }}>\n                      <em>{comment_upvotes}</em>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={{ span: 6 }}>\n                      <b>Comments Downvoted:</b>\n                    </Col>\n                    <Col sm={{ span: 6 }}>\n                      <em>{comment_downvotes}</em>\n                    </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n\n        }\n\n      </Container>\n    )\n  }\n\n}\n\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    token : state.auth.token ,\n    user_id : state.auth.user_id\n  };\n};\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(UserArticleInteractions) ;\n","import React from 'react';\nimport axios from \"axios\";\n\nimport {\n  Container ,\n  Card ,\n  ListGroup ,\n  Button,\n  Col ,\n  Badge ,\n  Alert ,\n  Row ,\n  Grid ,\n  Form ,\n\n} from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport {withRouter} from 'react-router';\nimport ChangePassword from './../Misc/ChangePassword' ;\nimport LoaderSpinner from './../Misc/LoaderSpinner';\nimport UserInformation from './../Misc/UserInformation';\nimport UserArticleInteractions from './../Misc/UserArticleInteractions';\n\n\n\nimport {\n  get_user_details_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\nclass Profile extends React.Component {\n  state = {\n    error : null , //holds the error\n    loading : true , //to determine if the page is loading\n    account_info : [] , //holds the account info\n    // selected_button : \"change_password\" , //changes whenever a user selected a button. is on the top button by default\n\n  }\n\n  componentDidMount(){\n    console.log('token CDM : ' + this.props.token)\n    console.log('username CDM: ' + this.props.username)\n    this.setState({\n      loading: false ,\n    })\n\n  }\n\n\n\n  handleProfileInfo = () => {\n    switch(this.state.selected_button){\n      case \"change_password\" :\n        return(\n          <React.Fragment>\n            <ChangePassword />\n          </React.Fragment>\n          )\n        break ;\n      case \"email_preferences\" :\n        return(\n          <Container>\n            <h5>Change Your Email Preferences</h5>\n            <hr />\n            <Form.Check\n              type='checkbox'\n              label={`New product alerts`}\n            />\n            <br />\n            <Form.Check\n              type='checkbox'\n              label={`Updates on the progress of our website`}\n            />\n            <br />\n            <Form.Check\n              type='checkbox'\n              label={`Hot Deals`}\n            />\n          </Container>\n\n        )\n        break;\n      default :\n        return(\n          <h5>\n          default case\n          </h5>\n        )\n    }\n  }\n\n  render(){\n    const {\n      error ,\n      loading ,\n      account_info ,\n      selected_button ,\n\n    } = this.state\n\n    const {\n      username ,\n      authenticated ,\n      token ,\n\n    } = this.props\n\n\n\n    console.log(selected_button)\n\n    return(\n      <React.Fragment>\n        {\n          authenticated  ?\n            <Container>\n              <h4>{username}</h4>\n              <hr />\n              <Row>\n                <Col sm={{ span: 6 }}>\n                  <ListGroup variant=\"flush\" className=\"bg-app\">\n                  {\n                    !loading &&\n                      <React.Fragment>\n                        <ListGroup.Item className=\"bg-app\">\n                          <UserInformation token={token} />\n                        </ListGroup.Item>\n                        <ListGroup.Item className=\"bg-app\">\n                          <UserArticleInteractions token={token} />\n                        </ListGroup.Item>\n                      </React.Fragment>\n                  }\n                  </ListGroup>\n                </Col>\n                <Col sm={{ span: 6}} >\n                  <ListGroup variant=\"flush\" className=\"bg-app\">\n                    <ListGroup.Item className=\"bg-app\">\n                      <ChangePassword />\n                    </ListGroup.Item>\n\n                  </ListGroup>\n                </Col>\n              </Row>\n\n\n              {/*\n              <Row>\n                <Col sm={{ span: 3 }}>\n                  <Card>\n                    <ListGroup variant=\"flush\">\n                      {/*\n                      <ListGroup.Item\n                        active={selected_button === \"info\"}\n                        onClick={() => {\n                            this.setState({\n                              selected_button : \"info\"\n                            })\n                          }\n                        }\n                        style={{cursor:\"pointer\"}}\n                      >\n                        Account Info\n                      </ListGroup.Item>\n\n                      <ListGroup.Item\n                        active={selected_button !== \"change_password\"}\n\n                        style={{cursor:\"pointer\"}}\n                      >\n                        Change Password\n                      </ListGroup.Item>\n\n                      <ListGroup.Item\n                        active={selected_button === \"email_preferences\"}\n                        onClick={() => {\n                            this.setState({\n                              selected_button : \"email_preferences\"\n                            })\n                          }\n                        }\n                        style={{cursor:\"pointer\"}}\n                      >\n                        Email Preferences\n                      </ListGroup.Item>\n\n                    </ListGroup>\n                  </Card>\n                </Col>\n                <Col sm={{ span: 6}} >\n                  {this.handleProfileInfo()}\n                </Col>\n              </Row>\n              */}\n\n            </Container>\n          :\n            <h5>how'd you get here??</h5>\n        }\n      </React.Fragment>\n    )\n  }\n\n}\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n    username : state.auth.username ,\n    token : state.auth.token ,\n    authenticated: state.auth.token !== null ,\n  }\n}\n\nexport default\n  // withRouter(\n    connect(\n      mapStateToProps ,\n\n    )(Profile) ;\n  // );\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport LoaderSpinner from '../Misc/LoaderSpinner'\n\n\nimport \"../../content/css/App.css\";\nimport {\n  reset_password_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\nclass ForgotPassword extends React.Component {\n\n  state = {\n    loading : false , //stores the loading page\n    error : null , //stores any error that would get returned from the backend\n    email : \"\" , //stores the email from the input\n    email_submitted : null , //stores response after user submits their email\n    message : null , //stores the response message\n\n  }\n\n  handleEmail = (e) => {\n    console.log(e.target.value) ;\n    this.setState({email : e.target.value}) ;\n  }\n\n  handleValidated = () => {\n    return !(this.state.email.length > 1  )\n  }\n\n  handleSubmit = () => {\n    this.setState({\n      loading: true ,\n\n    })\n\n    var data = new FormData() ;\n    data.append('email' , this.state.email) ;\n    axios\n      .post(reset_password_url , data)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          email_submitted : true ,\n          loading : false ,\n          message : response.data.message\n        })\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          error : error.response.data ,\n          loading : false ,\n\n        })\n      })\n  }\n\n\n  render(){\n    const {\n      loading ,\n      error ,\n      email ,\n      email_submitted ,\n      message ,\n\n    } = this.state ;\n\n    return(\n\n      <div className=\"account-form bg-app\">\n\n          <h3>Reset Password </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            Email\n            <FormControl\n              required\n              autoFocus\n              value={email}\n              onChange= {this.handleEmail}\n            />\n          </FormGroup>\n\n          {\n            loading ?\n                <Button\n                  block\n                  bsSize=\"large\"\n                  disabled={true}\n                >\n                  <LoaderSpinner />\n                </Button>\n            :\n              <Button\n                block\n                bsSize=\"large\"\n                disabled={\n                  (this.handleValidated())\n                }\n                onClick={this.handleSubmit}\n              >\n                Submit\n              </Button>\n          }\n\n          <br />\n          {\n            email_submitted &&\n              <Alert variant=\"success\">\n                {message}\n              </Alert>\n          }\n\n\n      </div>\n\n    )\n  }\n\n\n\n}\n\nexport default ForgotPassword;\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport LoaderSpinner from '../Misc/LoaderSpinner'\n\nimport \"../../content/css/App.css\";\nimport {\n  set_new_password_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\nclass SetNewPassword extends React.Component {\n  state = {\n    loading : false , //determines if the page is laoding\n    error : null , //holds the error that gets returned from the database\n    password : \"\" , //holds the password value\n    confirm_password : \"\" , //holds the confirm_password value\n    passwords_match : true , //if the passwords match\n    success_message : \"\" , //holds the success message from the server\n  }\n\n  //sets the password into the state and determines if the two password fields match\n  handlePassword = (e) => {\n    if(this.state.confirm_password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        password : e.target.value\n      })\n    }\n  }\n\n  //sets the confirm_password into the state and determines if the two password fields match\n  handleConfirmPassword = (e) => {\n    if(this.state.password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        confirm_password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        confirm_password : e.target.value\n      })\n    }\n  }\n\n\n  //does a simple validation of the user's input and returns true or false\n  handleValidated = () => {\n    var password_valid = this.state.password.length > 8\n    var confirm_password_valid = this.state.confirm_password.length > 8\n    var passwords_match = this.state.password_valid === this.state.confirm_password_valid\n    return password_valid && confirm_password_valid && passwords_match && this.state.passwords_match  ;\n  }\n\n  handleSubmit = (event) => {\n    this.setState({\n      loading: true\n    })\n    event.preventDefault();\n    var uid = this.props.match.params.uid ;\n    var token = this.props.match.params.token;\n\n    console.log(uid + \" : \" +token)\n    // creates a new FormData object and adds all the form data to it\n    var password_data = new FormData();\n    password_data.append('new_password1' , this.state.password) ;\n    password_data.append('new_password2' , this.state.confirm_password) ;\n    password_data.append('uid' , uid) ;\n    password_data.append('token' , token) ;\n\n    axios\n      .post(set_new_password_url , password_data)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          loading: true ,\n          success_message : response.data.detail\n        })\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          loading: false ,\n          error: error.response.data ,\n\n        })\n      })\n\n    // const {email, username, password , confirm_password} = this.state;\n    // console.log(email) ;\n    // this.props.signup(username, email, password , confirm_password)\n  }\n\n\n\n  render(){\n    const {\n        error ,\n        loading ,\n        password ,\n        confirm_password ,\n        passwords_match ,\n        success_message ,\n\n    } = this.state\n\n    return(\n\n      <div className=\"account-form bg-app\">\n        <form>\n          <h5>Enter New Password </h5>\n\n            <FormGroup controlId=\"password\" bsSize=\"large\">\n              Password\n              <FormControl\n                required\n                value={password}\n                onChange={this.handlePassword}\n                type=\"password\"\n              />\n            </FormGroup>\n            <FormGroup controlId=\"confirm_password\" bsSize=\"large\">\n              Confirm Password\n              <FormControl\n                required\n                value={confirm_password}\n                onChange={this.handleConfirmPassword}\n                type=\"password\"\n              />\n            </FormGroup>\n\n            <Button block bsSize=\"large\" disabled={!this.handleValidated()} onClick={this.handleSubmit}>\n              Change Password\n            </Button>\n\n            <br/>\n\n            {\n              !passwords_match &&\n              <Alert variant=\"danger\">Your passwords must match</Alert>\n            }\n            {\n              success_message &&\n              <Alert variant=\"success\">{success_message}</Alert>\n            }\n            {\n              error &&\n              <Alert variant=\"danger\">\n                {\n                  //loops through all the returned errors and prints them with a bullet\n                  Object.keys(error).map(e => {\n                    return <li>{error[e][0]}</li>\n                  })\n                }\n              </Alert>\n            }\n\n          </form>\n      </div>\n    )\n  }\n\n\n}\n\n\nexport default SetNewPassword ;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {\n  Container ,\n  Row ,\n  Col ,\n\n} from 'react-bootstrap';\n\n\n\nclass Careers extends React.Component  {\n  render() {\n    return(\n      <Container >\n\n        <h1 className=\"verdana-font\">\n          Careers with Apollo\n        </h1>\n\n        <hr />\n\n        <p>If you are interested in what we're doing here, send us an email with your resume and interests at <a href=\"mailto:apollo-team@apollo.com\">apollo-team@apollo.com</a>\n        </p>\n\n      </Container>\n    )\n  }\n}\n\n\n\nexport default Careers ;\n","import React from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport Hoc from \"./hoc/hoc\";\n\nimport ArticlePage from \"./containers/ArticlePage\";\nimport Home from './containers/Home' ;\nimport CreateArticle from './containers/CreateArticle';\n\n\nimport Login from './containers/Account/Login';\nimport Signup from './containers/Account/Signup';\nimport Profile from './containers/Account/Profile';\nimport ForgotPassword from './containers/Account/ForgotPassword';\nimport SetNewPassword from './containers/Account/SetNewPassword';\nimport Careers from './containers/Careers';\n\n\n\n\n\nconst BaseRouter = () => (\n  <Hoc>\n    <Route exact path=\"/\" >\n      <Redirect to=\"/blog\" />\n    </Route >\n    <Route exact path=\"/blog\" component={Home} />\n\n    <Route exact path=\"/profile\" component={Profile} />\n    <Route exact path=\"/blog/article/:article_id\" component={ArticlePage} />\n    <Route exact path=\"/signup\" component={Signup} />\n    <Route exact path=\"/login\" component={Login} />\n    <Route exact path=\"/create-article\" component={CreateArticle} />\n    <Route exact path=\"/reset-password\" component={ForgotPassword} />\n    <Route exact path=\"/reset-password/:uid/:token\" component={SetNewPassword}/>\n    <Route exact path=\"/careers\" component={Careers} />\n\n  </Hoc>\n);\n\nexport default BaseRouter;\n","import React from 'react';\nimport {BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport 'bootstrap/dist/css/bootstrap.min.css' ;\nimport {\n  Container ,\n\n} from 'react-bootstrap';\n\nimport * as actions from \"./store/actions/auth\";\nimport NavigationBar from \"./containers/Layout/NavigationBar\";\nimport Footer from \"./containers/Layout/Footer\";\nimport BaseRouter from \"./routes\";\n// import ReactGA from 'react-ga';\n// import {PageView, initGA} from './containers/Misc/Tracking';\n\n\n\n// initGA('UA-163650811-1') ;\n\n// ReactGA.initialize('UA-163650811-1');\n//\n// function initializeReactGA() {\n//     ReactGA.initialize('UA-163650811-1');\n//     ReactGA.pageview('/homepage');\n// }\n\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    //keeps the token in redux state from getting erased on page reload\n    this.props.checkState();\n    // PageView() ;\n    // ReactGA.pageview(window.location.pathname + window.location.search);\n  }\n\n  render() {\n    return(\n      <div className=\"bg-app\" >\n        <Router >\n\n            <NavigationBar/>\n              <Container >\n                <BaseRouter/>\n              </Container>\n            <Footer />\n\n        </Router>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkState: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n//updates the oldObject object with the properties from updatedProperties\nexport const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n// import {\n//   removeCartOnLogout,\n// } from \"../actions/cart\";\n\n\n\n//staff is deprecated but i'm leaving it because it'll eventually be replaced with \"role\" or \"privs\" or something to insight role based authentication\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n  username: null ,\n  user_id: 0 ,\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\n\nconst authSuccess = (state, action) => {\n\n  return updateObject(state, {\n    token: action.token ,\n    username: action.username ,\n    user_id: action.user_id ,\n    error: null ,\n    loading: false ,\n\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n\n  return updateObject(state, {\n    token : null ,\n    user_id : 0 ,\n\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport authReducer from \"./store/reducers/auth\";\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhances(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n\nReactDOM.render( app , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}