"""
Django settings for apollo_backend project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'f8kmnn)oext(x9#g*%w^vduzm1s4uogcw)(h83gt#5-ow2iqnt'


# SECURITY WARNING: don't run with debug turned on in production!
# changes this bc of https://codeburst.io/beginners-guide-to-deploying-a-django-postgresql-project-on-google-cloud-s-flexible-app-engine-e3357b601b91
DEBUG = True # environment vars are strings. "convert" to boolean. lol, Python



# was *, changes bc of https://codeburst.io/beginners-guide-to-deploying-a-django-postgresql-project-on-google-cloud-s-flexible-app-engine-e3357b601b91
ALLOWED_HOSTS = [
    '*' ,
    'apollo-blog-269301.appspot.com',
    '127.0.0.1'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework' ,
    'rest_framework.authtoken' ,
    'rest_auth' ,
    'rest_auth.registration',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'corsheaders' ,

    'api' ,

]

#for django rest auth @ https://django-rest-auth.readthedocs.io/en/latest/installation.html
SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    #for CORS headers and allowing apps to access this backend
    'corsheaders.middleware.CorsMiddleware',
]
ROOT_URLCONF = 'apollo_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'apollo_backend/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'apollo_backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    ##connect to local sqlite db
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }

    ##connect to gcloud from local machine
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': '127.0.0.1',
        'PORT': '5432',
        'NAME': 'apollo',
        'USER': 'postgres',
        'PASSWORD': 'PLvK5AGsOqgKtotN',
    }

    ##connect to gcloud on app engine
    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'HOST': '/cloudsql/apollo-blog-269301:us-central1:apollo-psql',
    #     'PORT': '5432',
    #     'NAME': 'apollo',
    #     'USER': 'postgres',
    #     'PASSWORD': 'PLvK5AGsOqgKtotN',
    # }

}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


CORS_ORIGIN_WHITELIST = (
    'http://localhost:3000',
    # 'https://apollo-blog-269301.appspot.com' ,
)

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
USE_AUTHENTICATION = 'Yes'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'connor.j.davidson@gmail.com'
EMAIL_HOST_PASSWORD = '1011Castalia!'



#lets the user confirm their email on a get request to the confirm account (if they just click the link in the email) pagehttps://django-allauth.readthedocs.io/en/latest/configuration.html
# ACCOUNT_CONFIRM_EMAIL_ON_GET = True
#for django allauth
# ACCOUNT_EMAIL_VERIFICATION = "mandatory"
#bo
# ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5
# ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 86400 # 1 day in seconds

ACCOUNT_ADAPTER = 'api.adapter.DefaultAccountAdapterCustom'
URL_FRONT = 'http://apollostore.co/'


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': ( 'rest_framework.permissions.AllowAny', ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',

    ),
}

REST_AUTH_SERIALIZERS = {
    'PASSWORD_RESET_SERIALIZER':'api.serializers.PasswordResetSerializer' ,
    'USER_DETAILS_SERIALIZER': 'api.serializers.UserSerializer',
    'TOKEN_SERIALIZER': 'api.serializers.CustomTokenSerializer',
    'REGISTER_SERIALIZER' : 'api.serializers.CustomRegisterSerializer',

}


OLD_PASSWORD_FIELD_ENABLED = True




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATIC_ROOT = 'static'

STATIC_URL = '/static/'


REACT_APP_DIR = os.path.join(BASE_DIR , 'apollo_frontend')

STATICFILES_DIRS = [
    os.path.join(REACT_APP_DIR, 'build', 'static'),
]
