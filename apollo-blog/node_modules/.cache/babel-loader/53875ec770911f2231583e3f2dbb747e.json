{"ast":null,"code":"import { lazyLoad } from '@react-page/core';\nimport { HTMLRenderer } from '@react-page/renderer';\nimport React from 'react';\nvar EditableEditor = lazyLoad(function () {\n  return import('./EditableEditor');\n});\n\nvar Editor = function (_a) {\n  var plugins = _a.plugins,\n      defaultPlugin = _a.defaultPlugin,\n      readOnly = _a.readOnly,\n      value = _a.value,\n      onChange = _a.onChange,\n      dndBackendd = _a.dndBackendd;\n  return readOnly ? React.createElement(HTMLRenderer, {\n    state: value,\n    plugins: plugins\n  }) : React.createElement(EditableEditor, {\n    plugins: plugins,\n    defaultPlugin: defaultPlugin,\n    value: value,\n    onChange: onChange,\n    dndBackend: dndBackendd\n  });\n};\n\nexport default React.memo(Editor);","map":{"version":3,"sources":["../../src/editor/index.tsx"],"names":[],"mappings":"AAAA,SAKE,QALF,QAOO,kBAPP;AAQA,SAAS,YAAT,QAA6B,sBAA7B;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,IAAM,cAAc,GAAG,QAAQ,CAAC,YAAA;AAAM,SAAA,OAAA,kBAAA,CAAA;AAA0B,CAAjC,CAA/B;;AAUA,IAAM,MAAM,GAAoB,UAAC,EAAD,EAO/B;MANC,OAAA,GAAA,EAAA,CAAA,O;MACA,aAAA,GAAA,EAAA,CAAA,a;MACA,QAAA,GAAA,EAAA,CAAA,Q;MACA,KAAA,GAAA,EAAA,CAAA,K;MACA,QAAA,GAAA,EAAA,CAAA,Q;MACA,WAAA,GAAA,EAAA,CAAA,W;AAEA,SAAA,QAAQ,GACN,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa;AAAC,IAAA,KAAK,EAAE,KAAR;AAAe,IAAA,OAAO,EAAE;AAAxB,GAAb,CADM,GAGN,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AACb,IAAA,OAAO,EAAE,OADI;AAEb,IAAA,aAAa,EAAE,aAFF;AAGb,IAAA,KAAK,EAAE,KAHM;AAIb,IAAA,QAAQ,EAAE,QAJG;AAKb,IAAA,UAAU,EAAE;AALC,GAAf,CAHF;AAUC,CAlBH;;AAoBA,eAAe,KAAK,CAAC,IAAN,CAAW,MAAX,CAAf","sourceRoot":"","sourcesContent":["import { lazyLoad } from '@react-page/core';\nimport { HTMLRenderer } from '@react-page/renderer';\nimport React from 'react';\nvar EditableEditor = lazyLoad(function () { return import('./EditableEditor'); });\nvar Editor = function (_a) {\n    var plugins = _a.plugins, defaultPlugin = _a.defaultPlugin, readOnly = _a.readOnly, value = _a.value, onChange = _a.onChange, dndBackendd = _a.dndBackendd;\n    return readOnly ? (React.createElement(HTMLRenderer, { state: value, plugins: plugins })) : (React.createElement(EditableEditor, { plugins: plugins, defaultPlugin: defaultPlugin, value: value, onChange: onChange, dndBackend: dndBackendd }));\n};\nexport default React.memo(Editor);\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}