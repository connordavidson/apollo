{"ast":null,"code":"var _jsxFileName = \"/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/containers/CreateArticle.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Container, Badge, Col, Row, Form, ListGroup, Button, OverlayTrigger, Popover, Card, Alert } from 'react-bootstrap';\nimport \"../content/css/App.css\";\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { create_article_url } from \"../backend-urls.js\"; //for react-page\n\nimport Editor from \"@react-page/editor\";\nimport \"@react-page/core/lib/index.css\"; // we also want to load the stylesheets\n// Require editor ui stylesheet\n\nimport \"@react-page/ui/lib/index.css\"; // Load some exemplary plugins:\n\nimport slate from \"@react-page/plugins-slate\"; // The rich text area plugin\n\nimport \"@react-page/plugins-slate/lib/index.css\"; // Stylesheets for the rich text area plugin\n\nimport background from \"@react-page/plugins-background\"; // A plugin for background images\n\nimport \"@react-page/plugins-background/lib/index.css\"; // Define which plugins we want to use. We only have slate and background available, so load those.\n\nconst plugins = {\n  content: [slate()],\n  // Define plugins for content cells. To import multiple plugins, use [slate(), image, spacer, divider]\n  layout: [background({\n    defaultPlugin: slate()\n  })] // Define plugins for layout cells\n\n}; //for react-medium-editor. found at https://github.com/wangzuo/react-medium-editor\n// import Editor from 'react-medium-editor';\n// require('medium-editor/dist/css/medium-editor.css');\n// require('medium-editor/dist/css/themes/default.css');\n\nclass CreateArticle extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      //stores the error that comes from the backend\n      loading: false,\n      //to determine if the page is loading\n      author: null,\n      //stores the author (from the author input)\n      title: null,\n      //stores the title (from the title input)\n      body: null,\n      //stores the body (from the body input)\n      article_submitted: false,\n      //to determine if the article was successfully submitted (if true, display a banner at the bottom of the page and redirect the user)\n      countdown: 3 //countdown to redirect, after the article gets submitted\n\n    };\n\n    this.handleAuthor = text => {\n      console.log(text.target.value);\n      this.setState({\n        author: text.target.value\n      });\n    };\n\n    this.handleTitle = text => {\n      console.log(text);\n      this.setState({\n        title: text.target.value\n      });\n    };\n\n    this.handleBody = text => {\n      console.log(text);\n      this.setState({\n        body: text\n      });\n    };\n\n    this.submitForm = () => {\n      // creates a new FormData object and adds all the form data to it\n      var data = new FormData();\n      data.append('author', this.state.author);\n      data.append('title', this.state.title);\n      data.append('body', this.state.body);\n      axios.post(create_article_url, data).then(response => {\n        this.setState({\n          article_submitted: true\n        });\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          error: error,\n          loading: false\n        });\n      });\n    };\n\n    this.countdown = s => {\n      s -= 1;\n      this.setState({\n        countdown: s\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    const {\n      author,\n      title,\n      body,\n      article_submitted,\n      countdown\n    } = this.state; //for counting down the \"redirect\" (redirect in 3.. 2.. 1..)\n    // article_submitted &&\n    //   setInterval(function(){\n    //     s = 5 ;\n    //     this.setState({\n    //\n    //     })\n    //   }  , 1000 );\n    // const [editorValue, setEditorValue] = useState(initialState);\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(Col, {\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, console.log(body), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Add an Article\")), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Your Name:\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Name\",\n      onChange: this.handleAuthor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Article Title:\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Name\",\n      onChange: this.handleTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Article Body:\"), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Hint: highlight text that you want to change\"), React.createElement(Editor, {\n      plugins: plugins,\n      value: editorValue,\n      onChange: setEditorValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), \"//\")))), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Add Article\"))), article_submitted && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"meta\", {\n      \"http-equiv\": \"refresh\",\n      content: \"3;url=/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(Alert, {\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"You successfully created an article! You will be redirected in \", countdown, \" seconds\")))));\n  }\n\n}\n\nexport default CreateArticle;","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/containers/CreateArticle.js"],"names":["React","Link","axios","Container","Badge","Col","Row","Form","ListGroup","Button","OverlayTrigger","Popover","Card","Alert","create_article_url","Editor","slate","background","plugins","content","layout","defaultPlugin","CreateArticle","Component","state","error","loading","author","title","body","article_submitted","countdown","handleAuthor","text","console","log","target","value","setState","handleTitle","handleBody","submitForm","data","FormData","append","post","then","response","catch","s","componentDidMount","render","editorValue","setEditorValue"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios';\nimport {\n  Container ,\n  Badge ,\n  Col ,\n  Row ,\n  Form ,\n  ListGroup,\n  Button ,\n  OverlayTrigger ,\n  Popover ,\n  Card ,\n  Alert ,\n\n} from 'react-bootstrap';\nimport \"../content/css/App.css\";\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nimport {\n  create_article_url ,\n\n} from \"../backend-urls.js\" ;\n\n\n\n//for react-page\nimport Editor from \"@react-page/editor\";\nimport \"@react-page/core/lib/index.css\"; // we also want to load the stylesheets\n// Require editor ui stylesheet\nimport \"@react-page/ui/lib/index.css\";\n// Load some exemplary plugins:\nimport slate from \"@react-page/plugins-slate\"; // The rich text area plugin\nimport \"@react-page/plugins-slate/lib/index.css\"; // Stylesheets for the rich text area plugin\nimport background from \"@react-page/plugins-background\"; // A plugin for background images\nimport \"@react-page/plugins-background/lib/index.css\"\n// Define which plugins we want to use. We only have slate and background available, so load those.\nconst plugins = {\n  content: [slate()], // Define plugins for content cells. To import multiple plugins, use [slate(), image, spacer, divider]\n  layout: [background({ defaultPlugin: slate() })] // Define plugins for layout cells\n};\n\n\n\n\n//for react-medium-editor. found at https://github.com/wangzuo/react-medium-editor\n// import Editor from 'react-medium-editor';\n// require('medium-editor/dist/css/medium-editor.css');\n// require('medium-editor/dist/css/themes/default.css');\n\n\nclass CreateArticle extends React.Component  {\n\n  state = {\n    error: null , //stores the error that comes from the backend\n    loading : false , //to determine if the page is loading\n    author : null , //stores the author (from the author input)\n    title : null , //stores the title (from the title input)\n    body : null , //stores the body (from the body input)\n    article_submitted : false , //to determine if the article was successfully submitted (if true, display a banner at the bottom of the page and redirect the user)\n    countdown: 3 , //countdown to redirect, after the article gets submitted\n\n  }\n\n\n\n  componentDidMount(){\n    this.setState({\n      loading : false\n    })\n  }\n\n  handleAuthor = (text) => {\n        console.log(text.target.value)\n    this.setState({\n      author: text.target.value\n    });\n  }\n\n  handleTitle = (text) => {\n    console.log(text)\n    this.setState({\n      title: text.target.value\n    });\n  }\n\n  handleBody = (text) => {\n    console.log(text)\n    this.setState({\n      body: text\n    });\n  }\n\n  submitForm = () => {\n\n    // creates a new FormData object and adds all the form data to it\n    var data = new FormData();\n    data.append('author' , this.state.author) ;\n    data.append('title' , this.state.title) ;\n    data.append('body' , this.state.body) ;\n\n    axios\n      .post(create_article_url , data)\n      .then(response => {\n        this.setState({\n          article_submitted : true\n        })\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          error: error ,\n          loading : false\n        })\n      }) ;\n  }\n\n  countdown = ( s ) => {\n      s -= 1 ;\n      this.setState({\n        countdown : s\n      }) ;\n  }\n\n\n\n\n  render(){\n    const {\n      author ,\n      title ,\n      body ,\n      article_submitted ,\n      countdown ,\n\n    } = this.state ;\n\n    //for counting down the \"redirect\" (redirect in 3.. 2.. 1..)\n    // article_submitted &&\n    //   setInterval(function(){\n    //     s = 5 ;\n    //     this.setState({\n    //\n    //     })\n    //   }  , 1000 );\n\n    // const [editorValue, setEditorValue] = useState(initialState);\n\n    return(\n\n      <Container>\n        <Row>\n            <Col xs={2}>\n            </Col>\n            <Col xs={8} >\n            {console.log(body)}\n              <Card >\n                <Card.Header><h3>Add an Article</h3></Card.Header>\n                <Card.Body>\n                  <Card.Text>\n                    <Form>\n                      <Form.Row>\n                        <Form.Label>Your Name:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Enter Name\"\n                          onChange = {this.handleAuthor}\n                        />\n                      </Form.Row>\n                      <br />\n                      <Form.Row>\n                        <Form.Label>Article Title:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Enter Name\"\n                          onChange = {this.handleTitle}\n                        />\n                      </Form.Row>\n                      <br/>\n                      <Form.Row>\n                        <Col>\n                          <Form.Label>Article Body:</Form.Label>\n                          {/*<Editor\n                            className=\"editor_form_control\"\n                            text={this.state.text}\n                            onChange={this.handleBody}\n                            options={{\n                                placeholder: {\n                                  text: 'Start Writing...',\n                                  hideOnClick: false\n                                } ,\n                              }}\n                            />*/}\n                            <small>Hint: highlight text that you want to change</small>\n                            <Editor plugins={plugins} value={editorValue} onChange={setEditorValue} />\n// \n                        </Col>\n                      </Form.Row>\n                    </Form>\n                  </Card.Text>\n                  <Button\n                    variant=\"primary\"\n                    onClick={this.submitForm}\n                  >\n                    Add Article\n                  </Button>\n                </Card.Body>\n              </Card>\n              {\n                article_submitted  &&\n                  <React.Fragment>\n                    <br/>\n                    <meta http-equiv=\"refresh\" content=\"3;url=/\" />\n                    <Alert variant=\"success\">\n                      You successfully created an article! You will be redirected in {countdown} seconds\n                    </Alert>\n                  </React.Fragment>\n              }\n\n\n            </Col>\n        </Row>\n      </Container>\n    )\n  }\n\n}\n\n  export default CreateArticle;\n"]},"metadata":{},"sourceType":"module"}