{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { findDOMNode } from 'react-dom';\nimport HoverService from '../hover';\nvar hoverService = new HoverService();\nexport var computeCurrentDropPosition = function (actions, hover, drag, monitor, component, matrixName) {\n  var mousePosition = monitor.getClientOffset();\n  /* eslint-disable react/no-find-dom-node */\n\n  var componentPosition = findDOMNode(component).getBoundingClientRect();\n  var room = {\n    height: componentPosition.bottom - componentPosition.top,\n    width: componentPosition.right - componentPosition.left\n  };\n  var mouse = {\n    y: mousePosition.y - componentPosition.top,\n    x: mousePosition.x - componentPosition.left\n  };\n  hoverService.hover(drag, hover, actions, {\n    room: room,\n    mouse: mouse,\n    matrix: matrixName\n  });\n};\nexport var computeAndDispatchInsert = function (_a, drag, monitor, component, matrixName) {\n  if (matrixName === void 0) {\n    matrixName = '10x10';\n  }\n\n  var above = _a.insertCellAbove,\n      below = _a.insertCellBelow,\n      leftOf = _a.insertCellLeftOf,\n      rightOf = _a.insertCellRightOf,\n      inlineLeft = _a.insertCellLeftInline,\n      inlineRight = _a.insertCellRightInline,\n      clear = _a.clearHover,\n      hover = __rest(_a, [\"insertCellAbove\", \"insertCellBelow\", \"insertCellLeftOf\", \"insertCellRightOf\", \"insertCellLeftInline\", \"insertCellRightInline\", \"clearHover\"]);\n\n  return computeCurrentDropPosition({\n    clear: clear,\n    above: above,\n    below: below,\n    leftOf: leftOf,\n    rightOf: rightOf,\n    inlineLeft: inlineLeft,\n    inlineRight: inlineRight\n  }, // tslint:disable-next-line:no-any\n  hover, drag, monitor, component, matrixName);\n};\nexport var computeAndDispatchHover = function (_a, drag, monitor, component, matrixName) {\n  if (matrixName === void 0) {\n    matrixName = '10x10';\n  }\n\n  var above = _a.cellHoverAbove,\n      below = _a.cellHoverBelow,\n      leftOf = _a.cellHoverLeftOf,\n      rightOf = _a.cellHoverRightOf,\n      inlineLeft = _a.cellHoverInlineLeft,\n      inlineRight = _a.cellHoverInlineRight,\n      clear = _a.clearHover,\n      hover = __rest(_a, [\"cellHoverAbove\", \"cellHoverBelow\", \"cellHoverLeftOf\", \"cellHoverRightOf\", \"cellHoverInlineLeft\", \"cellHoverInlineRight\", \"clearHover\"]);\n\n  return computeCurrentDropPosition({\n    clear: clear,\n    above: above,\n    below: below,\n    leftOf: leftOf,\n    rightOf: rightOf,\n    inlineLeft: inlineLeft,\n    inlineRight: inlineRight\n  }, // tslint:disable-next-line:no-any\n  hover, drag, monitor, component, matrixName);\n};","map":{"version":3,"sources":["../../../src/service/hover/input.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { findDOMNode } from 'react-dom';\nimport HoverService from '../hover';\nvar hoverService = new HoverService();\nexport var computeCurrentDropPosition = function (actions, hover, drag, monitor, component, matrixName) {\n    var mousePosition = monitor.getClientOffset();\n    /* eslint-disable react/no-find-dom-node */\n    var componentPosition = findDOMNode(component).getBoundingClientRect();\n    var room = {\n        height: componentPosition.bottom - componentPosition.top,\n        width: componentPosition.right - componentPosition.left,\n    };\n    var mouse = {\n        y: mousePosition.y - componentPosition.top,\n        x: mousePosition.x - componentPosition.left,\n    };\n    hoverService.hover(drag, hover, actions, { room: room, mouse: mouse, matrix: matrixName });\n};\nexport var computeAndDispatchInsert = function (_a, drag, monitor, component, matrixName) {\n    if (matrixName === void 0) { matrixName = '10x10'; }\n    var above = _a.insertCellAbove, below = _a.insertCellBelow, leftOf = _a.insertCellLeftOf, rightOf = _a.insertCellRightOf, inlineLeft = _a.insertCellLeftInline, inlineRight = _a.insertCellRightInline, clear = _a.clearHover, hover = __rest(_a, [\"insertCellAbove\", \"insertCellBelow\", \"insertCellLeftOf\", \"insertCellRightOf\", \"insertCellLeftInline\", \"insertCellRightInline\", \"clearHover\"]);\n    return computeCurrentDropPosition({\n        clear: clear,\n        above: above,\n        below: below,\n        leftOf: leftOf,\n        rightOf: rightOf,\n        inlineLeft: inlineLeft,\n        inlineRight: inlineRight,\n    }, \n    // tslint:disable-next-line:no-any\n    hover, drag, monitor, component, matrixName);\n};\nexport var computeAndDispatchHover = function (_a, drag, monitor, component, matrixName) {\n    if (matrixName === void 0) { matrixName = '10x10'; }\n    var above = _a.cellHoverAbove, below = _a.cellHoverBelow, leftOf = _a.cellHoverLeftOf, rightOf = _a.cellHoverRightOf, inlineLeft = _a.cellHoverInlineLeft, inlineRight = _a.cellHoverInlineRight, clear = _a.clearHover, hover = __rest(_a, [\"cellHoverAbove\", \"cellHoverBelow\", \"cellHoverLeftOf\", \"cellHoverRightOf\", \"cellHoverInlineLeft\", \"cellHoverInlineRight\", \"clearHover\"]);\n    return computeCurrentDropPosition({\n        clear: clear,\n        above: above,\n        below: below,\n        leftOf: leftOf,\n        rightOf: rightOf,\n        inlineLeft: inlineLeft,\n        inlineRight: inlineRight,\n    }, \n    // tslint:disable-next-line:no-any\n    hover, drag, monitor, component, matrixName);\n};\n//# sourceMappingURL=input.js.map"]},"metadata":{},"sourceType":"module"}