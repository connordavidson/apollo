{"ast":null,"code":"import isHotkey from 'is-hotkey';\nimport React from 'react';\nimport { useSlate } from 'slate-react';\nimport { addPlugin } from '../hooks/useAddPlugin';\nimport { getCurrentNodeWithPlugin } from '../hooks/useCurrentNodeWithPlugin';\nimport { removePlugin } from '../hooks/useRemovePlugin';\nexport var useOnKeyDown = function (_a, deps) {\n  var plugins = _a.plugins;\n  var editor = useSlate();\n  return React.useCallback(function (event) {\n    plugins.filter(function (plugin) {\n      return plugin.hotKey;\n    }).forEach(function (plugin) {\n      if (isHotkey(plugin.hotKey, event)) {\n        event.preventDefault();\n        var node = getCurrentNodeWithPlugin(editor, plugin);\n\n        if (node) {\n          removePlugin(editor, plugin);\n        } else {\n          addPlugin(editor, plugin);\n        }\n      }\n    }); // we need to prevent slate from handling undo and redo\n\n    if (isHotkey(['mod+z', 'mod+y'], event)) {\n      event.preventDefault();\n      return true;\n    }\n\n    if (isHotkey('shift+enter', event)) {\n      event.preventDefault();\n      editor.insertText('\\n');\n      return true;\n    }\n  }, deps);\n};","map":{"version":3,"sources":["../../src/Controls/hotkeyHooks.ts"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,WAArB;AACA,OAAO,KAAP,MAAsC,OAAtC;AACA,SAAS,QAAT,QAAyB,aAAzB;AACA,SAAS,SAAT,QAA0B,uBAA1B;AACA,SAAS,wBAAT,QAAyC,mCAAzC;AACA,SAAS,YAAT,QAA6B,0BAA7B;AAGA,OAAO,IAAM,YAAY,GAAG,UAC1B,EAD0B,EAM1B,IAN0B,EAMN;MAJlB,OAAA,GAAA,EAAA,CAAA,O;AAMF,MAAM,MAAM,GAAG,QAAQ,EAAvB;AAEA,SAAO,KAAK,CAAC,WAAN,CAAkB,UAAA,KAAA,EAAK;AAC5B,IAAA,OAAO,CACJ,MADH,CACU,UAAA,MAAA,EAAM;AAAI,aAAA,MAAM,CAAN,MAAA;AAAa,KADjC,EAEG,OAFH,CAEW,UAAA,MAAA,EAAM;AACb,UAAI,QAAQ,CAAC,MAAM,CAAC,MAAR,EAAgB,KAAhB,CAAZ,EAAoC;AAClC,QAAA,KAAK,CAAC,cAAN;AACA,YAAM,IAAI,GAAG,wBAAwB,CAAC,MAAD,EAAS,MAAT,CAArC;;AACA,YAAI,IAAJ,EAAU;AACR,UAAA,YAAY,CAAC,MAAD,EAAS,MAAT,CAAZ;AACD,SAFD,MAEO;AACL,UAAA,SAAS,CAAC,MAAD,EAAS,MAAT,CAAT;AACD;AACF;AACF,KAZH,EAD4B,CAe5B;;AACA,QAAI,QAAQ,CAAC,CAAC,OAAD,EAAU,OAAV,CAAD,EAAqB,KAArB,CAAZ,EAAyC;AACvC,MAAA,KAAK,CAAC,cAAN;AACA,aAAO,IAAP;AACD;;AAED,QAAI,QAAQ,CAAC,aAAD,EAAgB,KAAhB,CAAZ,EAAoC;AAClC,MAAA,KAAK,CAAC,cAAN;AACA,MAAA,MAAM,CAAC,UAAP,CAAkB,IAAlB;AACA,aAAO,IAAP;AACD;AACF,GA1BM,EA0BJ,IA1BI,CAAP;AA2BD,CArCM","sourceRoot":"","sourcesContent":["import isHotkey from 'is-hotkey';\nimport React from 'react';\nimport { useSlate } from 'slate-react';\nimport { addPlugin } from '../hooks/useAddPlugin';\nimport { getCurrentNodeWithPlugin } from '../hooks/useCurrentNodeWithPlugin';\nimport { removePlugin } from '../hooks/useRemovePlugin';\nexport var useOnKeyDown = function (_a, deps) {\n    var plugins = _a.plugins;\n    var editor = useSlate();\n    return React.useCallback(function (event) {\n        plugins\n            .filter(function (plugin) { return plugin.hotKey; })\n            .forEach(function (plugin) {\n            if (isHotkey(plugin.hotKey, event)) {\n                event.preventDefault();\n                var node = getCurrentNodeWithPlugin(editor, plugin);\n                if (node) {\n                    removePlugin(editor, plugin);\n                }\n                else {\n                    addPlugin(editor, plugin);\n                }\n            }\n        });\n        // we need to prevent slate from handling undo and redo\n        if (isHotkey(['mod+z', 'mod+y'], event)) {\n            event.preventDefault();\n            return true;\n        }\n        if (isHotkey('shift+enter', event)) {\n            event.preventDefault();\n            editor.insertText('\\n');\n            return true;\n        }\n    }, deps);\n};\n//# sourceMappingURL=hotkeyHooks.js.map"]},"metadata":{},"sourceType":"module"}