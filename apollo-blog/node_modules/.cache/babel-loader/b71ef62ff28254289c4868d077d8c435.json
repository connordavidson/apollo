{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { lazyLoad } from '@react-page/core';\nimport debounce from 'lodash.debounce';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { createEditor, Transforms } from 'slate';\nimport { Editable, Slate, withReact } from 'slate-react';\nimport withInline from '../slateEnhancer/withInline';\nimport withPaste from '../slateEnhancer/withPaste';\nimport { useOnKeyDown } from './hotkeyHooks';\nimport { useRenderElement, useRenderLeave } from './renderHooks';\nvar HoverButtons = lazyLoad(function () {\n  return import('./HoverButtons');\n});\nvar Toolbar = lazyLoad(function () {\n  return import('./Toolbar');\n});\nvar SlateEditable = React.memo(function (props) {\n  var plugins = props.plugins,\n      defaultPluginType = props.defaultPluginType,\n      readOnly = props.readOnly;\n  var renderElement = useRenderElement({\n    plugins: plugins,\n    defaultPluginType: defaultPluginType\n  }, []);\n  var renderLeaf = useRenderLeave({\n    plugins: plugins\n  }, []);\n  var onKeyDown = readOnly ? undefined : useOnKeyDown({\n    plugins: plugins\n  }, []);\n  return React.createElement(Editable, {\n    readOnly: readOnly,\n    renderElement: renderElement,\n    renderLeaf: renderLeaf,\n    onKeyDown: onKeyDown\n  });\n});\n\nvar SlateControls = function (props) {\n  var _a, _b, _c;\n\n  var state = props.state,\n      plugins = props.plugins,\n      focused = props.focused,\n      readOnly = props.readOnly,\n      remove = props.remove,\n      id = props.id;\n  var editor = useMemo(function () {\n    return withPaste(plugins)(withReact(withInline(plugins)(createEditor())));\n  }, []); // useWhyDidYouUpdate('SlateControls' + id, props);\n\n  var onChangeDebounced = useMemo(function () {\n    return debounce(props.onChange, 200);\n  }, [props.onChange]);\n\n  var _d = __read(useState((_a = state) === null || _a === void 0 ? void 0 : _a.slate), 2),\n      value = _d[0],\n      setValue = _d[1];\n\n  useEffect(function () {\n    var _a;\n\n    if (state.selection) {\n      // update seleciton, if changed from outside (e.g. through undo)\n      Transforms.select(editor, state.selection);\n    }\n\n    setValue((_a = state) === null || _a === void 0 ? void 0 : _a.slate);\n  }, [(_b = state) === null || _b === void 0 ? void 0 : _b.slate, (_c = state) === null || _c === void 0 ? void 0 : _c.selection]);\n  var onChange = useCallback(function (v) {\n    if (editor.selection) {\n      setValue(v);\n      onChangeDebounced({\n        slate: v,\n        selection: editor.selection\n      });\n    }\n  }, [onChangeDebounced]);\n  var showBottomToolbar = Boolean(focused);\n  return React.createElement(Slate, {\n    editor: editor,\n    value: value,\n    onChange: onChange\n  }, !readOnly && focused && React.createElement(HoverButtons, {\n    plugins: props.plugins,\n    translations: props.translations\n  }), React.createElement(SlateEditable, {\n    readOnly: readOnly,\n    plugins: plugins,\n    defaultPluginType: props.defaultPluginType\n  }), !readOnly ? React.createElement(Toolbar, {\n    plugins: plugins,\n    show: showBottomToolbar,\n    removeSlate: remove,\n    id: id,\n    name: props.name,\n    translations: props.translations,\n    editable: props.editable\n  }) : null);\n};\n\nexport default React.memo(SlateControls);","map":{"version":3,"sources":["../../src/Controls/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { lazyLoad } from '@react-page/core';\nimport debounce from 'lodash.debounce';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { createEditor, Transforms } from 'slate';\nimport { Editable, Slate, withReact } from 'slate-react';\nimport withInline from '../slateEnhancer/withInline';\nimport withPaste from '../slateEnhancer/withPaste';\nimport { useOnKeyDown } from './hotkeyHooks';\nimport { useRenderElement, useRenderLeave } from './renderHooks';\nvar HoverButtons = lazyLoad(function () { return import('./HoverButtons'); });\nvar Toolbar = lazyLoad(function () { return import('./Toolbar'); });\nvar SlateEditable = React.memo(function (props) {\n    var plugins = props.plugins, defaultPluginType = props.defaultPluginType, readOnly = props.readOnly;\n    var renderElement = useRenderElement({ plugins: plugins, defaultPluginType: defaultPluginType }, []);\n    var renderLeaf = useRenderLeave({ plugins: plugins }, []);\n    var onKeyDown = readOnly ? undefined : useOnKeyDown({ plugins: plugins }, []);\n    return (React.createElement(Editable, { readOnly: readOnly, renderElement: renderElement, renderLeaf: renderLeaf, onKeyDown: onKeyDown }));\n});\nvar SlateControls = function (props) {\n    var _a, _b, _c;\n    var state = props.state, plugins = props.plugins, focused = props.focused, readOnly = props.readOnly, remove = props.remove, id = props.id;\n    var editor = useMemo(function () { return withPaste(plugins)(withReact(withInline(plugins)(createEditor()))); }, []);\n    // useWhyDidYouUpdate('SlateControls' + id, props);\n    var onChangeDebounced = useMemo(function () { return debounce(props.onChange, 200); }, [\n        props.onChange,\n    ]);\n    var _d = __read(useState((_a = state) === null || _a === void 0 ? void 0 : _a.slate), 2), value = _d[0], setValue = _d[1];\n    useEffect(function () {\n        var _a;\n        if (state.selection) {\n            // update seleciton, if changed from outside (e.g. through undo)\n            Transforms.select(editor, state.selection);\n        }\n        setValue((_a = state) === null || _a === void 0 ? void 0 : _a.slate);\n    }, [(_b = state) === null || _b === void 0 ? void 0 : _b.slate, (_c = state) === null || _c === void 0 ? void 0 : _c.selection]);\n    var onChange = useCallback(function (v) {\n        if (editor.selection) {\n            setValue(v);\n            onChangeDebounced({\n                slate: v,\n                selection: editor.selection,\n            });\n        }\n    }, [onChangeDebounced]);\n    var showBottomToolbar = Boolean(focused);\n    return (React.createElement(Slate, { editor: editor, value: value, onChange: onChange },\n        !readOnly && focused && (React.createElement(HoverButtons, { plugins: props.plugins, translations: props.translations })),\n        React.createElement(SlateEditable, { readOnly: readOnly, plugins: plugins, defaultPluginType: props.defaultPluginType }),\n        !readOnly ? (React.createElement(Toolbar, { plugins: plugins, show: showBottomToolbar, removeSlate: remove, id: id, name: props.name, translations: props.translations, editable: props.editable })) : null));\n};\nexport default React.memo(SlateControls);\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}