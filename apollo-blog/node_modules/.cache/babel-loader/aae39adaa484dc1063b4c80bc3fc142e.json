{"ast":null,"code":"/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nimport { bindActionCreators } from 'redux';\nimport { updateCellContent, updateCellLayout, removeCell, resizeCell, focusCell, focusNextCell, focusPreviousCell, blurAllCells } from './cell/core';\nimport { cellHoverLeftOf, cellHoverRightOf, cellHoverAbove, cellHoverBelow, cellHoverInlineLeft, cellHoverInlineRight, dragCell, clearHover, cancelCellDrag } from './cell/drag';\nimport { insertCellBelow, insertCellAbove, insertCellRightOf, insertCellLeftOf, insertCellLeftInline, insertCellRightInline } from './cell/insert';\nimport { undo, redo } from './undo';\nimport { updateEditable } from './editables';\nimport { insertMode, editMode, previewMode, layoutMode, resizeMode } from './display';\nimport { cellActions } from './cell';\nimport { updateSetting } from './setting';\nvar Display = {\n  insertMode: insertMode,\n  editMode: editMode,\n  previewMode: previewMode,\n  layoutMode: layoutMode,\n  resizeMode: resizeMode\n};\nvar Setting = {\n  updateSetting: updateSetting\n};\nvar Cell = cellActions;\nexport var Actions = {\n  Display: Display,\n  Cell: Cell,\n  Setting: Setting\n};\nexport var actions = function (dispatch) {\n  return {\n    cell: {\n      updateContent: function (id, state) {\n        return dispatch(updateCellContent(id)(state));\n      },\n      updateLayout: function (id, state) {\n        return dispatch(updateCellLayout(id)(state));\n      },\n      remove: bindActionCreators({\n        removeCell: removeCell\n      }, dispatch).removeCell,\n      resize: function (id, size) {\n        return dispatch(resizeCell(id)(size));\n      },\n      focus: function (id, source) {\n        return dispatch(focusCell(id)(source));\n      },\n      focusNext: function (id) {\n        return dispatch(focusNextCell(id)());\n      },\n      focusPrevious: function (id) {\n        return dispatch(focusPreviousCell(id)());\n      },\n      blurAll: bindActionCreators({\n        blurAllCells: blurAllCells\n      }, dispatch).blurAllCells,\n      drag: bindActionCreators({\n        dragCell: dragCell\n      }, dispatch).dragCell,\n      cancelDrag: bindActionCreators({\n        cancelCellDrag: cancelCellDrag\n      }, dispatch).cancelCellDrag,\n      hoverLeftOf: bindActionCreators({\n        cellHoverLeftOf: cellHoverLeftOf\n      }, dispatch).cellHoverLeftOf,\n      hoverRightOf: bindActionCreators({\n        cellHoverRightOf: cellHoverRightOf\n      }, dispatch).cellHoverRightOf,\n      hoverAbove: bindActionCreators({\n        cellHoverAbove: cellHoverAbove\n      }, dispatch).cellHoverAbove,\n      hoverBelow: bindActionCreators({\n        cellHoverBelow: cellHoverBelow\n      }, dispatch).cellHoverBelow,\n      hoverFloatingLeft: bindActionCreators({\n        cellHoverInlineLeft: cellHoverInlineLeft\n      }, dispatch).cellHoverInlineLeft,\n      hoverFloatingRight: bindActionCreators({\n        cellHoverInlineRight: cellHoverInlineRight\n      }, dispatch).cellHoverInlineRight,\n      clearHover: bindActionCreators({\n        clearHover: clearHover\n      }, dispatch).clearHover,\n      insertBelow: bindActionCreators({\n        insertCellBelow: insertCellBelow\n      }, dispatch).insertCellBelow,\n      insertAbove: bindActionCreators({\n        insertCellAbove: insertCellAbove\n      }, dispatch).insertCellAbove,\n      insertRightOf: bindActionCreators({\n        insertCellRightOf: insertCellRightOf\n      }, dispatch).insertCellRightOf,\n      insertLeftOf: bindActionCreators({\n        insertCellLeftOf: insertCellLeftOf\n      }, dispatch).insertCellLeftOf,\n      insertFloatingLeft: bindActionCreators({\n        insertCellLeftInline: insertCellLeftInline\n      }, dispatch).insertCellLeftInline,\n      insertFloatingRight: bindActionCreators({\n        insertCellRightInline: insertCellRightInline\n      }, dispatch).insertCellRightInline\n    },\n    editable: {\n      add: bindActionCreators({\n        updateEditable: updateEditable\n      }, dispatch).updateEditable,\n      update: bindActionCreators({\n        updateEditable: updateEditable\n      }, dispatch).updateEditable\n    },\n    mode: {\n      insert: bindActionCreators({\n        insertMode: insertMode\n      }, dispatch).insertMode,\n      edit: bindActionCreators({\n        editMode: editMode\n      }, dispatch).editMode,\n      preview: bindActionCreators({\n        previewMode: previewMode\n      }, dispatch).previewMode,\n      layout: bindActionCreators({\n        layoutMode: layoutMode\n      }, dispatch).layoutMode,\n      resize: bindActionCreators({\n        resizeMode: resizeMode\n      }, dispatch).resizeMode\n    },\n    undo: bindActionCreators({\n      undo: undo\n    }, dispatch).undo,\n    redo: bindActionCreators({\n      redo: redo\n    }, dispatch).redo\n  };\n};","map":{"version":3,"sources":["../../src/actions/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nimport { bindActionCreators } from 'redux';\nimport { updateCellContent, updateCellLayout, removeCell, resizeCell, focusCell, focusNextCell, focusPreviousCell, blurAllCells } from './cell/core';\nimport { cellHoverLeftOf, cellHoverRightOf, cellHoverAbove, cellHoverBelow, cellHoverInlineLeft, cellHoverInlineRight, dragCell, clearHover, cancelCellDrag } from './cell/drag';\nimport { insertCellBelow, insertCellAbove, insertCellRightOf, insertCellLeftOf, insertCellLeftInline, insertCellRightInline } from './cell/insert';\nimport { undo, redo } from './undo';\nimport { updateEditable } from './editables';\nimport { insertMode, editMode, previewMode, layoutMode, resizeMode } from './display';\nimport { cellActions } from './cell';\nimport { updateSetting } from './setting';\nvar Display = {\n    insertMode: insertMode,\n    editMode: editMode,\n    previewMode: previewMode,\n    layoutMode: layoutMode,\n    resizeMode: resizeMode,\n};\nvar Setting = {\n    updateSetting: updateSetting,\n};\nvar Cell = cellActions;\nexport var Actions = {\n    Display: Display,\n    Cell: Cell,\n    Setting: Setting,\n};\nexport var actions = function (dispatch) { return ({\n    cell: {\n        updateContent: function (id, state) {\n            return dispatch(updateCellContent(id)(state));\n        },\n        updateLayout: function (id, state) {\n            return dispatch(updateCellLayout(id)(state));\n        },\n        remove: bindActionCreators({ removeCell: removeCell }, dispatch).removeCell,\n        resize: function (id, size) { return dispatch(resizeCell(id)(size)); },\n        focus: function (id, source) { return dispatch(focusCell(id)(source)); },\n        focusNext: function (id) { return dispatch(focusNextCell(id)()); },\n        focusPrevious: function (id) { return dispatch(focusPreviousCell(id)()); },\n        blurAll: bindActionCreators({ blurAllCells: blurAllCells }, dispatch).blurAllCells,\n        drag: bindActionCreators({ dragCell: dragCell }, dispatch).dragCell,\n        cancelDrag: bindActionCreators({ cancelCellDrag: cancelCellDrag }, dispatch).cancelCellDrag,\n        hoverLeftOf: bindActionCreators({ cellHoverLeftOf: cellHoverLeftOf }, dispatch)\n            .cellHoverLeftOf,\n        hoverRightOf: bindActionCreators({ cellHoverRightOf: cellHoverRightOf }, dispatch)\n            .cellHoverRightOf,\n        hoverAbove: bindActionCreators({ cellHoverAbove: cellHoverAbove }, dispatch).cellHoverAbove,\n        hoverBelow: bindActionCreators({ cellHoverBelow: cellHoverBelow }, dispatch).cellHoverBelow,\n        hoverFloatingLeft: bindActionCreators({ cellHoverInlineLeft: cellHoverInlineLeft }, dispatch)\n            .cellHoverInlineLeft,\n        hoverFloatingRight: bindActionCreators({ cellHoverInlineRight: cellHoverInlineRight }, dispatch)\n            .cellHoverInlineRight,\n        clearHover: bindActionCreators({ clearHover: clearHover }, dispatch).clearHover,\n        insertBelow: bindActionCreators({ insertCellBelow: insertCellBelow }, dispatch)\n            .insertCellBelow,\n        insertAbove: bindActionCreators({ insertCellAbove: insertCellAbove }, dispatch)\n            .insertCellAbove,\n        insertRightOf: bindActionCreators({ insertCellRightOf: insertCellRightOf }, dispatch)\n            .insertCellRightOf,\n        insertLeftOf: bindActionCreators({ insertCellLeftOf: insertCellLeftOf }, dispatch)\n            .insertCellLeftOf,\n        insertFloatingLeft: bindActionCreators({ insertCellLeftInline: insertCellLeftInline }, dispatch)\n            .insertCellLeftInline,\n        insertFloatingRight: bindActionCreators({ insertCellRightInline: insertCellRightInline }, dispatch)\n            .insertCellRightInline,\n    },\n    editable: {\n        add: bindActionCreators({ updateEditable: updateEditable }, dispatch).updateEditable,\n        update: bindActionCreators({ updateEditable: updateEditable }, dispatch).updateEditable,\n    },\n    mode: {\n        insert: bindActionCreators({ insertMode: insertMode }, dispatch).insertMode,\n        edit: bindActionCreators({ editMode: editMode }, dispatch).editMode,\n        preview: bindActionCreators({ previewMode: previewMode }, dispatch).previewMode,\n        layout: bindActionCreators({ layoutMode: layoutMode }, dispatch).layoutMode,\n        resize: bindActionCreators({ resizeMode: resizeMode }, dispatch).resizeMode,\n    },\n    undo: bindActionCreators({ undo: undo }, dispatch).undo,\n    redo: bindActionCreators({ redo: redo }, dispatch).redo,\n}); };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}