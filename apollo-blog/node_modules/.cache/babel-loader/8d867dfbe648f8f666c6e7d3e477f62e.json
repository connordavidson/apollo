{"ast":null,"code":"var _jsxFileName = \"/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/containers/Account/Signup.js\";\nimport React from \"react\";\nimport { Button, FormGroup, FormControl, Badge, Alert } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"../../content/css/App.css\";\nimport { authSignup } from \"../../store/actions/auth\";\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: null,\n      //for whne the page is loading\n      error: null,\n      //holds any error with submitting the form\n      email: \"\",\n      //holds the email value\n      username: \"\",\n      //holds the email value\n      password: \"\",\n      //holds the password value\n      confirm_password: \"\",\n      //holds the confirm_password value\n      passwords_match: true\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handleUsername = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.handlePassword = e => {\n      if (this.state.confirm_password !== e.target.value) {\n        this.setState({\n          passwords_match: false,\n          password: e.target.value\n        });\n      } else {\n        this.setState({\n          passwords_match: true,\n          password: e.target.value\n        });\n      }\n    };\n\n    this.handleConfirmPassword = e => {\n      if (this.state.password !== e.target.value) {\n        this.setState({\n          passwords_match: false,\n          confirm_password: e.target.value\n        });\n      } else {\n        this.setState({\n          passwords_match: true,\n          confirm_password: e.target.value\n        });\n      }\n    };\n\n    this.handleValidated = () => {\n      var email_valid = this.state.email.length > 0;\n      var username_valid = this.state.username.length > 0;\n      var password_valid = this.state.password.length > 8;\n      var confirm_password_valid = this.state.confirm_password.length > 8;\n      var passwords_match = this.state.password_valid === this.state.confirm_password_valid;\n      return email_valid && username_valid && password_valid && confirm_password_valid && passwords_match && this.state.password === this.state.confirm_password;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        email,\n        username,\n        password,\n        confirm_password\n      } = this.state;\n      console.log(email);\n      this.props.signup(username, email, password, confirm_password);\n    };\n  }\n\n  render() {\n    const {\n      email,\n      username,\n      password,\n      confirm_password,\n      passwords_match\n    } = this.state;\n    const {\n      error\n    } = this.props;\n\n    if (error) {\n      console.log(error.response.data);\n\n      for (var e in error.response.data) {\n        console.log(error.response.data[e].data); // for (var message in e){\n        //   console.log(e[message])\n        // }\n      }\n    }\n\n    console.log(\"error: \", error);\n    return React.createElement(\"div\", {\n      className: \"account-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Signup \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Email\", React.createElement(FormControl, {\n      required: true,\n      autoFocus: true,\n      type: \"email\",\n      value: email,\n      onChange: this.handleEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"username\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Username\", React.createElement(FormControl, {\n      required: true,\n      value: username,\n      onChange: this.handleUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Password\", React.createElement(FormControl, {\n      required: true,\n      value: password,\n      onChange: this.handlePassword,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"confirm_password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Confirm Password\", React.createElement(FormControl, {\n      required: true,\n      value: confirm_password,\n      onChange: this.handleConfirmPassword,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.handleValidated(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Signup\"), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \" Already have an account? \", React.createElement(NavLink, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Login \"), \" \"), !passwords_match && React.createElement(Alert, {\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Your passwords must match\"), error && React.createElement(Alert, {\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, error.message)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signup: (email, username, password1, password2) => dispatch(authSignup(email, username, password1, password2))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/containers/Account/Signup.js"],"names":["React","Button","FormGroup","FormControl","Badge","Alert","NavLink","connect","authSignup","Signup","Component","state","loading","error","email","username","password","confirm_password","passwords_match","handleEmail","e","setState","target","value","handleUsername","handlePassword","handleConfirmPassword","handleValidated","email_valid","length","username_valid","password_valid","confirm_password_valid","handleSubmit","event","preventDefault","console","log","props","signup","render","response","data","message","mapStateToProps","auth","token","mapDispatchToProps","dispatch","password1","password2"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"../../content/css/App.css\";\nimport { authSignup } from \"../../store/actions/auth\";\n\nclass  Signup extends React.Component  {\n  state = {\n    loading: null , //for whne the page is loading\n    error: null , //holds any error with submitting the form\n    email : \"\" , //holds the email value\n    username : \"\" , //holds the email value\n    password : \"\" , //holds the password value\n    confirm_password : \"\" , //holds the confirm_password value\n    passwords_match : true ,\n\n  }\n\n  handleEmail = (e) => {\n    this.setState({\n      email : e.target.value\n    })\n  }\n\n  handleUsername = (e) => {\n    this.setState({\n      username : e.target.value\n    })\n  }\n\n  handlePassword = (e) => {\n    if(this.state.confirm_password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        password : e.target.value\n      })\n    }\n  }\n\n  handleConfirmPassword = (e) => {\n    if(this.state.password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        confirm_password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        confirm_password : e.target.value\n      })\n    }\n  }\n\n\n  handleValidated = () => {\n    var email_valid = this.state.email.length > 0\n    var username_valid = this.state.username.length > 0\n    var password_valid = this.state.password.length > 8\n    var confirm_password_valid = this.state.confirm_password.length > 8\n    var passwords_match = this.state.password_valid === this.state.confirm_password_valid\n    return email_valid && username_valid && password_valid && confirm_password_valid && passwords_match && (this.state.password === this.state.confirm_password)  ;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {email, username, password , confirm_password} = this.state;\n    console.log(email) ;\n    this.props.signup(username, email, password , confirm_password)\n  }\n\n  render(){\n\n    const {\n      email ,\n      username ,\n      password ,\n      confirm_password ,\n      passwords_match ,\n\n    } = this.state ;\n\n    const {\n      error\n    } = this.props ;\n\n    if(error){\n      console.log(error.response.data)\n      for(var e in error.response.data){\n        console.log(error.response.data[e].data)\n        // for (var message in e){\n        //   console.log(e[message])\n        // }\n      }\n    }\n\n    console.log(\"error: \" , error)\n    return (\n      <div className=\"account-form\">\n\n        <form onSubmit={this.handleSubmit}>\n          <h3>Signup </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            Email\n            <FormControl\n              required\n              autoFocus\n              type=\"email\"\n              value={email}\n              onChange={this.handleEmail}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"username\" bsSize=\"large\">\n            Username\n            <FormControl\n              required\n              value={username}\n              onChange={this.handleUsername}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            Password\n            <FormControl\n              required\n              value={password}\n              onChange={this.handlePassword}\n              type=\"password\"\n            />\n          </FormGroup>\n          <FormGroup controlId=\"confirm_password\" bsSize=\"large\">\n            Confirm Password\n            <FormControl\n              required\n              value={confirm_password}\n              onChange={this.handleConfirmPassword}\n              type=\"password\"\n            />\n          </FormGroup>\n\n          <Button block bsSize=\"large\" disabled={!this.handleValidated()} type=\"submit\">\n            Signup\n          </Button>\n          <Badge> Already have an account? <NavLink to=\"/login\">Login </NavLink> </Badge>\n\n          {\n            !passwords_match &&\n            <Alert variant=\"danger\">Your passwords must match</Alert>\n          }\n\n          {\n            error &&\n            <Alert variant=\"danger\">{error.message}</Alert>\n          }\n\n\n        </form>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n  };\n};\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signup: (email, username, password1 , password2) => dispatch(authSignup(email, username, password1 , password2)),\n\n  };\n};\n\nexport default\n  connect(\n    mapStateToProps ,\n    mapDispatchToProps\n  )(Signup) ;\n"]},"metadata":{},"sourceType":"module"}