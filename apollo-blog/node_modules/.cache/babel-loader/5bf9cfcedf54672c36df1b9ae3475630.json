{"ast":null,"code":"/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar _a;\n\nimport deepEqual from 'deep-equal';\nimport logger from '../logger';\n/**\n * NO (None): No drop zone.\n *\n * Corners are counted clockwise, beginning top left\n * C1 (Corner top left): Position decided by top left corner function\n * C2 (Corner top right): Position decided by top right corner function\n * C3 (Corner bottom right): Position decided by bottom right corner function\n * C4 (Corner bottom left): Position decided by bottom left corner function\n *\n * Above:\n * AH (Above here): above, same level\n * AA (Above of self or some ancestor): Above, compute active level using classification functions, e.g. log, sin, mx + t\n *\n * Below:\n * BH (Below here)\n * BA (Below of self or some ancestor)\n *\n * Left of:\n * LH (Left of here)\n * LA (Left of self or some ancestor)\n *\n * Right of:\n * RH (Right of here)\n * RA (Right of self or some ancestor)\n *\n * Inside / inline\n * IL (Inline left)\n * IR (Inline right)\n */\n\nexport var classes = {\n  NO: 0,\n  C1: 10,\n  C2: 11,\n  C3: 12,\n  C4: 13,\n  AH: 200,\n  AA: 201,\n  BH: 210,\n  BA: 211,\n  LH: 220,\n  LA: 221,\n  RH: 230,\n  RA: 231,\n  IL: 300,\n  IR: 301\n};\nvar c = classes;\n/**\n * A list of matrices that are used to define the callback function.\n *\n * @type {{6x6: *[], 10x10: *[], 10x10-no-inline: *[]}}\n */\n\nexport var defaultMatrices = {\n  '6x6': [[c.C1, c.AA, c.AA, c.AA, c.AA, c.C2], [c.LA, c.IL, c.AH, c.AH, c.IR, c.RA], [c.LA, c.LH, c.NO, c.NO, c.RH, c.RA], [c.LA, c.LH, c.NO, c.NO, c.RH, c.RA], [c.LA, c.C4, c.BH, c.BH, c.C3, c.RA], [c.C4, c.BA, c.BA, c.BA, c.BA, c.C3]],\n  '10x10': [[c.C1, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.C2], [c.LA, c.IL, c.IL, c.IL, c.AH, c.AH, c.IR, c.IR, c.IR, c.RA], [c.LA, c.IL, c.IL, c.IL, c.AH, c.AH, c.IR, c.IR, c.IR, c.RA], [c.LA, c.IL, c.IL, c.IL, c.AH, c.AH, c.IR, c.IR, c.IR, c.RA], [c.LA, c.LH, c.LH, c.LH, c.C1, c.C2, c.RH, c.RH, c.RH, c.RA], [c.LA, c.LH, c.LH, c.LH, c.C4, c.C3, c.RH, c.RH, c.RH, c.RA], [c.LA, c.LH, c.LH, c.C4, c.BH, c.BH, c.C3, c.IR, c.RH, c.RA], [c.LA, c.LH, c.C4, c.BH, c.BH, c.BH, c.BH, c.C3, c.RH, c.RA], [c.LA, c.C4, c.BH, c.BH, c.BH, c.BH, c.BH, c.BH, c.C3, c.RA], [c.C4, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.C3]],\n  '10x10-no-inline': [[c.C1, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.C2], [c.LA, c.C1, c.AH, c.AH, c.AH, c.AH, c.AH, c.AH, c.C2, c.RA], [c.LA, c.LH, c.C1, c.AH, c.AH, c.AH, c.AH, c.C2, c.RH, c.RA], [c.LA, c.LH, c.LH, c.C1, c.AH, c.AH, c.C2, c.RH, c.RH, c.RA], [c.LA, c.LH, c.LH, c.LH, c.C1, c.C2, c.RH, c.RH, c.RH, c.RA], [c.LA, c.LH, c.LH, c.LH, c.C4, c.C3, c.RH, c.RH, c.RH, c.RA], [c.LA, c.LH, c.LH, c.C4, c.BH, c.BH, c.C3, c.RH, c.RH, c.RA], [c.LA, c.LH, c.C4, c.BH, c.BH, c.BH, c.BH, c.C3, c.RH, c.RA], [c.LA, c.C4, c.BH, c.BH, c.BH, c.BH, c.BH, c.BH, c.C3, c.RA], [c.C4, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.C3]]\n};\n/**\n * Computes the average width and height for cells in a room.\n *\n * @param room\n * @param matrix\n * @returns {{x: number, y: number}}\n */\n\nexport var getRoomScale = function (_a) {\n  var room = _a.room,\n      matrix = _a.matrix;\n  var rows = matrix.length;\n  var cells = matrix[0].length;\n  var scalingX = room.width / cells;\n  var scalingY = room.height / rows;\n  return {\n    x: scalingX,\n    y: scalingY\n  };\n};\n/**\n * Returns the index of the hover cell.\n *\n * @param mouse\n * @param scale\n */\n\nexport var getMouseHoverCell = function (_a) {\n  var mouse = _a.mouse,\n      scale = _a.scale;\n  return {\n    cell: Math.floor(mouse.x / scale.x),\n    row: Math.floor(mouse.y / scale.y)\n  };\n};\n/**\n * Used for caching.\n */\n\nvar last = {\n  '10x10': null,\n  '10x10-no-inline': null\n};\nexport var computeHover = function (drag, hover, actions, _a, m // tslint:disable-next-line:no-any\n) {\n  var room = _a.room,\n      mouse = _a.mouse,\n      matrix = _a.matrix,\n      callbacks = _a.callbacks;\n  var scale = getRoomScale({\n    room: room,\n    matrix: matrix\n  });\n  var hoverCell = getMouseHoverCell({\n    mouse: mouse,\n    scale: scale\n  });\n  var rows = matrix.length;\n  var cells = matrix[0].length;\n\n  if (hoverCell.row >= rows) {\n    hoverCell.row = rows - 1;\n  } else if (hoverCell.row < 0) {\n    hoverCell.row = 0;\n  }\n\n  if (hoverCell.cell >= cells) {\n    hoverCell.cell = cells - 1;\n  } else if (hoverCell.cell < 0) {\n    hoverCell.cell = 0;\n  }\n\n  var cell = matrix[hoverCell.row][hoverCell.cell];\n\n  if (!callbacks[cell]) {\n    logger.error('Matrix callback not found.', {\n      room: room,\n      mouse: mouse,\n      matrix: matrix,\n      scale: scale,\n      hoverCell: hoverCell,\n      rows: rows,\n      cells: cells\n    });\n    return;\n  }\n\n  var all = {\n    item: drag.id,\n    hover: hover.id,\n    actions: actions,\n    ctx: {\n      room: room,\n      mouse: mouse,\n      position: hoverCell,\n      size: {\n        rows: rows,\n        cells: cells\n      },\n      scale: scale\n    }\n  };\n\n  if (deepEqual(all, last[m])) {\n    return;\n  }\n\n  last[m] = all;\n  return callbacks[cell](drag, hover, actions, {\n    room: room,\n    mouse: mouse,\n    position: hoverCell,\n    size: {\n      rows: rows,\n      cells: cells\n    },\n    scale: scale\n  });\n};\n/**\n * Return the mouse position relative to the cell.\n */\n\nexport var relativeMousePosition = function (_a) {\n  var mouse = _a.mouse,\n      position = _a.position,\n      scale = _a.scale;\n  return {\n    x: Math.round(mouse.x - position.cell * scale.x),\n    y: Math.round(mouse.y - position.row * scale.y)\n  };\n};\n/**\n * Computes the drop level based on the mouse position and the cell width.\n */\n\nexport var computeLevel = function (_a) {\n  var size = _a.size,\n      levels = _a.levels,\n      position = _a.position;\n\n  if (size <= (levels + 1) * 2) {\n    return Math.round(position / (size / levels));\n  }\n\n  var spare = size - (levels + 1) * 2;\n  var steps = [0];\n  var current = spare;\n\n  for (var i = 0; i <= levels; i++) {\n    steps.push(steps[i] + current / 2);\n    current /= 2;\n\n    if (position >= steps[i] + i * 2 && position < steps[i + 1] + (i + 1) * 2) {\n      return i;\n    }\n  }\n\n  return levels;\n};\n/**\n * Computes the horizontal drop level based on the mouse position.\n *\n * @param mouse\n * @param position\n * @param hover\n * @param scale\n * @param level\n * @param inv returns the inverse drop level. Usually true for left and above drop level computation.\n * @returns number\n */\n\nexport var computeHorizontal = function (_a, inv) {\n  var mouse = _a.mouse,\n      position = _a.position,\n      hover = _a.hover,\n      scale = _a.scale,\n      level = _a.level;\n\n  if (inv === void 0) {\n    inv = false;\n  }\n\n  var _b = hover.node.cells,\n      cells = _b === void 0 ? [] : _b;\n  var x = relativeMousePosition({\n    mouse: mouse,\n    position: position,\n    scale: scale\n  }).x;\n  var at = computeLevel({\n    size: scale.x,\n    position: x,\n    levels: level\n  });\n\n  if (cells.length) {\n    // Is row, always opt for lowest level\n    return level;\n  } // If the hovered element is an inline element, level 0 would be directly besides it which doesn't work.\n  // Set it to 1 instead.\n\n\n  if (hover.node.inline && at === 0) {\n    at = 1;\n  }\n\n  return inv ? level - at : at;\n};\n/**\n * Computes the vertical drop level based on the mouse position.\n *\n * @returns number\n */\n\nexport var computeVertical = function (_a, inv) {\n  var level = _a.level,\n      mouse = _a.mouse,\n      hover = _a.hover,\n      position = _a.position,\n      scale = _a.scale;\n\n  if (inv === void 0) {\n    inv = false;\n  }\n\n  var _b = hover.node.cells,\n      cells = _b === void 0 ? [] : _b;\n  var y = relativeMousePosition({\n    mouse: mouse,\n    position: position,\n    scale: scale\n  }).y;\n  var at = computeLevel({\n    size: scale.y,\n    position: y,\n    levels: level\n  });\n\n  if (cells.length) {\n    // Is row, always opt for lowest level\n    return level;\n  } // If the hovered element is an inline element, level 0 would be directly besides it which doesn't work.\n  // Set it to 1 instead.\n\n\n  if (hover.node.inline && at === 0) {\n    at = 1;\n  }\n\n  return inv ? level - at : at;\n};\n\nvar getDropLevel = function (hover) {\n  return hover.node.inline ? 1 : 0;\n};\n/**\n * A list of callbacks.\n */\n\n\nexport var defaultCallbacks = (_a = {}, _a[c.NO] = function (item, hover, _a) {\n  var clear = _a.clear;\n  return clear(item.id);\n},\n/* corners */\n_a[c.C1] = function (item, hover, _a, // tslint:disable-next-line:no-any\nctx) {\n  var leftOf = _a.leftOf,\n      above = _a.above;\n  var mouse = relativeMousePosition(ctx);\n  var level = getDropLevel(hover);\n\n  if (mouse.x < mouse.y) {\n    return leftOf(item.rawNode(), hover.rawNode(), level);\n  }\n\n  above(item.rawNode(), hover.rawNode(), level);\n}, _a[c.C2] = function (item, hover, _a, // tslint:disable-next-line:no-any\nctx) {\n  var rightOf = _a.rightOf,\n      above = _a.above;\n  var mouse = relativeMousePosition(ctx);\n  var level = getDropLevel(hover);\n\n  if (mouse.x > mouse.y) {\n    return rightOf(item.rawNode(), hover.rawNode(), level);\n  }\n\n  above(item.rawNode(), hover.rawNode(), level);\n}, _a[c.C3] = function (item, hover, _a, // tslint:disable-next-line:no-any\nctx) {\n  var rightOf = _a.rightOf,\n      below = _a.below;\n  var mouse = relativeMousePosition(ctx);\n  var level = getDropLevel(hover);\n\n  if (mouse.x > mouse.y) {\n    return rightOf(item.rawNode(), hover.rawNode(), level);\n  }\n\n  below(item.rawNode(), hover.rawNode(), level);\n}, _a[c.C4] = function (item, hover, _a, // tslint:disable-next-line:no-any\nctx) {\n  var leftOf = _a.leftOf,\n      below = _a.below;\n  var mouse = relativeMousePosition(ctx);\n  var level = getDropLevel(hover);\n\n  if (mouse.x < mouse.y) {\n    return leftOf(item.rawNode(), hover.rawNode(), level);\n  }\n\n  below(item.rawNode(), hover.rawNode(), level);\n},\n/* heres */\n_a[c.AH] = function (item, hover, _a) {\n  var above = _a.above;\n  var level = getDropLevel(hover);\n  above(item.rawNode(), __assign({}, hover.rawNode()), level);\n}, _a[c.BH] = function (item, hover, _a) {\n  var below = _a.below;\n  var level = getDropLevel(hover);\n  below(item.rawNode(), __assign({}, hover.rawNode()), level);\n}, _a[c.LH] = function (item, hover, _a) {\n  var leftOf = _a.leftOf;\n  var level = getDropLevel(hover);\n  leftOf(item.rawNode(), __assign({}, hover.rawNode()), level);\n}, _a[c.RH] = function (item, hover, _a) {\n  var rightOf = _a.rightOf;\n  var level = getDropLevel(hover);\n  rightOf(item.rawNode(), __assign({}, hover.rawNode()), level);\n},\n/* ancestors */\n_a[c.AA] = function (item, hover, _a, ctx) {\n  var above = _a.above;\n  return above(item.rawNode(), hover.rawNode(), computeVertical(__assign(__assign({}, ctx), {\n    hover: hover,\n    level: hover.node.levels.above\n  }), true));\n}, _a[c.BA] = function (item, hover, _a, ctx) {\n  var below = _a.below;\n  return below(item.rawNode(), hover.rawNode(), computeVertical(__assign(__assign({}, ctx), {\n    hover: hover,\n    level: hover.node.levels.below\n  })));\n}, _a[c.LA] = function (item, hover, _a, ctx) {\n  var leftOf = _a.leftOf;\n  return leftOf(item.rawNode(), hover.rawNode(), computeHorizontal(__assign(__assign({}, ctx), {\n    hover: hover,\n    level: hover.node.levels.left\n  }), true));\n}, _a[c.RA] = function (item, hover, _a, ctx) {\n  var rightOf = _a.rightOf;\n  return rightOf(item.rawNode(), hover.rawNode(), computeHorizontal(__assign(__assign({}, ctx), {\n    hover: hover,\n    level: hover.node.levels.right\n  })));\n},\n/* inline */\n_a[c.IL] = function (item, hover, _a) {\n  var inlineLeft = _a.inlineLeft,\n      leftOf = _a.leftOf;\n  var _b = hover.node,\n      inline = _b.inline,\n      hasInlineNeighbour = _b.hasInlineNeighbour;\n  var _c = item.node.content,\n      _d = (_c === void 0 ? {} : _c).plugin,\n      _e = (_d === void 0 ? {} : _d).isInlineable,\n      isInlineable = _e === void 0 ? false : _e;\n\n  if (inline || !isInlineable) {\n    return leftOf(item.rawNode(), hover.rawNode(), 2);\n  }\n\n  if (hasInlineNeighbour && hasInlineNeighbour !== item.id) {\n    return leftOf(item.rawNode(), hover.rawNode(), 2);\n  }\n\n  if (hasInlineNeighbour && hasInlineNeighbour === item.id && item.node.inline === 'left') {\n    return leftOf(item.rawNode(), hover.rawNode(), 2);\n  }\n\n  inlineLeft(item.rawNode(), hover.rawNode());\n}, _a[c.IR] = function (item, hover, _a) {\n  var inlineRight = _a.inlineRight,\n      rightOf = _a.rightOf;\n  var _b = hover.node,\n      inline = _b.inline,\n      hasInlineNeighbour = _b.hasInlineNeighbour;\n  var _c = item.node.content,\n      _d = (_c === void 0 ? {} : _c).plugin,\n      _e = (_d === void 0 ? {} : _d).isInlineable,\n      isInlineable = _e === void 0 ? false : _e;\n\n  if (inline || !isInlineable) {\n    return rightOf(item.rawNode(), hover.rawNode(), 2);\n  }\n\n  if (hasInlineNeighbour && hasInlineNeighbour !== item.id) {\n    return rightOf(item.rawNode(), hover.rawNode(), 2);\n  }\n\n  if (hasInlineNeighbour && hasInlineNeighbour === item.id && item.node.inline === 'right') {\n    return rightOf(item.rawNode(), hover.rawNode(), 2);\n  }\n\n  inlineRight(item.rawNode(), hover.rawNode());\n}, _a);\n/**\n * The HoverService uses callbacks and matrices to compute hover logic.\n *\n * @class HoverService\n */\n\nvar HoverService =\n/** @class */\nfunction () {\n  function HoverService(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        matrices = _b.matrices,\n        callbacks = _b.callbacks;\n\n    this.callbacks = defaultCallbacks;\n    this.matrices = defaultMatrices;\n    this.matrices = matrices || this.matrices;\n    this.callbacks = callbacks || this.callbacks;\n  }\n\n  HoverService.prototype.hover = function (drag, hover, actions, _a) {\n    var room = _a.room,\n        mouse = _a.mouse,\n        _b = _a.matrix,\n        use = _b === void 0 ? '10x10' : _b;\n    return computeHover(drag, hover, actions, {\n      room: room,\n      mouse: mouse,\n      matrix: this.matrices[use],\n      callbacks: this.callbacks\n    }, use);\n  };\n\n  return HoverService;\n}();\n\nexport default HoverService;","map":{"version":3,"sources":["../../../src/service/hover/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar _a;\nimport deepEqual from 'deep-equal';\nimport logger from '../logger';\n/**\n * NO (None): No drop zone.\n *\n * Corners are counted clockwise, beginning top left\n * C1 (Corner top left): Position decided by top left corner function\n * C2 (Corner top right): Position decided by top right corner function\n * C3 (Corner bottom right): Position decided by bottom right corner function\n * C4 (Corner bottom left): Position decided by bottom left corner function\n *\n * Above:\n * AH (Above here): above, same level\n * AA (Above of self or some ancestor): Above, compute active level using classification functions, e.g. log, sin, mx + t\n *\n * Below:\n * BH (Below here)\n * BA (Below of self or some ancestor)\n *\n * Left of:\n * LH (Left of here)\n * LA (Left of self or some ancestor)\n *\n * Right of:\n * RH (Right of here)\n * RA (Right of self or some ancestor)\n *\n * Inside / inline\n * IL (Inline left)\n * IR (Inline right)\n */\nexport var classes = {\n    NO: 0,\n    C1: 10,\n    C2: 11,\n    C3: 12,\n    C4: 13,\n    AH: 200,\n    AA: 201,\n    BH: 210,\n    BA: 211,\n    LH: 220,\n    LA: 221,\n    RH: 230,\n    RA: 231,\n    IL: 300,\n    IR: 301,\n};\nvar c = classes;\n/**\n * A list of matrices that are used to define the callback function.\n *\n * @type {{6x6: *[], 10x10: *[], 10x10-no-inline: *[]}}\n */\nexport var defaultMatrices = {\n    '6x6': [\n        [c.C1, c.AA, c.AA, c.AA, c.AA, c.C2],\n        [c.LA, c.IL, c.AH, c.AH, c.IR, c.RA],\n        [c.LA, c.LH, c.NO, c.NO, c.RH, c.RA],\n        [c.LA, c.LH, c.NO, c.NO, c.RH, c.RA],\n        [c.LA, c.C4, c.BH, c.BH, c.C3, c.RA],\n        [c.C4, c.BA, c.BA, c.BA, c.BA, c.C3],\n    ],\n    '10x10': [\n        [c.C1, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.C2],\n        [c.LA, c.IL, c.IL, c.IL, c.AH, c.AH, c.IR, c.IR, c.IR, c.RA],\n        [c.LA, c.IL, c.IL, c.IL, c.AH, c.AH, c.IR, c.IR, c.IR, c.RA],\n        [c.LA, c.IL, c.IL, c.IL, c.AH, c.AH, c.IR, c.IR, c.IR, c.RA],\n        [c.LA, c.LH, c.LH, c.LH, c.C1, c.C2, c.RH, c.RH, c.RH, c.RA],\n        [c.LA, c.LH, c.LH, c.LH, c.C4, c.C3, c.RH, c.RH, c.RH, c.RA],\n        [c.LA, c.LH, c.LH, c.C4, c.BH, c.BH, c.C3, c.IR, c.RH, c.RA],\n        [c.LA, c.LH, c.C4, c.BH, c.BH, c.BH, c.BH, c.C3, c.RH, c.RA],\n        [c.LA, c.C4, c.BH, c.BH, c.BH, c.BH, c.BH, c.BH, c.C3, c.RA],\n        [c.C4, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.C3],\n    ],\n    '10x10-no-inline': [\n        [c.C1, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.C2],\n        [c.LA, c.C1, c.AH, c.AH, c.AH, c.AH, c.AH, c.AH, c.C2, c.RA],\n        [c.LA, c.LH, c.C1, c.AH, c.AH, c.AH, c.AH, c.C2, c.RH, c.RA],\n        [c.LA, c.LH, c.LH, c.C1, c.AH, c.AH, c.C2, c.RH, c.RH, c.RA],\n        [c.LA, c.LH, c.LH, c.LH, c.C1, c.C2, c.RH, c.RH, c.RH, c.RA],\n        [c.LA, c.LH, c.LH, c.LH, c.C4, c.C3, c.RH, c.RH, c.RH, c.RA],\n        [c.LA, c.LH, c.LH, c.C4, c.BH, c.BH, c.C3, c.RH, c.RH, c.RA],\n        [c.LA, c.LH, c.C4, c.BH, c.BH, c.BH, c.BH, c.C3, c.RH, c.RA],\n        [c.LA, c.C4, c.BH, c.BH, c.BH, c.BH, c.BH, c.BH, c.C3, c.RA],\n        [c.C4, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.C3],\n    ],\n};\n/**\n * Computes the average width and height for cells in a room.\n *\n * @param room\n * @param matrix\n * @returns {{x: number, y: number}}\n */\nexport var getRoomScale = function (_a) {\n    var room = _a.room, matrix = _a.matrix;\n    var rows = matrix.length;\n    var cells = matrix[0].length;\n    var scalingX = room.width / cells;\n    var scalingY = room.height / rows;\n    return {\n        x: scalingX,\n        y: scalingY,\n    };\n};\n/**\n * Returns the index of the hover cell.\n *\n * @param mouse\n * @param scale\n */\nexport var getMouseHoverCell = function (_a) {\n    var mouse = _a.mouse, scale = _a.scale;\n    return ({\n        cell: Math.floor(mouse.x / scale.x),\n        row: Math.floor(mouse.y / scale.y),\n    });\n};\n/**\n * Used for caching.\n */\nvar last = { '10x10': null, '10x10-no-inline': null };\nexport var computeHover = function (drag, hover, actions, _a, m\n// tslint:disable-next-line:no-any\n) {\n    var room = _a.room, mouse = _a.mouse, matrix = _a.matrix, callbacks = _a.callbacks;\n    var scale = getRoomScale({ room: room, matrix: matrix });\n    var hoverCell = getMouseHoverCell({ mouse: mouse, scale: scale });\n    var rows = matrix.length;\n    var cells = matrix[0].length;\n    if (hoverCell.row >= rows) {\n        hoverCell.row = rows - 1;\n    }\n    else if (hoverCell.row < 0) {\n        hoverCell.row = 0;\n    }\n    if (hoverCell.cell >= cells) {\n        hoverCell.cell = cells - 1;\n    }\n    else if (hoverCell.cell < 0) {\n        hoverCell.cell = 0;\n    }\n    var cell = matrix[hoverCell.row][hoverCell.cell];\n    if (!callbacks[cell]) {\n        logger.error('Matrix callback not found.', {\n            room: room,\n            mouse: mouse,\n            matrix: matrix,\n            scale: scale,\n            hoverCell: hoverCell,\n            rows: rows,\n            cells: cells,\n        });\n        return;\n    }\n    var all = {\n        item: drag.id,\n        hover: hover.id,\n        actions: actions,\n        ctx: {\n            room: room,\n            mouse: mouse,\n            position: hoverCell,\n            size: { rows: rows, cells: cells },\n            scale: scale,\n        },\n    };\n    if (deepEqual(all, last[m])) {\n        return;\n    }\n    last[m] = all;\n    return callbacks[cell](drag, hover, actions, {\n        room: room,\n        mouse: mouse,\n        position: hoverCell,\n        size: { rows: rows, cells: cells },\n        scale: scale,\n    });\n};\n/**\n * Return the mouse position relative to the cell.\n */\nexport var relativeMousePosition = function (_a) {\n    var mouse = _a.mouse, position = _a.position, scale = _a.scale;\n    return ({\n        x: Math.round(mouse.x - position.cell * scale.x),\n        y: Math.round(mouse.y - position.row * scale.y),\n    });\n};\n/**\n * Computes the drop level based on the mouse position and the cell width.\n */\nexport var computeLevel = function (_a) {\n    var size = _a.size, levels = _a.levels, position = _a.position;\n    if (size <= (levels + 1) * 2) {\n        return Math.round(position / (size / levels));\n    }\n    var spare = size - (levels + 1) * 2;\n    var steps = [0];\n    var current = spare;\n    for (var i = 0; i <= levels; i++) {\n        steps.push(steps[i] + current / 2);\n        current /= 2;\n        if (position >= steps[i] + i * 2 && position < steps[i + 1] + (i + 1) * 2) {\n            return i;\n        }\n    }\n    return levels;\n};\n/**\n * Computes the horizontal drop level based on the mouse position.\n *\n * @param mouse\n * @param position\n * @param hover\n * @param scale\n * @param level\n * @param inv returns the inverse drop level. Usually true for left and above drop level computation.\n * @returns number\n */\nexport var computeHorizontal = function (_a, inv) {\n    var mouse = _a.mouse, position = _a.position, hover = _a.hover, scale = _a.scale, level = _a.level;\n    if (inv === void 0) { inv = false; }\n    var _b = hover.node.cells, cells = _b === void 0 ? [] : _b;\n    var x = relativeMousePosition({ mouse: mouse, position: position, scale: scale }).x;\n    var at = computeLevel({ size: scale.x, position: x, levels: level });\n    if (cells.length) {\n        // Is row, always opt for lowest level\n        return level;\n    }\n    // If the hovered element is an inline element, level 0 would be directly besides it which doesn't work.\n    // Set it to 1 instead.\n    if (hover.node.inline && at === 0) {\n        at = 1;\n    }\n    return inv ? level - at : at;\n};\n/**\n * Computes the vertical drop level based on the mouse position.\n *\n * @returns number\n */\nexport var computeVertical = function (_a, inv) {\n    var level = _a.level, mouse = _a.mouse, hover = _a.hover, position = _a.position, scale = _a.scale;\n    if (inv === void 0) { inv = false; }\n    var _b = hover.node.cells, cells = _b === void 0 ? [] : _b;\n    var y = relativeMousePosition({ mouse: mouse, position: position, scale: scale }).y;\n    var at = computeLevel({ size: scale.y, position: y, levels: level });\n    if (cells.length) {\n        // Is row, always opt for lowest level\n        return level;\n    }\n    // If the hovered element is an inline element, level 0 would be directly besides it which doesn't work.\n    // Set it to 1 instead.\n    if (hover.node.inline && at === 0) {\n        at = 1;\n    }\n    return inv ? level - at : at;\n};\nvar getDropLevel = function (hover) { return (hover.node.inline ? 1 : 0); };\n/**\n * A list of callbacks.\n */\nexport var defaultCallbacks = (_a = {},\n    _a[c.NO] = function (item, hover, _a) {\n        var clear = _a.clear;\n        return clear(item.id);\n    },\n    /* corners */\n    _a[c.C1] = function (item, hover, _a, \n    // tslint:disable-next-line:no-any\n    ctx) {\n        var leftOf = _a.leftOf, above = _a.above;\n        var mouse = relativeMousePosition(ctx);\n        var level = getDropLevel(hover);\n        if (mouse.x < mouse.y) {\n            return leftOf(item.rawNode(), hover.rawNode(), level);\n        }\n        above(item.rawNode(), hover.rawNode(), level);\n    },\n    _a[c.C2] = function (item, hover, _a, \n    // tslint:disable-next-line:no-any\n    ctx) {\n        var rightOf = _a.rightOf, above = _a.above;\n        var mouse = relativeMousePosition(ctx);\n        var level = getDropLevel(hover);\n        if (mouse.x > mouse.y) {\n            return rightOf(item.rawNode(), hover.rawNode(), level);\n        }\n        above(item.rawNode(), hover.rawNode(), level);\n    },\n    _a[c.C3] = function (item, hover, _a, \n    // tslint:disable-next-line:no-any\n    ctx) {\n        var rightOf = _a.rightOf, below = _a.below;\n        var mouse = relativeMousePosition(ctx);\n        var level = getDropLevel(hover);\n        if (mouse.x > mouse.y) {\n            return rightOf(item.rawNode(), hover.rawNode(), level);\n        }\n        below(item.rawNode(), hover.rawNode(), level);\n    },\n    _a[c.C4] = function (item, hover, _a, \n    // tslint:disable-next-line:no-any\n    ctx) {\n        var leftOf = _a.leftOf, below = _a.below;\n        var mouse = relativeMousePosition(ctx);\n        var level = getDropLevel(hover);\n        if (mouse.x < mouse.y) {\n            return leftOf(item.rawNode(), hover.rawNode(), level);\n        }\n        below(item.rawNode(), hover.rawNode(), level);\n    },\n    /* heres */\n    _a[c.AH] = function (item, hover, _a) {\n        var above = _a.above;\n        var level = getDropLevel(hover);\n        above(item.rawNode(), __assign({}, hover.rawNode()), level);\n    },\n    _a[c.BH] = function (item, hover, _a) {\n        var below = _a.below;\n        var level = getDropLevel(hover);\n        below(item.rawNode(), __assign({}, hover.rawNode()), level);\n    },\n    _a[c.LH] = function (item, hover, _a) {\n        var leftOf = _a.leftOf;\n        var level = getDropLevel(hover);\n        leftOf(item.rawNode(), __assign({}, hover.rawNode()), level);\n    },\n    _a[c.RH] = function (item, hover, _a) {\n        var rightOf = _a.rightOf;\n        var level = getDropLevel(hover);\n        rightOf(item.rawNode(), __assign({}, hover.rawNode()), level);\n    },\n    /* ancestors */\n    _a[c.AA] = function (item, hover, _a, ctx) {\n        var above = _a.above;\n        return above(item.rawNode(), hover.rawNode(), computeVertical(__assign(__assign({}, ctx), { hover: hover, level: hover.node.levels.above }), true));\n    },\n    _a[c.BA] = function (item, hover, _a, ctx) {\n        var below = _a.below;\n        return below(item.rawNode(), hover.rawNode(), computeVertical(__assign(__assign({}, ctx), { hover: hover, level: hover.node.levels.below })));\n    },\n    _a[c.LA] = function (item, hover, _a, ctx) {\n        var leftOf = _a.leftOf;\n        return leftOf(item.rawNode(), hover.rawNode(), computeHorizontal(__assign(__assign({}, ctx), { hover: hover, level: hover.node.levels.left }), true));\n    },\n    _a[c.RA] = function (item, hover, _a, ctx) {\n        var rightOf = _a.rightOf;\n        return rightOf(item.rawNode(), hover.rawNode(), computeHorizontal(__assign(__assign({}, ctx), { hover: hover, level: hover.node.levels.right })));\n    },\n    /* inline */\n    _a[c.IL] = function (item, hover, _a) {\n        var inlineLeft = _a.inlineLeft, leftOf = _a.leftOf;\n        var _b = hover.node, inline = _b.inline, hasInlineNeighbour = _b.hasInlineNeighbour;\n        var _c = item.node.content, _d = (_c === void 0 ? {} : _c).plugin, _e = (_d === void 0 ? {} : _d).isInlineable, isInlineable = _e === void 0 ? false : _e;\n        if (inline || !isInlineable) {\n            return leftOf(item.rawNode(), hover.rawNode(), 2);\n        }\n        if (hasInlineNeighbour && hasInlineNeighbour !== item.id) {\n            return leftOf(item.rawNode(), hover.rawNode(), 2);\n        }\n        if (hasInlineNeighbour &&\n            hasInlineNeighbour === item.id &&\n            item.node.inline === 'left') {\n            return leftOf(item.rawNode(), hover.rawNode(), 2);\n        }\n        inlineLeft(item.rawNode(), hover.rawNode());\n    },\n    _a[c.IR] = function (item, hover, _a) {\n        var inlineRight = _a.inlineRight, rightOf = _a.rightOf;\n        var _b = hover.node, inline = _b.inline, hasInlineNeighbour = _b.hasInlineNeighbour;\n        var _c = item.node.content, _d = (_c === void 0 ? {} : _c).plugin, _e = (_d === void 0 ? {} : _d).isInlineable, isInlineable = _e === void 0 ? false : _e;\n        if (inline || !isInlineable) {\n            return rightOf(item.rawNode(), hover.rawNode(), 2);\n        }\n        if (hasInlineNeighbour && hasInlineNeighbour !== item.id) {\n            return rightOf(item.rawNode(), hover.rawNode(), 2);\n        }\n        if (hasInlineNeighbour &&\n            hasInlineNeighbour === item.id &&\n            item.node.inline === 'right') {\n            return rightOf(item.rawNode(), hover.rawNode(), 2);\n        }\n        inlineRight(item.rawNode(), hover.rawNode());\n    },\n    _a);\n/**\n * The HoverService uses callbacks and matrices to compute hover logic.\n *\n * @class HoverService\n */\nvar HoverService = /** @class */ (function () {\n    function HoverService(_a) {\n        var _b = _a === void 0 ? {} : _a, matrices = _b.matrices, callbacks = _b.callbacks;\n        this.callbacks = defaultCallbacks;\n        this.matrices = defaultMatrices;\n        this.matrices = matrices || this.matrices;\n        this.callbacks = callbacks || this.callbacks;\n    }\n    HoverService.prototype.hover = function (drag, hover, actions, _a) {\n        var room = _a.room, mouse = _a.mouse, _b = _a.matrix, use = _b === void 0 ? '10x10' : _b;\n        return computeHover(drag, hover, actions, {\n            room: room,\n            mouse: mouse,\n            matrix: this.matrices[use],\n            callbacks: this.callbacks,\n        }, use);\n    };\n    return HoverService;\n}());\nexport default HoverService;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}