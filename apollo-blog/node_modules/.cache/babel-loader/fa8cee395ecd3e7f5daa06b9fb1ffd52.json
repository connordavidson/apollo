{"ast":null,"code":"var _jsxFileName = \"/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/containers/Account/Signup.js\";\nimport React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl, Badge } from \"react-bootstrap\";\nimport \"../../content/css/App.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { authSignup } from \"../../store/actions/auth\";\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: null,\n      error: null,\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirm_password: \"\"\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handleUsername = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handlePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.handleConfirmPassword = e => {\n      this.setState({\n        confirm_password: e.target.value\n      });\n    };\n  }\n\n  validateForm() {\n    return email.length > 0 && password.length > 8 && confirm_password.length > 8;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const {\n      username,\n      password\n    } = this.state;\n    this.props.login(username, password);\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      confirm_password\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"account-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Signup \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Email\", React.createElement(FormControl, {\n      required: true,\n      autoFocus: true,\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Username\", React.createElement(FormControl, {\n      required: true,\n      autoFocus: true,\n      value: username,\n      onChange: e => setEmail(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Password\", React.createElement(FormControl, {\n      required: true,\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"confirm_password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Confirm Password\", React.createElement(FormControl, {\n      required: true,\n      value: confirm_password,\n      onChange: e => setConfirmPassword(e.target.value),\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !validateForm(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Signup\"), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" Already have an account? \", React.createElement(NavLink, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Login \"), \" \")));\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/containers/Account/Signup.js"],"names":["React","useState","Button","FormGroup","FormControl","Badge","NavLink","authSignup","Signup","Component","state","loading","error","email","username","password","confirm_password","handleEmail","e","setState","target","value","handleUsername","handlePassword","handleConfirmPassword","validateForm","length","handleSubmit","event","preventDefault","props","login","render","setEmail","setPassword","setConfirmPassword"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n\n} from \"react-bootstrap\";\nimport \"../../content/css/App.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { authSignup } from \"../../store/actions/auth\";\n\nclass  Signup extends React.Component  {\n  state = {\n    loading: null ,\n    error: null ,\n    email : \"\" ,\n    username : \"\" ,\n    password : \"\" ,\n    confirm_password : \"\" ,\n\n  }\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [confirm_password , setConfirmPassword] = useState(\"\");\n\n  handleEmail = (e) => {\n    this.setState({\n      email : e.target.value\n    })\n  }\n  handleUsername = (e) => {\n    this.setState({\n      email : e.target.value\n    })\n  }\n  handlePassword = (e) => {\n    this.setState({\n      password : e.target.value\n    })\n  }\n\n  handleConfirmPassword = (e) => {\n    this.setState({\n      confirm_password : e.target.value\n    })\n  }\n\n  validateForm() {\n    return email.length > 0 && password.length > 8 && confirm_password.length > 8 ;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const {username, password} = this.state;\n    this.props.login(username, password)\n  }\n\n  render(){\n    const {\n      email ,\n      password ,\n      confirm_password ,\n\n    } = this.state ;\n    return (\n      <div className=\"account-form\">\n\n        <form onSubmit={handleSubmit}>\n          <h3>Signup </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            Email\n            <FormControl\n              required\n              autoFocus\n              type=\"email\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            Username\n            <FormControl\n              required\n              autoFocus\n              value={username}\n              onChange={e => setEmail(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            Password\n            <FormControl\n              required\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              type=\"password\"\n            />\n          </FormGroup>\n          <FormGroup controlId=\"confirm_password\" bsSize=\"large\">\n            Confirm Password\n            <FormControl\n              required\n              value={confirm_password}\n              onChange={e => setConfirmPassword(e.target.value)}\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button block bsSize=\"large\" disabled={!validateForm()} type=\"submit\">\n            Signup\n          </Button>\n          <Badge> Already have an account? <NavLink to=\"/login\">Login </NavLink> </Badge>\n        </form>\n      </div>\n    );\n  }\n\n}\n\n\nexport default Signup ;\n"]},"metadata":{},"sourceType":"module"}