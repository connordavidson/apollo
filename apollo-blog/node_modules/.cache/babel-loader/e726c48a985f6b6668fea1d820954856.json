{"ast":null,"code":"/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport undoable, { includeAction } from 'redux-undo';\nimport { set } from 'redux-undo/lib/debug';\nimport { CELL_REMOVE, CELL_RESIZE, CELL_UPDATE_CONTENT, CELL_UPDATE_LAYOUT } from '../../actions/cell/core';\nimport { CELL_INSERT_ABOVE, CELL_INSERT_BELOW, CELL_INSERT_INLINE_LEFT, CELL_INSERT_INLINE_RIGHT, CELL_INSERT_LEFT_OF, CELL_INSERT_RIGHT_OF } from '../../actions/cell/insert';\nimport { UPDATE_EDITABLE } from '../../actions/editables';\nimport { isProduction } from '../../const';\nimport { editable } from '../editable';\n\nif (!isProduction) {\n  set(true);\n}\n\nvar inner = undoable(function ( // tslint:disable-next-line:no-any\nstate, action) {\n  if (state === void 0) {\n    state = [];\n  }\n\n  switch (action.type) {\n    default:\n      // tslint:disable-next-line:no-any\n      return state.map(function (e) {\n        return editable(e, action);\n      });\n  }\n}, {\n  filter: includeAction([CELL_UPDATE_CONTENT, CELL_UPDATE_LAYOUT, CELL_REMOVE, CELL_RESIZE, CELL_INSERT_ABOVE, CELL_INSERT_BELOW, CELL_INSERT_LEFT_OF, CELL_INSERT_RIGHT_OF, CELL_INSERT_INLINE_LEFT, CELL_INSERT_INLINE_RIGHT]),\n  // initTypes: [UPDATE_EDITABLE],\n  neverSkipReducer: true\n});\nexport var editables = function (state, action) {\n  if (state === void 0) {\n    state = {\n      past: [],\n      present: [],\n      future: []\n    };\n  }\n\n  var _a = state.past,\n      past = _a === void 0 ? [] : _a,\n      _b = state.present,\n      present = _b === void 0 ? [] : _b,\n      _c = state.future,\n      future = _c === void 0 ? [] : _c;\n\n  switch (action.type) {\n    case UPDATE_EDITABLE:\n      return inner({\n        past: past.map(function (e) {\n          return __spread(e.filter(function (_a) {\n            var id = _a.id;\n            return id !== action.editable.id;\n          }), [// we need to run the rawreducer once or the history initial state will be inconsistent.\n          // resolves https://github.com/ory/editor/pull/117#issuecomment-242942796\n          // ...past,\n          editable(action.editable, action)]);\n        }),\n        present: inner(__spread(present.filter(function (_a) {\n          var id = _a.id;\n          return id !== action.editable.id;\n        }), [// we need to run the rawreducer once or the history initial state will be inconsistent.\n        // resolves https://github.com/ory/editor/pull/117#issuecomment-242942796\n        editable(action.editable, action)]), undefined),\n        future: future\n      }, undefined);\n\n    default:\n      return inner(state, action);\n  }\n};","map":{"version":3,"sources":["../../../src/reducer/editables/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAO,QAAP,IAAmB,aAAnB,QAAwC,YAAxC;AACA,SAAS,GAAT,QAAoB,sBAApB;AACA,SACE,WADF,EAEE,WAFF,EAGE,mBAHF,EAIE,kBAJF,QAKO,yBALP;AAMA,SACE,iBADF,EAEE,iBAFF,EAGE,uBAHF,EAIE,wBAJF,EAKE,mBALF,EAME,oBANF,QAOO,2BAPP;AAQA,SAAS,eAAT,QAAgC,yBAAhC;AACA,SAAS,YAAT,QAA6B,aAA7B;AAEA,SAAS,QAAT,QAAyB,aAAzB;;AAEA,IAAI,CAAC,YAAL,EAAmB;AACjB,EAAA,GAAG,CAAC,IAAD,CAAH;AACD;;AAED,IAAM,KAAK,GAAG,QAAQ,CACpB,WACE;AACA,KAFF,EAGE,MAHF,EAOG;AALD,MAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,EAAA;AAAe;;AAOf,UAAQ,MAAM,CAAC,IAAf;AACE;AACE;AACA,aAAO,KAAK,CAAC,GAAN,CAAU,UAAC,CAAD,EAAgB;AAAK,eAAA,QAAQ,CAAC,CAAD,EAAR,MAAQ,CAAR;AAAmB,OAAlD,CAAP;AAHJ;AAKD,CAfmB,EAgBpB;AACE,EAAA,MAAM,EAAE,aAAa,CAAC,CACpB,mBADoB,EAEpB,kBAFoB,EAGpB,WAHoB,EAIpB,WAJoB,EAKpB,iBALoB,EAMpB,iBANoB,EAOpB,mBAPoB,EAQpB,oBARoB,EASpB,uBAToB,EAUpB,wBAVoB,CAAD,CADvB;AAaE;AACA,EAAA,gBAAgB,EAAE;AAdpB,CAhBoB,CAAtB;AAkCA,OAAO,IAAM,SAAS,GAAG,UACvB,KADuB,EAMvB,MANuB,EAMN;AALjB,MAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,OAAO,EAAE,EAFX;AAGE,MAAA,MAAM,EAAE;AAHV,KAAA;AAIC;;AAGO,MAAA,EAAA,GAAA,KAAA,CAAA,IAAA;AAAA,MAAA,IAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAA;AAAA,MAAW,EAAA,GAAA,KAAA,CAAA,OAAX;AAAA,MAAW,OAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAX;AAAA,MAAyB,EAAA,GAAA,KAAA,CAAA,MAAzB;AAAA,MAAyB,MAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAzB;;AAER,UAAQ,MAAM,CAAC,IAAf;AACE,SAAK,eAAL;AACE,aAAO,KAAK,CACV;AACE,QAAA,IAAI,EAAE,IAAI,CAAC,GAAL,CAAS,UAAA,CAAA,EAAC;AAAI,iBAAA,QAAA,CAEd,CAAS,CAAC,MAAV,CACF,UAAC,EAAD,EAAqB;gBAAlB,EAAA,GAAA,EAAA,CAAA,E;AAAgC,mBAAA,EAAE,KAAK,MAAM,CAAC,QAAP,CAAgB,EAAvB;AAAyB,WAD1D,CAFc,EAIjB,CACD;AACA;AACA;AACA,UAAA,QAAQ,CAAC,MAAM,CAAC,QAAR,EAAkB,MAAlB,CAJP,CAJiB,CAAA;AASnB,SATK,CADR;AAWE,QAAA,OAAO,EAAE,KAAK,CACZ,QAAA,CACK,OAAO,CAAC,MAAR,CACD,UAAC,EAAD,EAAqB;cAAlB,EAAA,GAAA,EAAA,CAAA,E;AAAgC,iBAAA,EAAE,KAAK,MAAM,CAAC,QAAP,CAAgB,EAAvB;AAAyB,SAD3D,CADL,EAGG,CACD;AACA;AACA,QAAA,QAAQ,CAAC,MAAM,CAAC,QAAR,EAAkB,MAAlB,CAHP,CAHH,CADY,EAUZ,SAVY,CAXhB;AAuBE,QAAA,MAAM,EAAA;AAvBR,OADU,EA0BV,SA1BU,CAAZ;;AA4BF;AACE,aAAO,KAAK,CAAC,KAAD,EAAQ,MAAR,CAAZ;AA/BJ;AAiCD,CA3CM","sourceRoot":"","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport undoable, { includeAction } from 'redux-undo';\nimport { set } from 'redux-undo/lib/debug';\nimport { CELL_REMOVE, CELL_RESIZE, CELL_UPDATE_CONTENT, CELL_UPDATE_LAYOUT } from '../../actions/cell/core';\nimport { CELL_INSERT_ABOVE, CELL_INSERT_BELOW, CELL_INSERT_INLINE_LEFT, CELL_INSERT_INLINE_RIGHT, CELL_INSERT_LEFT_OF, CELL_INSERT_RIGHT_OF } from '../../actions/cell/insert';\nimport { UPDATE_EDITABLE } from '../../actions/editables';\nimport { isProduction } from '../../const';\nimport { editable } from '../editable';\nif (!isProduction) {\n    set(true);\n}\nvar inner = undoable(function (\n// tslint:disable-next-line:no-any\nstate, action) {\n    if (state === void 0) { state = []; }\n    switch (action.type) {\n        default:\n            // tslint:disable-next-line:no-any\n            return state.map(function (e) { return editable(e, action); });\n    }\n}, {\n    filter: includeAction([\n        CELL_UPDATE_CONTENT,\n        CELL_UPDATE_LAYOUT,\n        CELL_REMOVE,\n        CELL_RESIZE,\n        CELL_INSERT_ABOVE,\n        CELL_INSERT_BELOW,\n        CELL_INSERT_LEFT_OF,\n        CELL_INSERT_RIGHT_OF,\n        CELL_INSERT_INLINE_LEFT,\n        CELL_INSERT_INLINE_RIGHT,\n    ]),\n    // initTypes: [UPDATE_EDITABLE],\n    neverSkipReducer: true,\n});\nexport var editables = function (state, action) {\n    if (state === void 0) { state = {\n        past: [],\n        present: [],\n        future: [],\n    }; }\n    var _a = state.past, past = _a === void 0 ? [] : _a, _b = state.present, present = _b === void 0 ? [] : _b, _c = state.future, future = _c === void 0 ? [] : _c;\n    switch (action.type) {\n        case UPDATE_EDITABLE:\n            return inner({\n                past: past.map(function (e) { return __spread(e.filter(function (_a) {\n                    var id = _a.id;\n                    return id !== action.editable.id;\n                }), [\n                    // we need to run the rawreducer once or the history initial state will be inconsistent.\n                    // resolves https://github.com/ory/editor/pull/117#issuecomment-242942796\n                    // ...past,\n                    editable(action.editable, action),\n                ]); }),\n                present: inner(__spread(present.filter(function (_a) {\n                    var id = _a.id;\n                    return id !== action.editable.id;\n                }), [\n                    // we need to run the rawreducer once or the history initial state will be inconsistent.\n                    // resolves https://github.com/ory/editor/pull/117#issuecomment-242942796\n                    editable(action.editable, action),\n                ]), undefined),\n                future: future,\n            }, undefined);\n        default:\n            return inner(state, action);\n    }\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}