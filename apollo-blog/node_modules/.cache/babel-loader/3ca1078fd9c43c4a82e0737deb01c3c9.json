{"ast":null,"code":"import _classCallCheck from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import axios from\"axios\";import{Container,Card,Button,Col,Form,Alert,Badge}from'react-bootstrap';//for ReactQuill (comment box). found at https://github.com/zenoamaro/react-quill\nimport ReactQuill from'react-quill';import'react-quill/dist/quill.snow.css';import{connect}from\"react-redux\";import LoaderSpinner from'./LoaderSpinner';import RichText from'./RichText';import\"../../content/css/App.css\";import{create_comment_url,create_upvote_url}from\"../../backend-urls.js\";var CommentSection=/*#__PURE__*/function(_React$Component){_inherits(CommentSection,_React$Component);function CommentSection(){var _getPrototypeOf2;var _this;_classCallCheck(this,CommentSection);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(CommentSection)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={error:null,//stores any error that comes back from the database\nloading:null,//set to determine if the page is loading\ncommenter_name:\"\",//stores the anme of the person that is writing the comment\ncomment_body:\"\",//stores the body of the comment\ncomment_submitted:false//determines if the comment has been submitted.\n};_this.handleCommentBody=function(text){_this.setState({comment_body:text});};_this.handleCommenterName=function(text){_this.setState({commenter_name:text.target.value});};_this.handlePostComment=function(){_this.setState({loading:true});var comment_data=new FormData();comment_data.append('body',_this.state.comment_body);comment_data.append('author',_this.state.commenter_name);comment_data.append('article',_this.props.article_id);axios.post(create_comment_url,comment_data).then(function(response){console.log('comment submitted');_this.setState({loading:false,commenter_name:\"\",comment_body:\"\",comment_submitted:true});}).catch(function(error){_this.setState({error:error.response.data,loading:false});});};_this.handleValidateComment=function(){return!(_this.state.comment_body.length>1&&_this.state.commenter_name.length>1);};_this.handleUpvote=function(id,user_id,comment){console.log('upvote');var voted=false;for(var i=0;i<comment.upvotes.length;i++){console.log(comment.upvotes[i].user);if(comment.upvotes[i].user===user_id){voted=true;break;}}var upvote_data=new FormData();upvote_data.append('comment',id);upvote_data.append('user',user_id);// axios\n//   .post(create_upvote_url , upvote_data)\n//   .then(response => {\n//     console.log('upvote created for ' + upvote_data.comment)\n//\n//   })\n//   .catch(error => {\n//     console.log('error creating upvote: ' + upvote_data.comment)\n//   })\n};return _this;}_createClass(CommentSection,[{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,loading=_this$state.loading,error=_this$state.error,comment_body=_this$state.comment_body,commenter_name=_this$state.commenter_name,comment_submitted=_this$state.comment_submitted;var _this$props=this.props,comments=_this$props.comments,user_id=_this$props.user_id;console.log(comments);return React.createElement(\"div\",null,React.createElement(\"h1\",{className:\"tahoma-font\"},\"Article Comments\"),React.createElement(\"hr\",null),React.createElement(Container,null,comments?comments.map(function(comment){return React.createElement(React.Fragment,null,React.createElement(Card,null,React.createElement(Card.Body,null,React.createElement(Card.Title,null,comment.author),React.createElement(Card.Subtitle,{className:\"mb-2 text-muted\"},new Date(comment.created_date).toDateString()),React.createElement(Card.Text,null,React.createElement(RichText,{text:comment.body})),React.createElement(Badge,{onClick:function onClick(){return _this2.handleUpvote(comment.id,user_id,comment);},style:{cursor:'pointer'}},\"Upvote\"),React.createElement(Badge,null,comment.upvotes.length),React.createElement(\"br\",null),React.createElement(Badge,{onClick:function onClick(id,e){return _this2.handleUpvote(comment.id);},style:{cursor:'pointer'}},\"Downvote\"))),React.createElement(\"hr\",null));}):React.createElement(Alert,{variant:\"dark\"},\"There are no comments yet! Leave one below\"),React.createElement(Card,null,React.createElement(Card.Header,null,React.createElement(\"h3\",null,\"Add a Comment\")),React.createElement(Card.Body,null,React.createElement(Card.Text,null,React.createElement(Form,null,React.createElement(Form.Row,null,React.createElement(Form.Label,null,\"Name:\"),React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter Name\",value:commenter_name,onChange:this.handleCommenterName})),React.createElement(\"br\",null),React.createElement(Form.Row,null,React.createElement(Col,null,React.createElement(Form.Label,null,\"Comment:\"),React.createElement(ReactQuill,{placeholder:\"Start Writing...\",onChange:this.handleCommentBody,value:comment_body}))))),loading?React.createElement(Button,{disabled:true,variant:\"primary\"},React.createElement(LoaderSpinner,null)):React.createElement(Button,{onClick:this.handlePostComment,disabled:this.handleValidateComment(),variant:\"primary\"},\"Add Comment\"))),React.createElement(\"br\",null),comment_submitted&&React.createElement(Alert,{variant:\"success\"},\"You successfully added a comment!\")));}}]);return CommentSection;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{loading:state.auth.loading,error:state.auth.error,authenticated:state.auth.token!==null,user_id:state.auth.user_id};};export default connect(mapStateToProps)(CommentSection);","map":{"version":3,"sources":["/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/src/containers/Misc/CommentSection.js"],"names":["React","axios","Container","Card","Button","Col","Form","Alert","Badge","ReactQuill","connect","LoaderSpinner","RichText","create_comment_url","create_upvote_url","CommentSection","state","error","loading","commenter_name","comment_body","comment_submitted","handleCommentBody","text","setState","handleCommenterName","target","value","handlePostComment","comment_data","FormData","append","props","article_id","post","then","response","console","log","catch","data","handleValidateComment","length","handleUpvote","id","user_id","comment","voted","i","upvotes","user","upvote_data","comments","map","author","Date","created_date","toDateString","body","cursor","e","Component","mapStateToProps","auth","authenticated","token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\n\nimport {\n  Container ,\n  Card ,\n  Button,\n  Col ,\n  Form,\n  Alert ,\n  Badge ,\n\n} from 'react-bootstrap';\n//for ReactQuill (comment box). found at https://github.com/zenoamaro/react-quill\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { connect } from \"react-redux\";\n\n\n\nimport LoaderSpinner from './LoaderSpinner'\nimport RichText from './RichText'\nimport \"../../content/css/App.css\";\nimport {\n  create_comment_url ,\n  create_upvote_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\n\nclass CommentSection extends React.Component {\n\n\n  state = {\n    error : null , //stores any error that comes back from the database\n    loading : null , //set to determine if the page is loading\n    commenter_name : \"\" , //stores the anme of the person that is writing the comment\n    comment_body : \"\" , //stores the body of the comment\n    comment_submitted : false , //determines if the comment has been submitted.\n  }\n\n\n\n  handleCommentBody = (text) => {\n    this.setState({\n      comment_body : text\n    })\n  }\n\n  handleCommenterName = (text) => {\n    this.setState({\n      commenter_name : text.target.value\n    })\n  }\n\n  handlePostComment = () => {\n    this.setState({\n      loading: true\n    })\n    var comment_data = new FormData() ;\n    comment_data.append('body' , this.state.comment_body )\n    comment_data.append('author' , this.state.commenter_name)\n    comment_data.append('article', this.props.article_id )\n\n    axios\n      .post(create_comment_url , comment_data)\n      .then(response => {\n        console.log('comment submitted')\n        this.setState({\n          loading: false ,\n          commenter_name : \"\" ,\n          comment_body : \"\" ,\n          comment_submitted : true ,\n\n        })\n      })\n      .catch(error => {\n        this.setState({\n          error: error.response.data ,\n          loading: false ,\n        })\n      })\n  }\n\n  handleValidateComment = () => {\n    return !(this.state.comment_body.length > 1 && this.state.commenter_name.length > 1)\n  }\n\n\n\n\n  handleUpvote = ( id , user_id , comment ) => {\n\n    console.log('upvote')\n    var voted = false\n    for(var i = 0 ;  i < comment.upvotes.length ; i++){\n      console.log(comment.upvotes[i].user)\n      if(comment.upvotes[i].user === user_id){\n        voted = true ;\n        break;\n      }\n    }\n    \n    var upvote_data = new FormData() ;\n    upvote_data.append('comment' , id )\n    upvote_data.append('user' , user_id)\n    // axios\n    //   .post(create_upvote_url , upvote_data)\n    //   .then(response => {\n    //     console.log('upvote created for ' + upvote_data.comment)\n    //\n    //   })\n    //   .catch(error => {\n    //     console.log('error creating upvote: ' + upvote_data.comment)\n    //   })\n  }\n\n\n\n\n  render(){\n\n    const {\n      loading ,\n      error ,\n      comment_body ,\n      commenter_name ,\n      comment_submitted ,\n\n    } = this.state\n\n    const {\n      comments ,\n      user_id ,\n\n    } = this.props\n\n    console.log(comments);\n\n    return(\n        <div >\n          <h1 className=\"tahoma-font\">Article Comments</h1>\n          <hr />\n          <Container>\n                {\n                  comments  ?\n                    comments.map(comment => (\n                      <React.Fragment>\n                        <Card >\n                          <Card.Body>\n                            <Card.Title>{comment.author}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">\n                              {\n                                 new Date(comment.created_date).toDateString()\n                              }\n                            </Card.Subtitle>\n                            <Card.Text>\n                              <RichText text={comment.body} />\n                            </Card.Text>\n\n                            <Badge\n                              onClick={() => this.handleUpvote(comment.id , user_id , comment)}\n                              style={{cursor: 'pointer' , }}\n                            >\n                              Upvote\n                            </Badge>\n                            <Badge>{comment.upvotes.length}</Badge>\n                            <br/>\n                            <Badge\n                              onClick={(id ,e) => this.handleUpvote(comment.id)}\n                              style={{cursor: 'pointer' , }}\n                            >\n                              Downvote\n                            </Badge>\n\n                          </Card.Body>\n                        </Card>\n                        <hr />\n                      </React.Fragment>\n                      )\n                    )\n                  :\n                    <Alert variant=\"dark\">There are no comments yet! Leave one below</Alert>\n\n                }\n\n\n\n            <Card >\n              <Card.Header><h3>Add a Comment</h3></Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  <Form>\n                    <Form.Row>\n                      <Form.Label>Name:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter Name\"\n                        value={commenter_name}\n                        onChange={this.handleCommenterName}\n                      />\n                    </Form.Row>\n                    <br/>\n                    <Form.Row>\n                      <Col>\n                        <Form.Label>Comment:</Form.Label>\n\n                          <ReactQuill\n                            placeholder=\"Start Writing...\"\n                            onChange={this.handleCommentBody}\n                            value={comment_body}\n                          />\n                      </Col>\n                    </Form.Row>\n                  </Form>\n                </Card.Text>\n                {\n                  loading ?\n                      <Button\n                        disabled={true}\n                        variant=\"primary\"\n                      >\n                        <LoaderSpinner />\n                      </Button>\n                  :\n\n                    <Button\n                      onClick={this.handlePostComment}\n                      disabled={this.handleValidateComment()}\n                      variant=\"primary\"\n                    >\n                      Add Comment\n                    </Button>\n                }\n              </Card.Body>\n            </Card>\n            <br />\n            {\n              comment_submitted &&\n                <Alert variant=\"success\">You successfully added a comment!</Alert>\n            }\n\n\n\n\n\n          </Container>\n\n        </div>\n\n    )\n  }\n\n\n}\n\n\n\nconst mapStateToProps = state => {\n  return {\n    loading : state.auth.loading ,\n    error : state.auth.error ,\n    authenticated : state.auth.token !== null ,\n    user_id : state.auth.user_id\n  };\n};\n\n\n\nexport default\n  connect(\n    mapStateToProps ,\n\n  )(CommentSection) ;\n"]},"metadata":{},"sourceType":"module"}