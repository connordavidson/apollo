{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { editableReducer, PluginService } from '@react-page/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nvar gridClass = function (size) {\n  if (size === void 0) {\n    size = 12;\n  }\n\n  return \"ory-cell-sm-\" + size + \" ory-cell-xs-12\";\n};\n\nvar HTMLRow = React.memo(function (_a) {\n  var _b = _a.cells,\n      cells = _b === void 0 ? [] : _b,\n      className = _a.className,\n      hasInlineChildren = _a.hasInlineChildren;\n  return React.createElement(\"div\", {\n    className: classNames('ory-row', className, {\n      'ory-row-has-floating-children': hasInlineChildren\n    })\n  }, cells.map(function (c) {\n    return React.createElement(HTMLCell, __assign({\n      key: c.id\n    }, c));\n  }));\n}); // eslint-disable-next-line no-empty-function\n\nvar noop = function () {\n  return;\n};\n\nvar HTMLCell = React.memo(function (props) {\n  var _a;\n\n  var _b = props.rows,\n      rows = _b === void 0 ? [] : _b,\n      _c = props.layout,\n      layout = _c === void 0 ? {} : _c,\n      _d = props.content,\n      content = _d === void 0 ? {} : _d,\n      hasInlineNeighbour = props.hasInlineNeighbour,\n      inline = props.inline,\n      size = props.size,\n      id = props.id,\n      isDraft = props.isDraft;\n  var cn = classNames('ory-cell', gridClass(size), (_a = {\n    'ory-cell-has-inline-neighbour': hasInlineNeighbour\n  }, _a[\"ory-cell-inline-\" + (inline || '')] = inline, _a));\n\n  if (isDraft) {\n    return null;\n  }\n\n  if (layout.plugin) {\n    var state = layout.state,\n        _e = layout.plugin,\n        Component = _e.Component,\n        name_1 = _e.name,\n        version = _e.version;\n    return React.createElement(\"div\", {\n      className: cn\n    }, React.createElement(\"div\", {\n      className: \"ory-cell-inner\"\n    }, React.createElement(Component, {\n      readOnly: true,\n      state: state,\n      onChange: noop,\n      id: id,\n      name: name_1,\n      focused: false,\n      version: version\n    }, rows.map(function (r) {\n      return React.createElement(HTMLRow, __assign({\n        key: r.id\n      }, r, {\n        className: \"ory-cell-inner\"\n      }));\n    }))));\n  } else if (content.plugin) {\n    var state = content.state,\n        _f = content.plugin,\n        Component = _f.Component,\n        name_2 = _f.name,\n        version = _f.version;\n    return React.createElement(\"div\", {\n      className: cn\n    }, React.createElement(\"div\", {\n      className: \"ory-cell-inner ory-cell-leaf\"\n    }, React.createElement(Component, {\n      isPreviewMode: true,\n      readOnly: true,\n      state: state,\n      onChange: noop,\n      id: id,\n      name: name_2,\n      focused: false,\n      version: version,\n      isEditMode: false,\n      isLayoutMode: false,\n      isResizeMode: false,\n      isInsertMode: false\n    })));\n  } else if (rows.length > 0) {\n    return React.createElement(\"div\", {\n      className: cn\n    }, rows.map(function (r) {\n      return React.createElement(HTMLRow, __assign({\n        key: r.id\n      }, r, {\n        className: \"ory-cell-inner\"\n      }));\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: cn\n  }, React.createElement(\"div\", {\n    className: \"ory-cell-inner\"\n  }));\n});\nexport var HTMLRenderer = React.memo(function (_a) {\n  var state = _a.state,\n      plugins = _a.plugins;\n  var service = new PluginService(plugins);\n  var props = editableReducer(service.unserialize(state), {\n    type: 'renderer/noop'\n  });\n  return React.createElement(HTMLRow, __assign({}, props));\n});","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { editableReducer, PluginService } from '@react-page/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\nvar gridClass = function (size) {\n    if (size === void 0) { size = 12; }\n    return \"ory-cell-sm-\" + size + \" ory-cell-xs-12\";\n};\nvar HTMLRow = React.memo(function (_a) {\n    var _b = _a.cells, cells = _b === void 0 ? [] : _b, className = _a.className, hasInlineChildren = _a.hasInlineChildren;\n    return (React.createElement(\"div\", { className: classNames('ory-row', className, {\n            'ory-row-has-floating-children': hasInlineChildren,\n        }) }, cells.map(function (c) { return (React.createElement(HTMLCell, __assign({ key: c.id }, c))); })));\n});\n// eslint-disable-next-line no-empty-function\nvar noop = function () {\n    return;\n};\nvar HTMLCell = React.memo(function (props) {\n    var _a;\n    var _b = props.rows, rows = _b === void 0 ? [] : _b, _c = props.layout, layout = _c === void 0 ? {} : _c, _d = props.content, content = _d === void 0 ? {} : _d, hasInlineNeighbour = props.hasInlineNeighbour, inline = props.inline, size = props.size, id = props.id, isDraft = props.isDraft;\n    var cn = classNames('ory-cell', gridClass(size), (_a = {\n            'ory-cell-has-inline-neighbour': hasInlineNeighbour\n        },\n        _a[\"ory-cell-inline-\" + (inline || '')] = inline,\n        _a));\n    if (isDraft) {\n        return null;\n    }\n    if (layout.plugin) {\n        var state = layout.state, _e = layout.plugin, Component = _e.Component, name_1 = _e.name, version = _e.version;\n        return (React.createElement(\"div\", { className: cn },\n            React.createElement(\"div\", { className: \"ory-cell-inner\" },\n                React.createElement(Component, { readOnly: true, state: state, onChange: noop, id: id, name: name_1, focused: false, version: version }, rows.map(function (r) { return (React.createElement(HTMLRow, __assign({ key: r.id }, r, { className: \"ory-cell-inner\" }))); })))));\n    }\n    else if (content.plugin) {\n        var state = content.state, _f = content.plugin, Component = _f.Component, name_2 = _f.name, version = _f.version;\n        return (React.createElement(\"div\", { className: cn },\n            React.createElement(\"div\", { className: \"ory-cell-inner ory-cell-leaf\" },\n                React.createElement(Component, { isPreviewMode: true, readOnly: true, state: state, onChange: noop, id: id, name: name_2, focused: false, version: version, isEditMode: false, isLayoutMode: false, isResizeMode: false, isInsertMode: false }))));\n    }\n    else if (rows.length > 0) {\n        return (React.createElement(\"div\", { className: cn }, rows.map(function (r) { return (React.createElement(HTMLRow, __assign({ key: r.id }, r, { className: \"ory-cell-inner\" }))); })));\n    }\n    return (React.createElement(\"div\", { className: cn },\n        React.createElement(\"div\", { className: \"ory-cell-inner\" })));\n});\nexport var HTMLRenderer = React.memo(function (_a) {\n    var state = _a.state, plugins = _a.plugins;\n    var service = new PluginService(plugins);\n    var props = editableReducer(service.unserialize(state), {\n        type: 'renderer/noop',\n    });\n    return React.createElement(HTMLRow, __assign({}, props));\n});\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}