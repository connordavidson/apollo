{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { Migration } from '@react-page/core';\nimport isEmpty from 'lodash.isempty';\n\nvar migrateTextNode = function (oldNode) {\n  var _a, _b;\n\n  return __assign({\n    text: oldNode.text\n  }, (_b = (_a = oldNode.marks) === null || _a === void 0 ? void 0 : _a.reduce(function (acc, mark) {\n    var _a;\n\n    return __assign(__assign({}, acc), (_a = {}, _a[mark.type] = !isEmpty(mark.data) ? mark.data : true, _a));\n  }, {}), _b !== null && _b !== void 0 ? _b : {}));\n};\n\nvar migrateElementNode = function (node) {\n  var _a, _b, _c;\n\n  return {\n    data: (_a = node.data, _a !== null && _a !== void 0 ? _a : {}),\n    type: node.type,\n    children: (_c = (_b = node.nodes) === null || _b === void 0 ? void 0 : _b.map(migrateNode), _c !== null && _c !== void 0 ? _c : [])\n  };\n};\n\nvar migrateNode = function (oldNode) {\n  if (oldNode.object === 'text') {\n    return migrateTextNode(oldNode);\n  } else {\n    return migrateElementNode(oldNode);\n  }\n};\n\nvar migration = new Migration({\n  toVersion: '0.0.4',\n  fromVersionRange: '^0.0.3',\n  migrate: function (state) {\n    var _a, _b, _c, _d;\n\n    if (!state) {\n      return {};\n    }\n\n    var slate = (_d = (_c = (_b = (_a = state.serialized) === null || _a === void 0 ? void 0 : _a.document) === null || _b === void 0 ? void 0 : _b.nodes) === null || _c === void 0 ? void 0 : _c.map(migrateNode), _d !== null && _d !== void 0 ? _d : []); // tslint:disable-next-line:no-any\n\n    var result = {\n      slate: slate\n    };\n\n    if (state.importFromHtml) {\n      result.importFromHtml = state.importFromHtml;\n    }\n\n    return result;\n  }\n});\nexport default migration;","map":{"version":3,"sources":["../../src/migrations/v004.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAT,QAA0B,kBAA1B;AACA,OAAO,OAAP,MAAoB,gBAApB;;AA4BA,IAAM,eAAe,GAAG,UAAC,OAAD,EAAqB;;;AAC3C,SAAA,QAAA,CAAA;AACE,IAAA,IAAI,EAAE,OAAO,CAAC;AADhB,GAAA,GAEK,EAAA,GAAA,CAAA,EAAA,GAAC,OAAO,CAAC,KAAT,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAc,EAAA,CAAE,MAAF,CACf,UAAC,GAAD,EAAM,IAAN,EAAU;;;AAAK,WAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACV,GADU,CAAA,GACP,EAAA,GAAA,EAAA,EAAA,EAAA,CACL,IAAI,CAAC,IADA,CAAA,GACO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAN,CAAR,GAAsB,IAAI,CAAC,IAA3B,GAAkC,IADzC,EAC6C,EAFtC,EAAA;AAGb,GAJa,EAKf,EALe,CAAd,EAKC,EAAA,KAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GACC,EARP,EAAA;AAUD,CAXD;;AAaA,IAAM,kBAAkB,GAAG,UAAC,IAAD,EAAqB;;;AAC9C,SAAO;AACL,IAAA,IAAI,GAAA,EAAA,GAAE,IAAI,CAAC,IAAP,EAAW,EAAA,KAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAf,CADC;AAEL,IAAA,IAAI,EAAE,IAAI,CAAC,IAFN;AAGL,IAAA,QAAQ,GAAA,EAAA,GAAA,CAAA,EAAA,GAAE,IAAI,CAAC,KAAP,MAAY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,GAAF,CAAM,WAAN,CAAZ,EAA6B,EAAA,KAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAK,EAAlC;AAHH,GAAP;AAKD,CAND;;AAOA,IAAM,WAAW,GAAG,UAAC,OAAD,EAAiB;AACnC,MAAI,OAAO,CAAC,MAAR,KAAmB,MAAvB,EAA+B;AAC7B,WAAO,eAAe,CAAC,OAAD,CAAtB;AACD,GAFD,MAEO;AACL,WAAO,kBAAkB,CAAC,OAAD,CAAzB;AACD;AACF,CAND;;AAOA,IAAM,SAAS,GAAG,IAAI,SAAJ,CAAc;AAC9B,EAAA,SAAS,EAAE,OADmB;AAE9B,EAAA,gBAAgB,EAAE,QAFY;AAG9B,EAAA,OAAO,EAAE,UAAA,KAAA,EAAK;;;AACZ,QAAI,CAAC,KAAL,EAAY;AACV,aAAO,EAAP;AACD;;AAED,QAAM,KAAK,IAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAG,KAAK,CAAC,UAAT,MAAmB,IAAnB,IAAmB,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmB,EAAA,CAAE,QAArB,MAA6B,IAA7B,IAA6B,EAAA,KAAA,KAAA,CAA7B,GAA6B,KAAA,CAA7B,GAA6B,EAAA,CAAE,KAA/B,MAAoC,IAApC,IAAoC,EAAA,KAAA,KAAA,CAApC,GAAoC,KAAA,CAApC,GAAoC,EAAA,CAAE,GAAF,CAAM,WAAN,CAApC,EAAqD,EAAA,KAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAK,EAA1D,CAAX,CALY,CAMZ;;AACA,QAAM,MAAM,GAAQ;AAAE,MAAA,KAAK,EAAA;AAAP,KAApB;;AACA,QAAI,KAAK,CAAC,cAAV,EAA0B;AACxB,MAAA,MAAM,CAAC,cAAP,GAAwB,KAAK,CAAC,cAA9B;AACD;;AACD,WAAO,MAAP;AACD;AAf6B,CAAd,CAAlB;AAkBA,eAAe,SAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Migration } from '@react-page/core';\nimport isEmpty from 'lodash.isempty';\nvar migrateTextNode = function (oldNode) {\n    var _a, _b;\n    return __assign({ text: oldNode.text }, (_b = (_a = oldNode.marks) === null || _a === void 0 ? void 0 : _a.reduce(function (acc, mark) {\n        var _a;\n        return (__assign(__assign({}, acc), (_a = {}, _a[mark.type] = !isEmpty(mark.data) ? mark.data : true, _a)));\n    }, {}), (_b !== null && _b !== void 0 ? _b : {})));\n};\nvar migrateElementNode = function (node) {\n    var _a, _b, _c;\n    return {\n        data: (_a = node.data, (_a !== null && _a !== void 0 ? _a : {})),\n        type: node.type,\n        children: (_c = (_b = node.nodes) === null || _b === void 0 ? void 0 : _b.map(migrateNode), (_c !== null && _c !== void 0 ? _c : [])),\n    };\n};\nvar migrateNode = function (oldNode) {\n    if (oldNode.object === 'text') {\n        return migrateTextNode(oldNode);\n    }\n    else {\n        return migrateElementNode(oldNode);\n    }\n};\nvar migration = new Migration({\n    toVersion: '0.0.4',\n    fromVersionRange: '^0.0.3',\n    migrate: function (state) {\n        var _a, _b, _c, _d;\n        if (!state) {\n            return {};\n        }\n        var slate = (_d = (_c = (_b = (_a = state.serialized) === null || _a === void 0 ? void 0 : _a.document) === null || _b === void 0 ? void 0 : _b.nodes) === null || _c === void 0 ? void 0 : _c.map(migrateNode), (_d !== null && _d !== void 0 ? _d : []));\n        // tslint:disable-next-line:no-any\n        var result = { slate: slate };\n        if (state.importFromHtml) {\n            result.importFromHtml = state.importFromHtml;\n        }\n        return result;\n    },\n});\nexport default migration;\n//# sourceMappingURL=v004.js.map"]},"metadata":{},"sourceType":"module"}