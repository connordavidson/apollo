{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { BottomToolbar } from '@react-page/ui';\nimport React from 'react';\nimport PluginButton from './PluginButton';\n\nvar Toolbar = function (props) {\n  var show = props.show,\n      removeSlate = props.removeSlate,\n      plugins = props.plugins,\n      translations = props.translations;\n  var bottomToolbarProps = {\n    open: show,\n    dark: true,\n    onDelete: removeSlate,\n    editable: props.editable,\n    name: props.name,\n    id: props.id\n  }; // useWhyDidYouUpdate('Toolbar' + props.id, props);\n\n  return React.createElement(BottomToolbar, __assign({}, bottomToolbarProps), React.createElement(\"div\", null, plugins && plugins.map(function (plugin, i) {\n    return plugin.addToolbarButton ? React.createElement(PluginButton, {\n      key: i,\n      translations: translations,\n      plugin: plugin\n    }) : null;\n  })));\n};\n\nexport default React.memo(Toolbar);","map":{"version":3,"sources":["../../src/Controls/Toolbar.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,aAAT,QAA8B,gBAA9B;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,OAAO,YAAP,MAAyB,gBAAzB;;AAEA,IAAM,OAAO,GAAG,UACd,KADc,EAOb;AAEO,MAAA,IAAA,GAAA,KAAA,CAAA,IAAA;AAAA,MAAM,WAAA,GAAA,KAAA,CAAA,WAAN;AAAA,MAAmB,OAAA,GAAA,KAAA,CAAA,OAAnB;AAAA,MAA4B,YAAA,GAAA,KAAA,CAAA,YAA5B;AACR,MAAM,kBAAkB,GAAG;AACzB,IAAA,IAAI,EAAE,IADmB;AAEzB,IAAA,IAAI,EAAE,IAFmB;AAGzB,IAAA,QAAQ,EAAE,WAHe;AAIzB,IAAA,QAAQ,EAAE,KAAK,CAAC,QAJS;AAKzB,IAAA,IAAI,EAAE,KAAK,CAAC,IALa;AAMzB,IAAA,EAAE,EAAE,KAAK,CAAC;AANe,GAA3B,CAHC,CAWD;;AACA,SACE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,QAAA,CAAA,EAAA,EAAK,kBAAL,CAAd,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACG,OAAO,IACN,OAAO,CAAC,GAAR,CAAY,UAAC,MAAD,EAAS,CAAT,EAAkB;AAC5B,WAAA,MAAM,CAAC,gBAAP,GACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa;AACX,MAAA,GAAG,EAAE,CADM;AAEX,MAAA,YAAY,EAAE,YAFH;AAGX,MAAA,MAAM,EAAE;AAHG,KAAb,CADF,GAMI,IANJ;AAMQ,GAPV,CAFJ,CADF,CADF;AAgBD,CAnCD;;AAqCA,eAAe,KAAK,CAAC,IAAN,CAAW,OAAX,CAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { BottomToolbar } from '@react-page/ui';\nimport React from 'react';\nimport PluginButton from './PluginButton';\nvar Toolbar = function (props) {\n    var show = props.show, removeSlate = props.removeSlate, plugins = props.plugins, translations = props.translations;\n    var bottomToolbarProps = {\n        open: show,\n        dark: true,\n        onDelete: removeSlate,\n        editable: props.editable,\n        name: props.name,\n        id: props.id,\n    };\n    // useWhyDidYouUpdate('Toolbar' + props.id, props);\n    return (React.createElement(BottomToolbar, __assign({}, bottomToolbarProps),\n        React.createElement(\"div\", null, plugins &&\n            plugins.map(function (plugin, i) {\n                return plugin.addToolbarButton ? (React.createElement(PluginButton, { key: i, translations: translations, plugin: plugin })) : null;\n            }))));\n};\nexport default React.memo(Toolbar);\n//# sourceMappingURL=Toolbar.js.map"]},"metadata":{},"sourceType":"module"}