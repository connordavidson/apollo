{"ast":null,"code":"var _jsxFileName = \"/Users/connordavidson/Desktop/apollo-blog/src/containers/Misc/CommentSection.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { Container, Card, Button, Popover, OverlayTrigger, Badge, Row, Col, Form, Spinner } from 'react-bootstrap';\nimport { CheckCircle } from 'react-bootstrap-icons';\nimport LoaderSpinner from './LoaderSpinner';\nimport \"../../content/css/App.css\";\nimport { create_comment_url } from \"../backend-urls.js\";\n\nclass CommentSection extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      //stores any error that comes back from the database\n      loading: false,\n      //set to determine if the page is loading\n      comment_author: \"\",\n      //stores the anme of the person that is writing the comment\n      comment_body: \"\" //stores the body of the comment\n\n    };\n\n    this.handleCommentBody = text => {\n      this.setState({\n        comment_body: text\n      });\n    };\n\n    this.handleCommenterName = text => {\n      this.setState({\n        commenter_name: text.target.value\n      });\n    };\n\n    this.handlePostComment = () => {\n      var comment_data = new FormData();\n      comment_data.append('body', this.state.comment_body);\n      comment_data.append('author', this.state.commenter_name);\n      comment_data.append('upvote', 0);\n      comment_data.append('downvote', 0);\n      axios.post(create_comment_url, comment_data).then(response => {\n        console.log('comment submitted');\n        this.setState({\n          loading: false\n        });\n      }).catch(error => {\n        this.setState({\n          error: error.response.data,\n          loading: false\n        });\n      });\n    };\n\n    this.handleValidateComment = () => {\n      console.log(this.state.comment_body.length);\n      return !(this.state.comment_body.length > 1 && this.state.commenter_name.length > 1);\n    };\n  }\n\n  render() {\n    const {\n      loading,\n      error\n    } = this.state;\n    const {\n      comment_data\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"tahoma-font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Article Comments\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Jeffrey Epstein\"), React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"January 3rd, 2020\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"This is a very insightful article and it really opened my eyes to the possibilities of the next decade\"), React.createElement(Badge, {\n      className: \"article-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"upvote\"), React.createElement(Badge, {\n      className: \"article-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"downvote\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Add a Comment\")), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Name\",\n      onChange: this.handleCommenterName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Comment:\"), React.createElement(ReactQuill, {\n      placeholder: \"Start Writing...\",\n      onChange: this.handleCommentBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))))), React.createElement(Button, {\n      onClick: this.handlePostComment,\n      disabled: this.handleValidateComment(),\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Add Comment\")))));\n  }\n\n}\n\nexport default CommentSection;","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo-blog/src/containers/Misc/CommentSection.js"],"names":["React","axios","Container","Card","Button","Popover","OverlayTrigger","Badge","Row","Col","Form","Spinner","CheckCircle","LoaderSpinner","create_comment_url","CommentSection","Component","state","error","loading","comment_author","comment_body","handleCommentBody","text","setState","handleCommenterName","commenter_name","target","value","handlePostComment","comment_data","FormData","append","post","then","response","console","log","catch","data","handleValidateComment","length","render","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\n\nimport {\n  Container ,\n  Card ,\n  Button,\n  Popover ,\n  OverlayTrigger ,\n  Badge ,\n  Row ,\n  Col ,\n  Form,\n  Spinner ,\n\n} from 'react-bootstrap';\nimport { CheckCircle } from 'react-bootstrap-icons';\nimport LoaderSpinner from './LoaderSpinner'\n\nimport \"../../content/css/App.css\";\nimport {\n  create_comment_url ,\n\n} from \"../backend-urls.js\" ;\n\n\n\nclass CommentSection extends React.Component {\n\n\n  state = {\n    error : null , //stores any error that comes back from the database\n    loading : false , //set to determine if the page is loading\n    comment_author : \"\" , //stores the anme of the person that is writing the comment\n    comment_body : \"\" , //stores the body of the comment\n\n  }\n\n\n\n  handleCommentBody = (text) => {\n    this.setState({\n      comment_body : text\n    })\n  }\n\n  handleCommenterName = (text) => {\n    this.setState({\n      commenter_name : text.target.value\n    })\n  }\n\n  handlePostComment = () => {\n\n    var comment_data = new FormData() ;\n    comment_data.append('body' , this.state.comment_body )\n    comment_data.append('author' , this.state.commenter_name)\n    comment_data.append('upvote', 0)\n    comment_data.append('downvote' , 0)\n\n    axios\n      .post(create_comment_url , comment_data)\n      .then(response => {\n        console.log('comment submitted')\n        this.setState({\n          loading: false ,\n        })\n      })\n      .catch(error => {\n        this.setState({\n          error: error.response.data ,\n          loading: false ,\n        })\n      })\n  }\n\n  handleValidateComment = () => {\n    console.log(this.state.comment_body.length)\n\n    return !(this.state.comment_body.length > 1 && this.state.commenter_name.length > 1)\n  }\n\n\n\n\n  render(){\n\n    const {\n      loading ,\n      error ,\n\n    } = this.state\n\n    const {\n      comment_data ,\n\n    } = this.props\n\n\n    return(\n        <div >\n          <h1 className=\"tahoma-font\">Article Comments</h1>\n          <hr />\n          <Container>\n\n\n            <Card >\n              <Card.Body>\n                <Card.Title>Jeffrey Epstein</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">January 3rd, 2020</Card.Subtitle>\n                <Card.Text>\n                  This is a very insightful article and it really opened my eyes to the possibilities of the next decade\n                </Card.Text>\n                <Badge className=\"article-link\">upvote</Badge>\n                <Badge className=\"article-link\">downvote</Badge>\n              </Card.Body>\n            </Card>\n\n\n            <hr />\n\n            <Card >\n              <Card.Header><h3>Add a Comment</h3></Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  <Form>\n                    <Form.Row>\n                      <Form.Label>Name:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter Name\"\n                        onChange={this.handleCommenterName}\n                      />\n                    </Form.Row>\n                    <br/>\n                    <Form.Row>\n                      <Col>\n                        <Form.Label>Comment:</Form.Label>\n\n                          <ReactQuill\n                            placeholder=\"Start Writing...\"\n                            onChange={this.handleCommentBody}\n                          />\n                      </Col>\n                    </Form.Row>\n                  </Form>\n                </Card.Text>\n                <Button\n                  onClick={this.handlePostComment}\n                  disabled={this.handleValidateComment()}\n                  variant=\"primary\"\n                >\n                  Add Comment\n                </Button>\n              </Card.Body>\n            </Card>\n\n\n\n\n          </Container>\n\n        </div>\n\n    )\n  }\n\n\n}\n\n\nexport default CommentSection ;\n"]},"metadata":{},"sourceType":"module"}