{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport { Migration } from '@react-page/core'; // tslint:disable-next-line:no-any\n\nvar removeLeaves = function (nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  var cleanedNodes = nodes.reduce(function (acc, node) {\n    if (node.leaves) {\n      // we don't need the node itself, as we exepct it to be a text node\n      return __spread(acc, node.leaves.map(function (leave) {\n        return __assign(__assign({}, leave), {\n          object: 'text'\n        });\n      }));\n    } else {\n      var cleanedNode = node.nodes ? __assign(__assign({}, node), {\n        nodes: removeLeaves(node.nodes)\n      }) : node;\n      return __spread(acc, [cleanedNode]);\n    }\n  }, []);\n  return cleanedNodes;\n};\n\nvar migration = new Migration({\n  toVersion: '0.0.3',\n  fromVersionRange: '^0.0.2',\n  migrate: function (state) {\n    if (!state) {\n      return {};\n    }\n\n    var newState = state.serialized && state.serialized.document ? __assign(__assign({}, state), {\n      serialized: __assign(__assign({}, state.serialized), {\n        document: __assign(__assign({}, state.serialized.document), {\n          nodes: removeLeaves(state.serialized.document.nodes)\n        })\n      })\n    }) : state;\n    return newState;\n  }\n});\nexport default migration;","map":{"version":3,"sources":["../../src/migrations/v003.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAT,QAA0B,kBAA1B,C,CAEA;;AACA,IAAM,YAAY,GAAG,UAAC,KAAD,EAAkB;AACrC,MAAI,CAAC,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AACD,MAAM,YAAY,GAAG,KAAK,CAAC,MAAN,CAAa,UAAC,GAAD,EAAM,IAAN,EAAU;AAC1C,QAAI,IAAI,CAAC,MAAT,EAAiB;AACf;AACA,aAAA,QAAA,CACK,GADL,EAEK,IAAI,CAAC,MAAL,CAAY,GAAZ,CAAgB,UAAA,KAAA,EAAK;AAAI,eAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACvB,KADuB,CAAA,EAClB;AACR,UAAA,MAAM,EAFoB;AAClB,SADkB,CAAA;AAG1B,OAHC,CAFL,CAAA;AAOD,KATD,MASO;AACL,UAAM,WAAW,GAAG,IAAI,CAAC,KAAL,GACjB,QAAA,CAAA,QAAA,CAAA,EAAA,EACM,IADN,CAAA,EACU;AACP,QAAA,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC,KAAN;AADZ,OADV,CADiB,GAKhB,IALJ;AAMA,aAAA,QAAA,CAAW,GAAX,EAAc,CAAE,WAAF,CAAd,CAAA;AACD;AACF,GAnBoB,EAmBlB,EAnBkB,CAArB;AAqBA,SAAO,YAAP;AACD,CA1BD;;AA2BA,IAAM,SAAS,GAAG,IAAI,SAAJ,CAAc;AAC9B,EAAA,SAAS,EAAE,OADmB;AAE9B,EAAA,gBAAgB,EAAE,QAFY;AAG9B,EAAA,OAAO,EAAE,UAAA,KAAA,EAAK;AACZ,QAAI,CAAC,KAAL,EAAY;AACV,aAAO,EAAP;AACD;;AACD,QAAM,QAAQ,GACZ,KAAK,CAAC,UAAN,IAAoB,KAAK,CAAC,UAAN,CAAiB,QAArC,GACG,QAAA,CAAA,QAAA,CAAA,EAAA,EACM,KADN,CAAA,EACW;AACR,MAAA,UAAU,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACL,KAAK,CAAC,UADD,CAAA,EACW;AACnB,QAAA,QAAQ,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACH,KAAK,CAAC,UAAN,CAAiB,QADd,CAAA,EACsB;AAC5B,UAAA,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,UAAN,CAAiB,QAAjB,CAA0B,KAA3B;AADS,SADtB;AADW,OADX;AADF,KADX,CADH,GAWI,KAZN;AAcA,WAAO,QAAP;AACD;AAtB6B,CAAd,CAAlB;AAyBA,eAAe,SAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport { Migration } from '@react-page/core';\n// tslint:disable-next-line:no-any\nvar removeLeaves = function (nodes) {\n    if (!nodes) {\n        return [];\n    }\n    var cleanedNodes = nodes.reduce(function (acc, node) {\n        if (node.leaves) {\n            // we don't need the node itself, as we exepct it to be a text node\n            return __spread(acc, node.leaves.map(function (leave) { return (__assign(__assign({}, leave), { object: 'text' })); }));\n        }\n        else {\n            var cleanedNode = node.nodes\n                ? __assign(__assign({}, node), { nodes: removeLeaves(node.nodes) }) : node;\n            return __spread(acc, [cleanedNode]);\n        }\n    }, []);\n    return cleanedNodes;\n};\nvar migration = new Migration({\n    toVersion: '0.0.3',\n    fromVersionRange: '^0.0.2',\n    migrate: function (state) {\n        if (!state) {\n            return {};\n        }\n        var newState = state.serialized && state.serialized.document\n            ? __assign(__assign({}, state), { serialized: __assign(__assign({}, state.serialized), { document: __assign(__assign({}, state.serialized.document), { nodes: removeLeaves(state.serialized.document.nodes) }) }) }) : state;\n        return newState;\n    },\n});\nexport default migration;\n//# sourceMappingURL=v003.js.map"]},"metadata":{},"sourceType":"module"}