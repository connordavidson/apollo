{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport React, { useState } from 'react';\nexport default (function (_a) {\n  var children = _a.children;\n  var ref = React.createRef();\n  var stickyElRef = React.createRef();\n\n  var _b = __read(useState(false), 2),\n      shouldStickToTop = _b[0],\n      setShouldStickToTop = _b[1];\n\n  var _c = __read(useState(true), 2),\n      shouldStickToBottom = _c[0],\n      setShouldStickToBottom = _c[1];\n\n  var _d = __read(useState(0), 2),\n      rightOffset = _d[0],\n      setRightOffset = _d[1];\n\n  React.useEffect(function () {\n    var calc = function () {\n      if (ref.current) {\n        var _a = ref.current.getBoundingClientRect(),\n            top_1 = _a.top,\n            left = _a.left;\n\n        var bottom = top_1 + ref.current.clientHeight; // document.documentElement.clientWidth is without scrollbars, so better for us\n\n        var right = document.documentElement.clientWidth - left - ref.current.clientWidth;\n        var uiHeight = stickyElRef.current ? stickyElRef.current.clientHeight : 400;\n        setRightOffset(right);\n        setShouldStickToTop(top_1 > window.innerHeight - uiHeight);\n        setShouldStickToBottom(bottom < window.innerHeight);\n      }\n    };\n\n    document.addEventListener('scroll', calc);\n    window.addEventListener('resize', calc); // do it once\n\n    calc();\n    return function () {\n      document.removeEventListener('scroll', calc);\n      window.removeEventListener('resize', calc);\n    };\n  }, [ref, stickyElRef]);\n  return React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    ref: ref\n  }, children({\n    rightOffset: rightOffset,\n    stickyElRef: stickyElRef,\n    shouldStickToTop: shouldStickToTop,\n    shouldStickToBottom: shouldStickToBottom\n  }));\n});","map":{"version":3,"sources":["../../src/editor/StickyWrapper.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,QAAhB,QAAgC,OAAhC;AAEA,gBAAe,UAAC,EAAD,EAAa;MAAV,QAAA,GAAA,EAAA,CAAA,Q;AAChB,MAAM,GAAG,GAAG,KAAK,CAAC,SAAN,EAAZ;AAEA,MAAM,WAAW,GAAG,KAAK,CAAC,SAAN,EAApB;;AACM,MAAA,EAAA,GAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA;AAAA,MAAC,gBAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAmB,mBAAA,GAAA,EAAA,CAAA,CAAA,CAAnB;;AACA,MAAA,EAAA,GAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA;AAAA,MAAC,mBAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAsB,sBAAA,GAAA,EAAA,CAAA,CAAA,CAAtB;;AAEA,MAAA,EAAA,GAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA,MAAC,WAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAc,cAAA,GAAA,EAAA,CAAA,CAAA,CAAd;;AACN,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACd,QAAM,IAAI,GAAG,YAAA;AACX,UAAI,GAAG,CAAC,OAAR,EAAiB;AACT,YAAA,EAAA,GAAA,GAAA,CAAA,OAAA,CAAA,qBAAA,EAAA;AAAA,YAAE,KAAA,GAAA,EAAA,CAAA,GAAF;AAAA,YAAO,IAAA,GAAA,EAAA,CAAA,IAAP;;AACN,YAAM,MAAM,GAAG,KAAG,GAAG,GAAG,CAAC,OAAJ,CAAY,YAAjC,CAFe,CAGf;;AACA,YAAM,KAAK,GACT,QAAQ,CAAC,eAAT,CAAyB,WAAzB,GAAuC,IAAvC,GAA8C,GAAG,CAAC,OAAJ,CAAY,WAD5D;AAGA,YAAM,QAAQ,GAAG,WAAW,CAAC,OAAZ,GACb,WAAW,CAAC,OAAZ,CAAoB,YADP,GAEb,GAFJ;AAGA,QAAA,cAAc,CAAC,KAAD,CAAd;AACA,QAAA,mBAAmB,CAAC,KAAG,GAAG,MAAM,CAAC,WAAP,GAAqB,QAA5B,CAAnB;AACA,QAAA,sBAAsB,CAAC,MAAM,GAAG,MAAM,CAAC,WAAjB,CAAtB;AACD;AACF,KAfD;;AAgBA,IAAA,QAAQ,CAAC,gBAAT,CAA0B,QAA1B,EAAoC,IAApC;AACA,IAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,IAAlC,EAlBc,CAmBd;;AACA,IAAA,IAAI;AAEJ,WAAO,YAAA;AACL,MAAA,QAAQ,CAAC,mBAAT,CAA6B,QAA7B,EAAuC,IAAvC;AACA,MAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,IAArC;AACD,KAHD;AAID,GA1BD,EA0BG,CAAC,GAAD,EAAM,WAAN,CA1BH;AA4BA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,KAAK,EAAE;AAAE,MAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAsC,IAAA,GAAG,EAAE;AAA3C,GAAA,EACG,QAAQ,CAAC;AACR,IAAA,WAAW,EAAA,WADH;AAER,IAAA,WAAW,EAAA,WAFH;AAGR,IAAA,gBAAgB,EAAA,gBAHR;AAIR,IAAA,mBAAmB,EAAA;AAJX,GAAD,CADX,CADF;AAUD,CA9CD","sourceRoot":"","sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport React, { useState } from 'react';\nexport default (function (_a) {\n    var children = _a.children;\n    var ref = React.createRef();\n    var stickyElRef = React.createRef();\n    var _b = __read(useState(false), 2), shouldStickToTop = _b[0], setShouldStickToTop = _b[1];\n    var _c = __read(useState(true), 2), shouldStickToBottom = _c[0], setShouldStickToBottom = _c[1];\n    var _d = __read(useState(0), 2), rightOffset = _d[0], setRightOffset = _d[1];\n    React.useEffect(function () {\n        var calc = function () {\n            if (ref.current) {\n                var _a = ref.current.getBoundingClientRect(), top_1 = _a.top, left = _a.left;\n                var bottom = top_1 + ref.current.clientHeight;\n                // document.documentElement.clientWidth is without scrollbars, so better for us\n                var right = document.documentElement.clientWidth - left - ref.current.clientWidth;\n                var uiHeight = stickyElRef.current\n                    ? stickyElRef.current.clientHeight\n                    : 400;\n                setRightOffset(right);\n                setShouldStickToTop(top_1 > window.innerHeight - uiHeight);\n                setShouldStickToBottom(bottom < window.innerHeight);\n            }\n        };\n        document.addEventListener('scroll', calc);\n        window.addEventListener('resize', calc);\n        // do it once\n        calc();\n        return function () {\n            document.removeEventListener('scroll', calc);\n            window.removeEventListener('resize', calc);\n        };\n    }, [ref, stickyElRef]);\n    return (React.createElement(\"div\", { style: { position: 'relative' }, ref: ref }, children({\n        rightOffset: rightOffset,\n        stickyElRef: stickyElRef,\n        shouldStickToTop: shouldStickToTop,\n        shouldStickToBottom: shouldStickToBottom,\n    })));\n});\n//# sourceMappingURL=StickyWrapper.js.map"]},"metadata":{},"sourceType":"module"}