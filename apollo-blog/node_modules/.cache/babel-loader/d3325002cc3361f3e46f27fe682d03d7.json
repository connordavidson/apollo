{"ast":null,"code":"import _classCallCheck from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Link}from\"react-router-dom\";import axios from\"axios\";import{Container,Card,ListGroup,Button,Col,Badge,Alert,Row}from'react-bootstrap';import{connect}from\"react-redux\";// found at https://www.npmjs.com/package/react-bootstrap-icons\nimport{StarFill}from'react-bootstrap-icons';import RichText from'./Misc/RichText';import LoaderSpinner from'./Misc/LoaderSpinner';import{all_articles_url}from\"../backend-urls.js\";import\"../content/css/App.css\";import RegisterEmail from'./Misc/RegisterEmail';var Home=/*#__PURE__*/function(_React$Component){_inherits(Home,_React$Component);function Home(){var _getPrototypeOf2;var _this;_classCallCheck(this,Home);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Home)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={error:null,//stores the error that comes from the backend\nloading:true,//to determine if the page is loading\narticles:[],//stores all of the articles retrieved from the database\npinned_article:null//stores the data for the pinned article\n};_this.handleGetArticles=function(){axios.get(all_articles_url).then(function(response){//gets all the information for the article with pinned = true. had to put it in here because this function wouldn't set the state fast enough for another method to access it in the componentDidMount.\nvar articles=response.data;var pinned_article=[];for(var article_id in articles){if(response.data[article_id].pinned){pinned_article.id=articles[article_id].id;pinned_article.title=articles[article_id].title;pinned_article.author=articles[article_id].author;pinned_article.created_date=articles[article_id].created_date;pinned_article.body=articles[article_id].body.substring(0,500);break;}}_this.setState({loading:false,articles:response.data,pinned_article:pinned_article});}).catch(function(error){_this.setState({error:error,loading:false});});};return _this;}_createClass(Home,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({loading:true});this.handleGetArticles();}//retrieves all the articles from the database\n},{key:\"render\",value:function render(){var _this$state=this.state,loading=_this$state.loading,error=_this$state.error,articles=_this$state.articles,pinned_article=_this$state.pinned_article;var _this$props=this.props,authenticated=_this$props.authenticated,token=_this$props.token;console.log(articles);return React.createElement(React.Fragment,null,React.createElement(Container,null,React.createElement(Row,null,React.createElement(Col,{sm:{span:4}},React.createElement(\"h1\",{className:\"verdana-font\"},\"The Apollo Blog\")),React.createElement(Col,{sm:{offset:9}},authenticated?token===\"8582b323219d80196bb1e017411808a67fe70365\"&&React.createElement(\"div\",{className:\"float-right\"},React.createElement(Link,{to:\"/create-article\"},React.createElement(Button,{variant:\"outline-secondary\"},\"Write an Article \"))):React.createElement(\"div\",{className:\"float-right\"},React.createElement(RegisterEmail,{text:\"Sign up for email updates\",direction:\"left\"}))))),React.createElement(\"hr\",null),React.createElement(\"br\",null),React.createElement(ListGroup,{variant:\"flush\"},pinned_article!==null&&React.createElement(ListGroup.Item,null,React.createElement(Link,{to:'blog/article/'+pinned_article.id,className:\"article-link\"},React.createElement(Card,{className:\"width-100-percent margin-bottom-75px\",id:pinned_article.id},React.createElement(Card.Body,null,React.createElement(Card.Title,null,pinned_article.title,\" \",React.createElement(StarFill,{color:\"royalblue\",className:\"float-right font-size-1-25em\"})),React.createElement(Card.Subtitle,{className:\"mb-2 text-muted\"},\"By \",React.createElement(\"a\",{href:\"#\"},pinned_article.author),\" \",React.createElement(Badge,null,new Date(pinned_article.created_date).toDateString(),\" \")),React.createElement(Card.Text,null,React.createElement(RichText,{text:pinned_article.body+\"...\"})))))),loading===true?React.createElement(LoaderSpinner,null):articles.length>0?//reverse() makes the articles appear in reverse chronological order\narticles.map(function(article){return React.createElement(ListGroup.Item,null,React.createElement(Link,{to:'blog/article/'+article.id,className:\"article-link\"},React.createElement(Card,{className:\"width-100-percent\",id:article.id},React.createElement(Card.Body,null,React.createElement(Card.Title,null,article.title),React.createElement(Card.Subtitle,{className:\"mb-2 text-muted\"},\"By \",React.createElement(\"a\",{href:\"#\"},article.author),\" \",React.createElement(Badge,null,new Date(article.created_date).toDateString(),\" \")),React.createElement(Card.Text,null,React.createElement(RichText,{text:article.body.substring(0,200)+'...'}))))));}):React.createElement(Alert,{variant:\"dark\"},\"There was an error retrieving our articles\")));}}]);return Home;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{token:state.auth.token,authenticated:state.auth.token!==null};};export default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/src/containers/Home.js"],"names":["React","Link","axios","Container","Card","ListGroup","Button","Col","Badge","Alert","Row","connect","StarFill","RichText","LoaderSpinner","all_articles_url","RegisterEmail","Home","state","error","loading","articles","pinned_article","handleGetArticles","get","then","response","data","article_id","pinned","id","title","author","created_date","body","substring","setState","catch","props","authenticated","token","console","log","span","offset","Date","toDateString","length","map","article","Component","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from \"react\" ;\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport {\n  Container ,\n  Card ,\n  ListGroup ,\n  Button,\n  Col ,\n  Badge ,\n  Alert ,\n  Row ,\n\n} from 'react-bootstrap';\nimport { connect } from \"react-redux\";\n// found at https://www.npmjs.com/package/react-bootstrap-icons\nimport { StarFill  } from 'react-bootstrap-icons';\n\nimport RichText from './Misc/RichText';\nimport LoaderSpinner from './Misc/LoaderSpinner'\nimport {\n  all_articles_url ,\n\n} from \"../backend-urls.js\" ;\n\nimport \"../content/css/App.css\";\nimport RegisterEmail from './Misc/RegisterEmail';\n\n\n\nclass Home extends React.Component {\n\n  state = {\n    error: null , //stores the error that comes from the backend\n    loading : true , //to determine if the page is loading\n    articles : [] , //stores all of the articles retrieved from the database\n    pinned_article : null , //stores the data for the pinned article\n\n  }\n\n  componentDidMount(){\n    this.setState({\n      loading: true ,\n    })\n    this.handleGetArticles();\n  }\n\n  //retrieves all the articles from the database\n  handleGetArticles = () => {\n    axios\n      .get(all_articles_url)\n      .then(response => {\n\n        //gets all the information for the article with pinned = true. had to put it in here because this function wouldn't set the state fast enough for another method to access it in the componentDidMount.\n        var articles = response.data\n        var pinned_article = []\n        for(var article_id in articles){\n          if (response.data[article_id].pinned ){\n            pinned_article.id = articles[article_id].id ;\n            pinned_article.title = articles[article_id].title ;\n            pinned_article.author = articles[article_id].author ;\n            pinned_article.created_date = articles[article_id].created_date ;\n            pinned_article.body = articles[article_id].body.substring(0, 500) ;\n            break ;\n          }\n        }\n\n        this.setState({\n          loading: false ,\n          articles: response.data ,\n          pinned_article : pinned_article ,\n\n        })\n      })\n      .catch(error => {\n        this.setState({\n          error: error ,\n          loading : false\n        })\n      })\n  }\n\n\n\n  render(){\n\n    const {\n      loading ,\n      error ,\n      articles ,\n      pinned_article ,\n\n    } = this.state\n\n    const {\n      authenticated ,\n      token ,\n\n    } = this.props\n\n\n    console.log(articles)\n    return(\n\n      <React.Fragment>\n        <Container>\n          <Row>\n            <Col sm={{span:4}}>\n              <h1 className=\"verdana-font\">\n                The Apollo Blog\n              </h1>\n            </Col>\n            <Col sm={{offset:9}}>\n              {\n                authenticated ?\n                  token === \"8582b323219d80196bb1e017411808a67fe70365\" &&\n                    <div className=\"float-right\">\n                      <Link to=\"/create-article\" >\n                        <Button variant=\"outline-secondary\">Write an Article </Button>\n                      </Link>\n                    </div>\n                :\n                  <div className=\"float-right\">\n                    <RegisterEmail text=\"Sign up for email updates\" direction=\"left\"/>\n                  </div>\n\n              }\n\n            </Col>\n          </Row>\n\n        </Container>\n        <hr />\n        <br />\n\n        <ListGroup variant=\"flush\">\n          {\n            pinned_article !== null &&\n              <ListGroup.Item >\n                 <Link to={'blog/article/'+pinned_article.id} className=\"article-link\">\n                   <Card className=\"width-100-percent margin-bottom-75px\" id={pinned_article.id}>\n                     <Card.Body>\n                       <Card.Title>{pinned_article.title} <StarFill color=\"royalblue\" className=\"float-right font-size-1-25em\" /></Card.Title>\n                       <Card.Subtitle className=\"mb-2 text-muted\">By <a href='#'>{pinned_article.author}</a> <Badge>{  new Date(pinned_article.created_date).toDateString() } </Badge></Card.Subtitle>\n                       <Card.Text >\n                          <RichText text={pinned_article.body +\"...\" } />\n                       </Card.Text>\n                     </Card.Body>\n                   </Card>\n                 </Link>\n                </ListGroup.Item>\n          }\n\n          {\n            loading === true ?\n              <LoaderSpinner />\n            :\n              articles.length > 0 ?\n                //reverse() makes the articles appear in reverse chronological order\n                articles.map(article =>  (\n                    <ListGroup.Item>\n                      <Link to={'blog/article/'+article.id} className=\"article-link\">\n                        <Card className=\"width-100-percent\" id={article.id}>\n                          <Card.Body>\n                            <Card.Title>{article.title}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">By <a href='#'>{article.author}</a> <Badge>{  new Date(article.created_date).toDateString() } </Badge></Card.Subtitle>\n                            <Card.Text >\n                              <RichText text={article.body.substring(0, 200) + '...'} />\n                            </Card.Text>\n                          </Card.Body>\n                        </Card>\n                      </Link>\n                    </ListGroup.Item>\n                  )\n                )\n              :\n                <Alert variant=\"dark\">\n                  There was an error retrieving our articles\n                </Alert>\n\n\n          }\n\n        </ListGroup>\n\n\n      </ React.Fragment>\n\n\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    token : state.auth.token ,\n    authenticated: state.auth.token !== null ,\n\n  }\n}\n\n\nexport default\n  connect(\n    mapStateToProps,\n\n  )(Home) ;\n"]},"metadata":{},"sourceType":"module"}