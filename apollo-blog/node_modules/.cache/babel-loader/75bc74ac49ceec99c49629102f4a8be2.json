{"ast":null,"code":"import _classCallCheck from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import axios from\"axios\";import{Button,FormGroup,FormControl,Badge,Alert}from\"react-bootstrap\";import LoaderSpinner from'../Misc/LoaderSpinner';import\"../../content/css/App.css\";import{set_new_password_url}from\"../../backend-urls.js\";var SetNewPassword=/*#__PURE__*/function(_React$Component){_inherits(SetNewPassword,_React$Component);function SetNewPassword(){var _getPrototypeOf2;var _this;_classCallCheck(this,SetNewPassword);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(SetNewPassword)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={loading:false,//determines if the page is laoding\nerror:null,//holds the error that gets returned from the database\npassword:\"\",//holds the password value\nconfirm_password:\"\",//holds the confirm_password value\npasswords_match:true,//if the passwords match\nsuccess_message:\"\"//holds the success message from the server\n};_this.handlePassword=function(e){if(_this.state.confirm_password!==e.target.value){_this.setState({passwords_match:false,password:e.target.value});}else{_this.setState({passwords_match:true,password:e.target.value});}};_this.handleConfirmPassword=function(e){if(_this.state.password!==e.target.value){_this.setState({passwords_match:false,confirm_password:e.target.value});}else{_this.setState({passwords_match:true,confirm_password:e.target.value});}};_this.handleValidated=function(){var password_valid=_this.state.password.length>8;var confirm_password_valid=_this.state.confirm_password.length>8;var passwords_match=_this.state.password_valid===_this.state.confirm_password_valid;return password_valid&&confirm_password_valid&&passwords_match&&_this.state.passwords_match;};_this.handleSubmit=function(event){_this.setState({loading:true});event.preventDefault();var uid=_this.props.match.params.uid;var token=_this.props.match.params.token;console.log(uid+\" : \"+token);// creates a new FormData object and adds all the form data to it\nvar password_data=new FormData();password_data.append('new_password1',_this.state.password);password_data.append('new_password2',_this.state.confirm_password);password_data.append('uid',uid);password_data.append('token',token);axios.post(set_new_password_url,password_data).then(function(response){console.log(response);_this.setState({loading:true,success_message:response.data.detail});}).catch(function(error){console.log(error);_this.setState({loading:false,error:error.response.data});});// const {email, username, password , confirm_password} = this.state;\n// console.log(email) ;\n// this.props.signup(username, email, password , confirm_password)\n};return _this;}_createClass(SetNewPassword,[{key:\"render\",value:function render(){var _this$state=this.state,error=_this$state.error,loading=_this$state.loading,password=_this$state.password,confirm_password=_this$state.confirm_password,passwords_match=_this$state.passwords_match,success_message=_this$state.success_message;return React.createElement(\"div\",{className:\"account-form\"},React.createElement(\"form\",null,React.createElement(\"h5\",null,\"Enter New Password \"),React.createElement(FormGroup,{controlId:\"password\",bsSize:\"large\"},\"Password\",React.createElement(FormControl,{required:true,value:password,onChange:this.handlePassword,type:\"password\"})),React.createElement(FormGroup,{controlId:\"confirm_password\",bsSize:\"large\"},\"Confirm Password\",React.createElement(FormControl,{required:true,value:confirm_password,onChange:this.handleConfirmPassword,type:\"password\"})),React.createElement(Button,{block:true,bsSize:\"large\",disabled:!this.handleValidated(),onClick:this.handleSubmit},\"Change Password\"),React.createElement(\"br\",null),!passwords_match&&React.createElement(Alert,{variant:\"danger\"},\"Your passwords must match\"),success_message&&React.createElement(Alert,{variant:\"success\"},success_message),error&&React.createElement(Alert,{variant:\"danger\"},//loops through all the returned errors and prints them with a bullet\nObject.keys(error).map(function(e){return React.createElement(\"li\",null,error[e][0]);}))));}}]);return SetNewPassword;}(React.Component);export default SetNewPassword;","map":{"version":3,"sources":["/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/src/containers/Account/SetNewPassword.js"],"names":["React","axios","Button","FormGroup","FormControl","Badge","Alert","LoaderSpinner","set_new_password_url","SetNewPassword","state","loading","error","password","confirm_password","passwords_match","success_message","handlePassword","e","target","value","setState","handleConfirmPassword","handleValidated","password_valid","length","confirm_password_valid","handleSubmit","event","preventDefault","uid","props","match","params","token","console","log","password_data","FormData","append","post","then","response","data","detail","catch","Object","keys","map","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport LoaderSpinner from '../Misc/LoaderSpinner'\n\nimport \"../../content/css/App.css\";\nimport {\n  set_new_password_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\nclass SetNewPassword extends React.Component {\n  state = {\n    loading : false , //determines if the page is laoding\n    error : null , //holds the error that gets returned from the database\n    password : \"\" , //holds the password value\n    confirm_password : \"\" , //holds the confirm_password value\n    passwords_match : true , //if the passwords match\n    success_message : \"\" , //holds the success message from the server\n  }\n\n  //sets the password into the state and determines if the two password fields match\n  handlePassword = (e) => {\n    if(this.state.confirm_password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        password : e.target.value\n      })\n    }\n  }\n\n  //sets the confirm_password into the state and determines if the two password fields match\n  handleConfirmPassword = (e) => {\n    if(this.state.password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        confirm_password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        confirm_password : e.target.value\n      })\n    }\n  }\n\n\n  //does a simple validation of the user's input and returns true or false\n  handleValidated = () => {\n    var password_valid = this.state.password.length > 8\n    var confirm_password_valid = this.state.confirm_password.length > 8\n    var passwords_match = this.state.password_valid === this.state.confirm_password_valid\n    return password_valid && confirm_password_valid && passwords_match && this.state.passwords_match  ;\n  }\n\n  handleSubmit = (event) => {\n    this.setState({\n      loading: true\n    })\n    event.preventDefault();\n    var uid = this.props.match.params.uid ;\n    var token = this.props.match.params.token;\n\n    console.log(uid + \" : \" +token)\n    // creates a new FormData object and adds all the form data to it\n    var password_data = new FormData();\n    password_data.append('new_password1' , this.state.password) ;\n    password_data.append('new_password2' , this.state.confirm_password) ;\n    password_data.append('uid' , uid) ;\n    password_data.append('token' , token) ;\n\n    axios\n      .post(set_new_password_url , password_data)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          loading: true ,\n          success_message : response.data.detail\n        })\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          loading: false ,\n          error: error.response.data ,\n\n        })\n      })\n\n    // const {email, username, password , confirm_password} = this.state;\n    // console.log(email) ;\n    // this.props.signup(username, email, password , confirm_password)\n  }\n\n\n\n  render(){\n    const {\n        error ,\n        loading ,\n        password ,\n        confirm_password ,\n        passwords_match ,\n        success_message ,\n\n    } = this.state\n\n    return(\n\n      <div className=\"account-form\">\n        <form>\n          <h5>Enter New Password </h5>\n\n            <FormGroup controlId=\"password\" bsSize=\"large\">\n              Password\n              <FormControl\n                required\n                value={password}\n                onChange={this.handlePassword}\n                type=\"password\"\n              />\n            </FormGroup>\n            <FormGroup controlId=\"confirm_password\" bsSize=\"large\">\n              Confirm Password\n              <FormControl\n                required\n                value={confirm_password}\n                onChange={this.handleConfirmPassword}\n                type=\"password\"\n              />\n            </FormGroup>\n\n            <Button block bsSize=\"large\" disabled={!this.handleValidated()} onClick={this.handleSubmit}>\n              Change Password\n            </Button>\n\n            <br/>\n\n            {\n              !passwords_match &&\n              <Alert variant=\"danger\">Your passwords must match</Alert>\n            }\n            {\n              success_message &&\n              <Alert variant=\"success\">{success_message}</Alert>\n            }\n            {\n              error &&\n              <Alert variant=\"danger\">\n                {\n                  //loops through all the returned errors and prints them with a bullet\n                  Object.keys(error).map(e => {\n                    return <li>{error[e][0]}</li>\n                  })\n                }\n              </Alert>\n            }\n\n          </form>\n      </div>\n    )\n  }\n\n\n}\n\n\nexport default SetNewPassword ;\n"]},"metadata":{},"sourceType":"module"}