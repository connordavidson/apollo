{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\n\nimport * as React from 'react';\nimport BackgroundComponent from './Component';\nimport { defaultSettings } from './default/settings';\nimport { lazyLoad } from '@react-page/core';\nvar Icon = lazyLoad(function () {\n  return import('@material-ui/icons/CropLandscape');\n});\n\nvar createPlugin = function (settings) {\n  var mergedSettings = __assign(__assign({}, defaultSettings), settings);\n\n  var plugin = {\n    Component: function (props) {\n      return React.createElement(BackgroundComponent, __assign({}, props, mergedSettings));\n    },\n    name: 'ory/editor/core/layout/background',\n    version: '0.0.1',\n    text: mergedSettings.translations.pluginName,\n    description: mergedSettings.translations.pluginDescription,\n    IconComponent: React.createElement(Icon, null),\n    createInitialChildren: settings.getInitialChildren || function () {\n      return [[{\n        content: {\n          plugin: settings.defaultPlugin\n        }\n      }]];\n    },\n    handleFocusNextHotKey: function () {\n      return Promise.reject();\n    },\n    handleFocusPreviousHotKey: function () {\n      return Promise.reject();\n    }\n  };\n  return plugin;\n};\n\nexport default createPlugin;","map":{"version":3,"sources":["../src/createPlugin.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAKA,OAAO,mBAAP,MAAgC,aAAhC;AACA,SAAS,eAAT,QAAgC,oBAAhC;AACA,SAA6B,QAA7B,QAA6C,kBAA7C;AAEA,IAAM,IAAI,GAAG,QAAQ,CAAC,YAAA;AAAM,SAAA,OAAA,kCAAA,CAAA;AAA0C,CAAjD,CAArB;;AAEA,IAAM,YAAY,GAAG,UAAC,QAAD,EAA6B;AAChD,MAAM,cAAc,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,eAAR,CAAA,EAA4B,QAA5B,CAApB;;AACA,MAAM,MAAM,GAAwC;AAClD,IAAA,SAAS,EAAE,UAAC,KAAD,EAAuB;AAAK,aACrC,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB,QAAA,CAAA,EAAA,EAAK,KAAL,EADiB,cACjB,CAApB,CADqC;AAEtC,KAHiD;AAKlD,IAAA,IAAI,EAAE,mCAL4C;AAMlD,IAAA,OAAO,EAAE,OANyC;AAQlD,IAAA,IAAI,EAAE,cAAc,CAAC,YAAf,CAA4B,UARgB;AASlD,IAAA,WAAW,EAAE,cAAc,CAAC,YAAf,CAA4B,iBATS;AAUlD,IAAA,aAAa,EAAE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,IAAL,CAVmC;AAYlD,IAAA,qBAAqB,EACnB,QAAQ,CAAC,kBAAT,IACC,YAAA;AAAM,aAAA,CAAC,CAAC;AAAE,QAAA,OAAO,EAAE;AAAE,UAAA,MAAM,EAAE,QAAQ,CAA/B;AAAa;AAAX,OAAD,CAAD,CAAA;AAAmD,KAdV;AAgBlD,IAAA,qBAAqB,EAAE,YAAA;AAAM,aAAA,OAAO,CAAP,MAAA,EAAA;AAAgB,KAhBK;AAiBlD,IAAA,yBAAyB,EAAE,YAAA;AAAM,aAAA,OAAO,CAAP,MAAA,EAAA;AAAgB;AAjBC,GAApD;AAmBA,SAAO,MAAP;AACD,CAtBD;;AAwBA,eAAe,YAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nimport * as React from 'react';\nimport BackgroundComponent from './Component';\nimport { defaultSettings } from './default/settings';\nimport { lazyLoad } from '@react-page/core';\nvar Icon = lazyLoad(function () { return import('@material-ui/icons/CropLandscape'); });\nvar createPlugin = function (settings) {\n    var mergedSettings = __assign(__assign({}, defaultSettings), settings);\n    var plugin = {\n        Component: function (props) { return (React.createElement(BackgroundComponent, __assign({}, props, mergedSettings))); },\n        name: 'ory/editor/core/layout/background',\n        version: '0.0.1',\n        text: mergedSettings.translations.pluginName,\n        description: mergedSettings.translations.pluginDescription,\n        IconComponent: React.createElement(Icon, null),\n        createInitialChildren: settings.getInitialChildren ||\n            (function () { return [[{ content: { plugin: settings.defaultPlugin } }]]; }),\n        handleFocusNextHotKey: function () { return Promise.reject(); },\n        handleFocusPreviousHotKey: function () { return Promise.reject(); },\n    };\n    return plugin;\n};\nexport default createPlugin;\n//# sourceMappingURL=createPlugin.js.map"]},"metadata":{},"sourceType":"module"}