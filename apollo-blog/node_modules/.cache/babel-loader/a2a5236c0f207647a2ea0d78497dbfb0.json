{"ast":null,"code":"var _jsxFileName = \"/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/containers/Account/Login.js\";\nimport React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl, Badge } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport \"../../content/css/App.css\";\nimport { authLogin } from \"../store/actions/auth\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: null,\n      //stores the usernmae that is getting entered\n      password: null //stores the password that is getting entered\n\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  validateForm(email, password) {\n    return email.length > 0 && password.length > 8;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const {\n      username,\n      password\n    } = this.state;\n    this.props.login(username, password);\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      token\n    } = this.props;\n    const {\n      username,\n      password\n    } = this.state; //redirects the user to the home page if they are logged in\n    // token &&\n    //   <Redirect to='/' />\n\n    return React.createElement(\"div\", {\n      className: \"account-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.error.message), React.createElement(\"form\", {\n      onSubmit: handleSubmit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Login \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Email\", React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Password\", React.createElement(FormControl, {\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !validateForm(username, password),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"   New to Apollo? \", React.createElement(NavLink, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Sign Up\"), \" \")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password)) // mergeCartOnLogin: () => dispatch(mergeCartOnLogin()),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/containers/Account/Login.js"],"names":["React","useState","Button","FormGroup","FormControl","Badge","connect","NavLink","Redirect","authLogin","Login","Component","state","username","password","handleChange","e","setState","target","name","value","validateForm","email","length","handleSubmit","event","preventDefault","props","login","render","error","loading","token","message","setEmail","setPassword","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\n\n\nimport \"../../content/css/App.css\";\nimport { authLogin } from \"../store/actions/auth\";\n\n\n\n\nclass Login extends React.Component {\n  state = {\n    username: null , //stores the usernmae that is getting entered\n    password: null , //stores the password that is getting entered\n\n  }\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  validateForm(email, password) {\n    return email.length > 0 && password.length > 8;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const {username, password} = this.state;\n    this.props.login(username, password)\n  }\n\n  render(){\n    const { error, loading, token } = this.props;\n    const { username, password } = this.state;\n\n    //redirects the user to the home page if they are logged in\n    // token &&\n    //   <Redirect to='/' />\n\n    return (\n      <div className=\"account-form\">\n        {error && <p>{this.props.error.message}</p>}\n\n        <form onSubmit={handleSubmit()}>\n          <h3>Login </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            Email\n            <FormControl\n              autoFocus\n              type=\"email\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            Password\n            <FormControl\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button block bsSize=\"large\" disabled={!validateForm(username, password)} type=\"submit\">\n            Login\n          </Button>\n          <Badge>   New to Apollo? <NavLink to=\"/signup\">Sign Up</NavLink> </Badge>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password)),\n    // mergeCartOnLogin: () => dispatch(mergeCartOnLogin()),\n\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login) ;\n"]},"metadata":{},"sourceType":"module"}