{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\"; // import {\n//   removeCartOnLogout,\n// } from \"../actions/cart\";\n//staff is deprecated but i'm leaving it because it'll eventually be replaced with \"role\" or \"privs\" or something to insight role based authentication\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n  username: null,\n  user_id: null\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    username: action.username,\n    user_id: action.user_id,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo-blog/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","error","loading","username","user_id","authStart","state","action","authSuccess","authFail","authLogout","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B,C,CACA;AACA;AACA;AAIA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,QAAQ,EAAE,IAJS;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;;AAQA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBL,IAAAA,KAAK,EAAE,IADkB;AAEzBC,IAAAA,OAAO,EAAE;AAFgB,GAAR,CAAnB;AAID,CALD;;AAQA,MAAMM,WAAW,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAErC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBN,IAAAA,KAAK,EAAEO,MAAM,CAACP,KADW;AAEzBG,IAAAA,QAAQ,EAAEI,MAAM,CAACJ,QAFQ;AAGzBC,IAAAA,OAAO,EAAEG,MAAM,CAACH,OAHS;AAIzBH,IAAAA,KAAK,EAAE,IAJkB;AAKzBC,IAAAA,OAAO,EAAE;AALgB,GAAR,CAAnB;AAQD,CAVD;;AAYA,MAAMO,QAAQ,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAClC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBL,IAAAA,KAAK,EAAEM,MAAM,CAACN,KADW;AAEzBC,IAAAA,OAAO,EAAE;AAFgB,GAAR,CAAnB;AAID,CALD;;AAOA,MAAMQ,UAAU,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAEpC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBN,IAAAA,KAAK,EAAE;AADkB,GAAR,CAAnB;AAGD,CALD;;AAOA,MAAMW,OAAO,GAAG,CAACL,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACK,IAAf;AACE,SAAKf,WAAW,CAACgB,UAAjB;AACE,aAAOR,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AACF,SAAKV,WAAW,CAACiB,YAAjB;AACE,aAAON,WAAW,CAACF,KAAD,EAAQC,MAAR,CAAlB;;AACF,SAAKV,WAAW,CAACkB,SAAjB;AACE,aAAON,QAAQ,CAACH,KAAD,EAAQC,MAAR,CAAf;;AACF,SAAKV,WAAW,CAACmB,WAAjB;AACE,aAAON,UAAU,CAACJ,KAAD,EAAQC,MAAR,CAAjB;;AACF;AACE,aAAOD,KAAP;AAVJ;AAYD,CAbD;;AAeA,eAAeK,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n// import {\n//   removeCartOnLogout,\n// } from \"../actions/cart\";\n\n\n\n//staff is deprecated but i'm leaving it because it'll eventually be replaced with \"role\" or \"privs\" or something to insight role based authentication\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n  username: null ,\n  user_id: null ,\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\n\nconst authSuccess = (state, action) => {\n\n  return updateObject(state, {\n    token: action.token ,\n    username: action.username ,\n    user_id: action.user_id ,\n    error: null ,\n    loading: false ,\n\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n\n  return updateObject(state, {\n    token: null\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}