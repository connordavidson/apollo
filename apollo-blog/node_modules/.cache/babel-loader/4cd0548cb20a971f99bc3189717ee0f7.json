{"ast":null,"code":"/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nimport { computeSizes, computeInlines, computeBounds, computeResizeable } from './sizing';\nimport { optimizeCell, optimizeRow, optimizeRows, optimizeCells } from './optimize';\nimport { computeDropLevels } from './level';\nexport var decorate = function (cells) {\n  if (cells === void 0) {\n    cells = [];\n  }\n\n  return computeInlines(computeResizeable(computeBounds(computeSizes(optimizeCells(cells))))).map(function (cell) {\n    if (cell.rows) {\n      cell.rows = optimizeRows(cell.rows).map(function (r) {\n        var optimized = optimizeRow(r);\n\n        if (optimized.cells) {\n          optimized.cells = decorate(optimized.cells);\n        }\n\n        return optimized;\n      });\n    }\n\n    return computeDropLevels(optimizeCell(cell));\n  });\n};","map":{"version":3,"sources":["../../../../src/reducer/editable/helper/tree.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAsBA,SACE,YADF,EAEE,cAFF,EAGE,aAHF,EAIE,iBAJF,QAKO,UALP;AAMA,SACE,YADF,EAEE,WAFF,EAGE,YAHF,EAIE,aAJF,QAKO,YALP;AAMA,SAAS,iBAAT,QAAkC,SAAlC;AAGA,OAAO,IAAM,QAAQ,GAAG,UAAC,KAAD,EAAwB;AAAvB,MAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,EAAA;AAAuB;;AAC9C,SAAA,cAAc,CACZ,iBAAiB,CAAC,aAAa,CAAC,YAAY,CAAC,aAAa,CAAC,KAAD,CAAd,CAAb,CAAd,CADL,CAAd,CAEE,GAFF,CAGE,UAAC,IAAD,EAAW;AACT,QAAI,IAAI,CAAC,IAAT,EAAe;AACb,MAAA,IAAI,CAAC,IAAL,GAAY,YAAY,CAAC,IAAI,CAAC,IAAN,CAAZ,CAAwB,GAAxB,CACV,UAAC,CAAD,EAAO;AACL,YAAM,SAAS,GAAG,WAAW,CAAC,CAAD,CAA7B;;AACA,YAAI,SAAS,CAAC,KAAd,EAAqB;AACnB,UAAA,SAAS,CAAC,KAAV,GAAkB,QAAQ,CAAC,SAAS,CAAC,KAAX,CAA1B;AACD;;AACD,eAAO,SAAP;AACD,OAPS,CAAZ;AASD;;AAED,WAAO,iBAAiB,CAAC,YAAY,CAAC,IAAD,CAAb,CAAxB;AACD,GAjBH,CAAA;AAkBC,CAnBI","sourceRoot":"","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nimport { computeSizes, computeInlines, computeBounds, computeResizeable } from './sizing';\nimport { optimizeCell, optimizeRow, optimizeRows, optimizeCells } from './optimize';\nimport { computeDropLevels } from './level';\nexport var decorate = function (cells) {\n    if (cells === void 0) { cells = []; }\n    return computeInlines(computeResizeable(computeBounds(computeSizes(optimizeCells(cells))))).map(function (cell) {\n        if (cell.rows) {\n            cell.rows = optimizeRows(cell.rows).map(function (r) {\n                var optimized = optimizeRow(r);\n                if (optimized.cells) {\n                    optimized.cells = decorate(optimized.cells);\n                }\n                return optimized;\n            });\n        }\n        return computeDropLevels(optimizeCell(cell));\n    });\n};\n//# sourceMappingURL=tree.js.map"]},"metadata":{},"sourceType":"module"}