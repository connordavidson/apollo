{"ast":null,"code":"import _classCallCheck from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Button,FormGroup,FormControl,Badge,Alert}from\"react-bootstrap\";import{connect}from\"react-redux\";import{NavLink,Redirect}from\"react-router-dom\";import{withRouter}from'react-router';import\"../../content/css/App.css\";import{authLogin}from\"../../store/actions/auth\";var Login=/*#__PURE__*/function(_React$Component){_inherits(Login,_React$Component);function Login(){var _getPrototypeOf2;var _this;_classCallCheck(this,Login);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Login)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={username:\"\",//stores the username that is getting entered\npassword:\"\"//stores the password that is getting entered\n};_this.handleUsername=function(e){_this.setState({username:e.target.value});};_this.handlePassword=function(e){_this.setState({password:e.target.value});};_this.validateForm=function(){console.log(_this.state.email.length);console.log(_this.state.email.length>0&&_this.state.password.length>8);return _this.state.email.length>0&&_this.state.password.length>8;};_this.handleSubmit=function(event){event.preventDefault();var _this$state=_this.state,username=_this$state.username,password=_this$state.password;_this.props.login(username,password);};_this.handleValidated=function(){return _this.state.username.length>1&&_this.state.password.length>1;};return _this;}_createClass(Login,[{key:\"render\",value:function render(){var _this$props=this.props,error=_this$props.error,loading=_this$props.loading,token=_this$props.token;var _this$state2=this.state,username=_this$state2.username,password=_this$state2.password;//redirects the user to the home page if they are logged in\nif(token){return React.createElement(Redirect,{to:\"/\"});}if(error){var errors=error.response.data;}return React.createElement(\"div\",{className:\"account-form\"},React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(\"h3\",null,\"Login \"),React.createElement(\"hr\",null),React.createElement(FormGroup,{controlId:\"email\",bsSize:\"large\"},\"Username\",React.createElement(FormControl,{required:true,autoFocus:true,value:username,onChange:this.handleUsername})),React.createElement(FormGroup,{controlId:\"password\",bsSize:\"large\"},\"Password\",React.createElement(FormControl,{required:true,value:password,onChange:this.handlePassword,type:\"password\"})),React.createElement(Button,{block:true,bsSize:\"large\",disabled:!this.handleValidated(),type:\"submit\"},\"Login\"),React.createElement(Badge,null,\" New to Apollo? \",React.createElement(NavLink,{to:\"/signup\"},\"Sign Up\"),\" \"),React.createElement(\"br\",null),React.createElement(Badge,null,\" \",React.createElement(NavLink,{to:\"/reset-password\"},\"Forgot your password? \"),\" \"),React.createElement(\"br\",null),error&&React.createElement(Alert,{variant:\"danger\"},//loops through all the returned errors and prints them with a bullet\nObject.keys(errors).map(function(e){return React.createElement(\"li\",null,errors[e][0]);}))));}}]);return Login;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{loading:state.auth.loading,error:state.auth.error,token:state.auth.token};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{login:function login(username,password){return dispatch(authLogin(username,password));}// mergeCartOnLogin: () => dispatch(mergeCartOnLogin()),\n};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(Login));","map":{"version":3,"sources":["/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/src/containers/Account/Login.js"],"names":["React","Button","FormGroup","FormControl","Badge","Alert","connect","NavLink","Redirect","withRouter","authLogin","Login","state","username","password","handleUsername","e","setState","target","value","handlePassword","validateForm","console","log","email","length","handleSubmit","event","preventDefault","props","login","handleValidated","error","loading","token","errors","response","data","Object","keys","map","Component","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport {withRouter} from 'react-router';\n\n\nimport \"../../content/css/App.css\";\nimport { authLogin } from \"../../store/actions/auth\";\n\n\n\n\nclass Login extends React.Component {\n  state = {\n    username: \"\" , //stores the username that is getting entered\n    password: \"\" , //stores the password that is getting entered\n\n  }\n\n  handleUsername = e => {\n    this.setState({ username : e.target.value });\n  };\n\n  handlePassword = e => {\n    this.setState({ password : e.target.value });\n  };\n\n  //\n  validateForm = () =>  {\n    console.log(this.state.email.length)\n    console.log(this.state.email.length > 0 && this.state.password.length > 8)\n    return this.state.email.length > 0 && this.state.password.length > 8;\n  }\n\n  handleSubmit = (event) => {\n\n    event.preventDefault();\n    const {username, password} = this.state;\n    this.props.login(username, password)\n  }\n\n  handleValidated = () => {\n    return (this.state.username.length > 1 && this.state.password.length > 1 )\n  }\n\n  render(){\n    const { error, loading, token } = this.props;\n    const { username, password } = this.state;\n\n    //redirects the user to the home page if they are logged in\n    if(token){\n      return <Redirect to='/' />\n    }\n\n\n    if(error){\n      var errors = error.response.data\n    }\n\n\n    return (\n\n\n      <div className=\"account-form\">\n\n        <form onSubmit={this.handleSubmit}>\n          <h3>Login </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            Username\n            <FormControl\n              required\n              autoFocus\n              value={username}\n              onChange= {this.handleUsername}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            Password\n            <FormControl\n              required\n              value={password}\n              onChange= {this.handlePassword}\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button\n            block\n            bsSize=\"large\"\n            disabled={\n              !(this.handleValidated())\n            }\n            type=\"submit\"\n          >\n            Login\n          </Button>\n          <Badge> New to Apollo? <NavLink to=\"/signup\">Sign Up</NavLink> </Badge>\n          <br/>\n          <Badge> <NavLink to=\"/reset-password\">Forgot your password? </NavLink> </Badge>\n            <br />\n            {\n              error &&\n                <Alert variant=\"danger\">\n                  {\n                    //loops through all the returned errors and prints them with a bullet\n                    Object.keys(errors).map(e => {\n                      return <li>{errors[e][0]}</li>\n                    })\n                  }\n                </Alert>\n\n            }\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password)),\n    // mergeCartOnLogin: () => dispatch(mergeCartOnLogin()),\n\n  };\n};\n\nexport default withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(Login)\n  );\n"]},"metadata":{},"sourceType":"module"}