{"ast":null,"code":"/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { DEFAULT_DISPLAY_MODE, SET_DISPLAY_MODE, SET_PREVIOUS_DISPLAY_MODE } from '../../actions/display';\nexport var display = function (state, action) {\n  if (state === void 0) {\n    state = {\n      previous: DEFAULT_DISPLAY_MODE,\n      mode: DEFAULT_DISPLAY_MODE\n    };\n  }\n\n  switch (action.type) {\n    case SET_PREVIOUS_DISPLAY_MODE:\n      return __assign(__assign({}, state), {\n        mode: state.previous === state.mode ? action.fallback : state.previous\n      });\n\n    case SET_DISPLAY_MODE:\n      return {\n        previous: action.mode === state.mode && action.remember ? state.previous : action.mode,\n        mode: action.mode\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["../../../src/reducer/display/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SACE,oBADF,EAEE,gBAFF,EAGE,yBAHF,QAIO,uBAJP;AAOA,OAAO,IAAM,OAAO,GAAG,UACrB,KADqB,EAKrB,MALqB,EAKA;AAJrB,MAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA;AACE,MAAA,QAAQ,EAAE,oBADZ;AAEE,MAAA,IAAI,EAAE;AAFR,KAAA;AAGC;;AAGD,UAAQ,MAAM,CAAC,IAAf;AACE,SAAK,yBAAL;AACE,aAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,KADL,CAAA,EACU;AACR,QAAA,IAAI,EAAE,KAAK,CAAC,QAAN,KAAmB,KAAK,CAAC,IAAzB,GAAgC,MAAM,CAAC,QAAvC,GAAkD,KAAK,CAAC;AADtD,OADV,CAAA;;AAIF,SAAK,gBAAL;AACE,aAAO;AACL,QAAA,QAAQ,EACN,MAAM,CAAC,IAAP,KAAgB,KAAK,CAAC,IAAtB,IAA8B,MAAM,CAAC,QAArC,GACI,KAAK,CAAC,QADV,GAEI,MAAM,CAAC,IAJR;AAKL,QAAA,IAAI,EAAE,MAAM,CAAC;AALR,OAAP;;AAOF;AACE,aAAO,KAAP;AAfJ;AAiBD,CAxBM","sourceRoot":"","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { DEFAULT_DISPLAY_MODE, SET_DISPLAY_MODE, SET_PREVIOUS_DISPLAY_MODE } from '../../actions/display';\nexport var display = function (state, action) {\n    if (state === void 0) { state = {\n        previous: DEFAULT_DISPLAY_MODE,\n        mode: DEFAULT_DISPLAY_MODE,\n    }; }\n    switch (action.type) {\n        case SET_PREVIOUS_DISPLAY_MODE:\n            return __assign(__assign({}, state), { mode: state.previous === state.mode ? action.fallback : state.previous });\n        case SET_DISPLAY_MODE:\n            return {\n                previous: action.mode === state.mode && action.remember\n                    ? state.previous\n                    : action.mode,\n                mode: action.mode,\n            };\n        default:\n            return state;\n    }\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}