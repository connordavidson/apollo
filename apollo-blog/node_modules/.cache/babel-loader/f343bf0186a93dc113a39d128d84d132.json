{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { connect as reduxConnect, Provider } from 'react-redux';\nexport var ReduxContext = React.createContext(null);\nexport var ReduxProvider = function (_a) {\n  var store = _a.store,\n      props = __rest(_a, [\"store\"]);\n\n  return React.createElement(Provider, __assign({\n    store: store,\n    context: ReduxContext\n  }, props));\n}; // tslint:disable-next-line:no-any\n\nexport var connect = function ( // tslint:disable-next-line:no-any\nmapStateToProps, mapDispatchToProps, // tslint:disable-next-line:no-any\nmergeProps, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return reduxConnect(mapStateToProps, mapDispatchToProps, mergeProps, __assign(__assign({}, options), {\n    context: ReduxContext\n  }));\n};","map":{"version":3,"sources":["../src/reduxConnect.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,OAAO,IAAI,YAApB,EAAkC,QAAlC,QAAkD,aAAlD;AACA,OAAO,IAAM,YAAY,GAAG,KAAK,CAAC,aAAN,CAAoB,IAApB,CAArB;AAEP,OAAO,IAAM,aAAa,GAAG,UAAC,EAAD,EAAoB;AAAjB,MAAA,KAAA,GAAA,EAAA,CAAA,KAAA;AAAA,MAAO,KAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,OAAA,CAAA,CAAP;;AAAsB,SACpD,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,QAAA,CAAA;AAAC,IAAA,KAAK,EAAE,KAAR;AAAe,IAAA,OAAO,EAAE;AAAxB,GAAA,EAA0C,KAA1C,CAAT,CADoD;AAErD,CAFM,C,CAIP;;AACA,OAAO,IAAM,OAAO,GAAQ,WAC1B;AACA,eAF0B,EAG1B,kBAH0B,EAI1B;AACA,UAL0B,EAM1B,OAN0B,EAMN;AAApB,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAoB;;AAEpB,SAAA,YAAY,CAAC,eAAD,EAAkB,kBAAlB,EAAsC,UAAtC,EAAgD,QAAA,CAAA,QAAA,CAAA,EAAA,EACvD,OADuD,CAAA,EAChD;AACV,IAAA,OAAO,EAAE;AADC,GADgD,CAAhD,CAAZ;AAGE,CAXG","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { connect as reduxConnect, Provider } from 'react-redux';\nexport var ReduxContext = React.createContext(null);\nexport var ReduxProvider = function (_a) {\n    var store = _a.store, props = __rest(_a, [\"store\"]);\n    return (React.createElement(Provider, __assign({ store: store, context: ReduxContext }, props)));\n};\n// tslint:disable-next-line:no-any\nexport var connect = function (\n// tslint:disable-next-line:no-any\nmapStateToProps, mapDispatchToProps, \n// tslint:disable-next-line:no-any\nmergeProps, options) {\n    if (options === void 0) { options = {}; }\n    return reduxConnect(mapStateToProps, mapDispatchToProps, mergeProps, __assign(__assign({}, options), { context: ReduxContext }));\n};\n//# sourceMappingURL=reduxConnect.js.map"]},"metadata":{},"sourceType":"module"}