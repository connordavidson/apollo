{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { Migration } from '@react-page/core';\nimport rename from 'deep-rename-keys';\nvar migration = new Migration({\n  toVersion: '0.0.2',\n  fromVersionRange: '^0.0.1',\n  migrate: function (state) {\n    // wrap with document\n    state = __assign(__assign({}, state), state.serialized ? {\n      serialized: {\n        document: state.serialized\n      }\n    } : {}); // rename keys\n\n    state = rename(state, function (key) {\n      switch (key) {\n        case 'kind':\n          return 'object';\n\n        case 'ranges':\n          return 'leaves';\n\n        default:\n          return key;\n      }\n    });\n    return state;\n  }\n});\nexport default migration;","map":{"version":3,"sources":["../../src/migrations/v002.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAT,QAA0B,kBAA1B;AACA,OAAO,MAAP,MAAmB,kBAAnB;AACA,IAAM,SAAS,GAAG,IAAI,SAAJ,CAAc;AAC9B,EAAA,SAAS,EAAE,OADmB;AAE9B,EAAA,gBAAgB,EAAE,QAFY;AAG9B,EAAA,OAAO,EAAE,UAAA,KAAA,EAAK;AACZ;AACA,IAAA,KAAK,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACA,KADA,CAAA,EAEC,KAAK,CAAC,UAAN,GACA;AAAE,MAAA,UAAU,EAAE;AAAE,QAAA,QAAQ,EAAE,KAAK,CAAC;AAAlB;AAAd,KADA,GAEA,EAJD,CAAL,CAFY,CAQZ;;AACA,IAAA,KAAK,GAAG,MAAM,CAAC,KAAD,EAAQ,UAAA,GAAA,EAAG;AACvB,cAAQ,GAAR;AACE,aAAK,MAAL;AACE,iBAAO,QAAP;;AACF,aAAK,QAAL;AACE,iBAAO,QAAP;;AACF;AACE,iBAAO,GAAP;AANJ;AAQD,KATa,CAAd;AAUA,WAAO,KAAP;AACD;AAvB6B,CAAd,CAAlB;AA0BA,eAAe,SAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Migration } from '@react-page/core';\nimport rename from 'deep-rename-keys';\nvar migration = new Migration({\n    toVersion: '0.0.2',\n    fromVersionRange: '^0.0.1',\n    migrate: function (state) {\n        // wrap with document\n        state = __assign(__assign({}, state), (state.serialized\n            ? { serialized: { document: state.serialized } }\n            : {}));\n        // rename keys\n        state = rename(state, function (key) {\n            switch (key) {\n                case 'kind':\n                    return 'object';\n                case 'ranges':\n                    return 'leaves';\n                default:\n                    return key;\n            }\n        });\n        return state;\n    },\n});\nexport default migration;\n//# sourceMappingURL=v002.js.map"]},"metadata":{},"sourceType":"module"}