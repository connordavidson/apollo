{"ast":null,"code":"var _jsxFileName = \"/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/containers/Account/Login.js\";\nimport React from \"react\";\nimport { Button, FormGroup, FormControl, Badge, Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { withRouter } from 'react-router';\nimport \"../../content/css/App.css\";\nimport { authLogin } from \"../../store/actions/auth\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      //stores the username that is getting entered\n      password: \"\" //stores the password that is getting entered\n\n    };\n\n    this.handleUsername = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.handlePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.validateForm = () => {\n      console.log(this.state.email.length);\n      console.log(this.state.email.length > 0 && this.state.password.length > 8);\n      return this.state.email.length > 0 && this.state.password.length > 8;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n      this.props.login(username, password);\n    };\n\n    this.handleValidated = () => {\n      return this.state.username.length > 1 && this.state.password.length > 1;\n    };\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      token\n    } = this.props;\n    const {\n      username,\n      password\n    } = this.state; //redirects the user to the home page if they are logged in\n\n    if (token) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    }\n\n    if (error) {\n      // console.log(error.response.data.non_field_errors[0])\n      for (var e in error.response.data) {\n        console.log(e);\n        e.map(message => console.log(message));\n      } // error.response.data.map(message => (\n      //   console.log(message)\n      // ))\n      // console.log(\"error\")\n\n    } // for(var key in error) {\n    //   console.log(\"error[\"+key+\"]: \" + error[key])\n    // //   console.log(\"error response : \" + error[\"response\"].data)\n    //   for(var innerkey in error[key]){\n    //\n    //     console.log(\"error[\"+key+\"][\"+innerkey+\"]: \" + error[key][innerkey])\n    //   }\n    //   console.log(\" \");\n    //   console.log(\" \");\n    //\n    //   // console.log(error['request']['response'].non_field_errors)\n    //   // console.log(error['request']['response'].data)\n    //\n    // }\n    // error &&\n    //   console.log(error.non_field_errors )\n\n\n    return React.createElement(\"div\", {\n      className: \"account-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Login \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Username\", React.createElement(FormControl, {\n      required: true,\n      autoFocus: true,\n      value: username,\n      onChange: this.handleUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Password\", React.createElement(FormControl, {\n      required: true,\n      value: password,\n      onChange: this.handlePassword,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.handleValidated(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \" New to Apollo? \", React.createElement(NavLink, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Sign Up\"), \" \"), error && // error['request']['response'].map(message => (\n    // <Alert variant=\"danger\">{message}</Alert>\n    //   )\n    // )\n    React.createElement(Alert, {\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, error.content)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password)) // mergeCartOnLogin: () => dispatch(mergeCartOnLogin()),\n\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/containers/Account/Login.js"],"names":["React","Button","FormGroup","FormControl","Badge","Alert","connect","NavLink","Redirect","withRouter","authLogin","Login","Component","state","username","password","handleUsername","e","setState","target","value","handlePassword","validateForm","console","log","email","length","handleSubmit","event","preventDefault","props","login","handleValidated","render","error","loading","token","response","data","map","message","content","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,KAJF,EAKEC,KALF,QAOO,iBAPP;AAQA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,kBAAlC;AACA,SAAQC,UAAR,QAAyB,cAAzB;AAGA,OAAO,2BAAP;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAKA,MAAMC,KAAN,SAAoBX,KAAK,CAACY,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AACS;AACfC,MAAAA,QAAQ,EAAE,EAFJ,CAES;;AAFT,KAD0B;;AAAA,SAOlCC,cAPkC,GAOjBC,CAAC,IAAI;AACpB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAEG,CAAC,CAACE,MAAF,CAASC;AAArB,OAAd;AACD,KATiC;;AAAA,SAWlCC,cAXkC,GAWjBJ,CAAC,IAAI;AACpB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAEE,CAAC,CAACE,MAAF,CAASC;AAArB,OAAd;AACD,KAbiC;;AAAA,SAgBlCE,YAhBkC,GAgBnB,MAAO;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,MAA7B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,GAA0B,CAA1B,IAA+B,KAAKb,KAAL,CAAWE,QAAX,CAAoBW,MAApB,GAA6B,CAAxE;AACA,aAAO,KAAKb,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,GAA0B,CAA1B,IAA+B,KAAKb,KAAL,CAAWE,QAAX,CAAoBW,MAApB,GAA6B,CAAnE;AACD,KApBiC;;AAAA,SAsBlCC,YAtBkC,GAsBlBC,KAAD,IAAW;AAExBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAACf,QAAAA,QAAD;AAAWC,QAAAA;AAAX,UAAuB,KAAKF,KAAlC;AACA,WAAKiB,KAAL,CAAWC,KAAX,CAAiBjB,QAAjB,EAA2BC,QAA3B;AACD,KA3BiC;;AAAA,SA6BlCiB,eA7BkC,GA6BhB,MAAM;AACtB,aAAQ,KAAKnB,KAAL,CAAWC,QAAX,CAAoBY,MAApB,GAA6B,CAA7B,IAAkC,KAAKb,KAAL,CAAWE,QAAX,CAAoBW,MAApB,GAA6B,CAAvE;AACD,KA/BiC;AAAA;;AAiClCO,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAA4B,KAAKN,KAAvC;AACA,UAAM;AAAEhB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyB,KAAKF,KAApC,CAFM,CAIN;;AACA,QAAGuB,KAAH,EAAS;AACP,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAGD,QAAGF,KAAH,EAAS;AACP;AACA,WAAI,IAAIjB,CAAR,IAAaiB,KAAK,CAACG,QAAN,CAAeC,IAA5B,EAAiC;AAC7Bf,QAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ;AACFA,QAAAA,CAAC,CAACsB,GAAF,CAAMC,OAAO,IACXjB,OAAO,CAACC,GAAR,CAAYgB,OAAZ,CADF;AAID,OARM,CASP;AACA;AACA;AACA;;AAED,KAxBK,CAyBN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;AAEA,WAGE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAM,MAAA,QAAQ,EAAE,KAAKb,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,OAArB;AAA6B,MAAA,MAAM,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE,oBAAC,WAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,KAAK,EAAEb,QAHT;AAIE,MAAA,QAAQ,EAAG,KAAKE,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAHF,EAYE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAgC,MAAA,MAAM,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE,oBAAC,WAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,KAAK,EAAED,QAFT;AAGE,MAAA,QAAQ,EAAG,KAAKM,cAHlB;AAIE,MAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAZF,EAqBE,oBAAC,MAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,QAAQ,EACN,CAAE,KAAKW,eAAL,EAJN;AAME,MAAA,IAAI,EAAC,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eArBF,EA+BE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAvB,MA/BF,EAiCIE,KAAK,IACH;AACE;AACF;AACA;AACA,wBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBA,KAAK,CAACO,OAA/B,CAtCN,CAFF,CAHF;AAiDD;;AA9HiC;;AAgIpC,MAAMC,eAAe,GAAG7B,KAAK,IAAI;AAC/B,SAAO;AACLsB,IAAAA,OAAO,EAAEtB,KAAK,CAAC8B,IAAN,CAAWR,OADf;AAELD,IAAAA,KAAK,EAAErB,KAAK,CAAC8B,IAAN,CAAWT,KAFb;AAGLE,IAAAA,KAAK,EAAEvB,KAAK,CAAC8B,IAAN,CAAWP;AAHb,GAAP;AAKD,CAND;;AAQA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLd,IAAAA,KAAK,EAAE,CAACjB,QAAD,EAAWC,QAAX,KAAwB8B,QAAQ,CAACnC,SAAS,CAACI,QAAD,EAAWC,QAAX,CAAV,CADlC,CAEL;;AAFK,GAAP;AAKD,CAND;;AAQA,eAAeN,UAAU,CACrBH,OAAO,CACLoC,eADK,EAELE,kBAFK,CAAP,CAGEjC,KAHF,CADqB,CAAzB","sourcesContent":["\nimport React from \"react\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport {withRouter} from 'react-router';\n\n\nimport \"../../content/css/App.css\";\nimport { authLogin } from \"../../store/actions/auth\";\n\n\n\n\nclass Login extends React.Component {\n  state = {\n    username: \"\" , //stores the username that is getting entered\n    password: \"\" , //stores the password that is getting entered\n\n  }\n\n  handleUsername = e => {\n    this.setState({ username: e.target.value });\n  };\n\n  handlePassword = e => {\n    this.setState({ password: e.target.value });\n  };\n\n  //\n  validateForm = () =>  {\n    console.log(this.state.email.length)\n    console.log(this.state.email.length > 0 && this.state.password.length > 8)\n    return this.state.email.length > 0 && this.state.password.length > 8;\n  }\n\n  handleSubmit = (event) => {\n\n    event.preventDefault();\n    const {username, password} = this.state;\n    this.props.login(username, password)\n  }\n\n  handleValidated = () => {\n    return (this.state.username.length > 1 && this.state.password.length > 1 )\n  }\n\n  render(){\n    const { error, loading, token } = this.props;\n    const { username, password } = this.state;\n\n    //redirects the user to the home page if they are logged in\n    if(token){\n      return <Redirect to='/' />\n    }\n\n\n    if(error){\n      // console.log(error.response.data.non_field_errors[0])\n      for(var e in error.response.data){\n          console.log(e)\n        e.map(message => (\n          console.log(message)\n        ))\n\n      }\n      // error.response.data.map(message => (\n      //   console.log(message)\n      // ))\n      // console.log(\"error\")\n\n    }\n    // for(var key in error) {\n    //   console.log(\"error[\"+key+\"]: \" + error[key])\n    // //   console.log(\"error response : \" + error[\"response\"].data)\n    //   for(var innerkey in error[key]){\n    //\n    //     console.log(\"error[\"+key+\"][\"+innerkey+\"]: \" + error[key][innerkey])\n    //   }\n    //   console.log(\" \");\n    //   console.log(\" \");\n    //\n    //   // console.log(error['request']['response'].non_field_errors)\n    //   // console.log(error['request']['response'].data)\n    //\n    // }\n\n\n    // error &&\n    //   console.log(error.non_field_errors )\n\n    return (\n\n\n      <div className=\"account-form\">\n\n        <form onSubmit={this.handleSubmit}>\n          <h3>Login </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            Username\n            <FormControl\n              required\n              autoFocus\n              value={username}\n              onChange= {this.handleUsername}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            Password\n            <FormControl\n              required\n              value={password}\n              onChange= {this.handlePassword}\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button\n            block\n            bsSize=\"large\"\n            disabled={\n              !(this.handleValidated())\n            }\n            type=\"submit\"\n          >\n            Login\n          </Button>\n          <Badge> New to Apollo? <NavLink to=\"/signup\">Sign Up</NavLink> </Badge>\n          {\n            error &&\n              // error['request']['response'].map(message => (\n                // <Alert variant=\"danger\">{message}</Alert>\n              //   )\n              // )\n              <Alert variant=\"danger\">{error.content}</Alert>\n\n          }\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password)),\n    // mergeCartOnLogin: () => dispatch(mergeCartOnLogin()),\n\n  };\n};\n\nexport default withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(Login)\n  );\n"]},"metadata":{},"sourceType":"module"}