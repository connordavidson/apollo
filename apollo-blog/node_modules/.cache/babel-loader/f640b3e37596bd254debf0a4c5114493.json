{"ast":null,"code":"var _jsxFileName = \"/Users/connordavidson/Desktop/apollo-blog/src/containers/Home.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\"; // import RichText from 'prismic-reactjs';\n\nimport { Container, Card, ListGroup, Button, Form, Col, Popover, OverlayTrigger, Badge, Alert, Row } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport RichText from './Misc/RichText';\nimport LoaderSpinner from './Misc/LoaderSpinner';\nimport { all_articles_url } from \"../backend-urls.js\";\nimport \"../content/css/App.css\";\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      //stores the error that comes from the backend\n      loading: true,\n      //to determine if the page is loading\n      articles: [],\n      //stores all of the articles retrieved from the database\n      pinned_article: [] //stores the data for the pinned article\n\n    };\n\n    this.handleGetArticles = () => {\n      axios.get(all_articles_url).then(response => {\n        //gets all the information for the article with pinned = true. had to put it in here because this function wouldn't set the state fast enough for another method to access it in the componentDidMount.\n        var articles = response.data;\n        var pinned_article = [];\n\n        for (var article_id in articles) {\n          if (response.data[article_id].pinned) {\n            console.log(articles[article_id].body);\n            pinned_article.id = articles[article_id].id;\n            pinned_article.title = articles[article_id].title;\n            pinned_article.author = articles[article_id].author;\n            pinned_article.created_date = articles[article_id].created_date;\n            pinned_article.body = articles[article_id].body.substring(0, 500);\n            break;\n          }\n        }\n\n        this.setState({\n          loading: false,\n          articles: response.data,\n          pinned_article: pinned_article\n        });\n      }).catch(error => {\n        this.setState({\n          error: error,\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.handleGetArticles();\n  } //retrieves all the articles from the database\n\n\n  // //selects the article where pinned = True\n  // handleGetPinnedArticle = (articles) => {\n  //   var pinned_article = []\n  //   for(var article in articles){\n  //     console.log(articles[article].pinned)\n  //     if (articles[article].pinned ){\n  //       console.log(articles[article].pinned) ;\n  //       pinned_article.id = articles[article].id ;\n  //       pinned_article.title = articles[article].title ;\n  //       pinned_article.author = articles[article].author ;\n  //       pinned_article.created_date = articles[article].created_date ;\n  //       pinned_article.body = articles[article].body ;\n  //       this.setState({\n  //         pinned_article : pinned_article\n  //       })\n  //       break ;\n  //     }\n  //   }\n  //\n  // }\n  render() {\n    const {\n      loading,\n      error,\n      articles,\n      pinned_article\n    } = this.state;\n    const {\n      authenticated,\n      token\n    } = this.props;\n    console.log(pinned_article.body); //for email popover\n\n    const email_popover = React.createElement(Popover, {\n      id: \"popover-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Popover.Title, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Email Updates\"), React.createElement(Popover.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Submit\"))))));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"verdana-font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"The Apollo Blog\")), React.createElement(Col, {\n      sm: {\n        offset: 9\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, authenticated ? token === \"8582b323219d80196bb1e017411808a67fe70365\" && React.createElement(\"div\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/create-article\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Write an Article\"))) : React.createElement(\"div\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(OverlayTrigger, {\n      trigger: \"click\",\n      placement: \"left\",\n      overlay: email_popover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Sign up for email updates\")))))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      variant: \"flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, pinned_article !== [] && React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: 'blog/article/' + pinned_article.id,\n      className: \"article-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"width-100-percent\",\n      id: pinned_article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, pinned_article.title), React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"By \", React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, pinned_article.author), \" \", React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, new Date(pinned_article.created_date).toDateString(), \" \")), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(RichText, {\n      text: pinned_article.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })))))), loading === true ? React.createElement(LoaderSpinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }) : articles.length > 0 ? //reverse() makes the articles appear in reverse chronological order\n    articles.reverse().map(article => React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: 'blog/article/' + article.id,\n      className: \"article-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"width-100-percent\",\n      id: article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, article.title), React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"By \", React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, article.author), \" \", React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, new Date(article.created_date).toDateString(), \" \")), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(RichText, {\n      text: article.body.substring(0, 200) + '...',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }))))))) : React.createElement(Alert, {\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"There was an error retrieving our articles\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    authenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo-blog/src/containers/Home.js"],"names":["React","Link","axios","Container","Card","ListGroup","Button","Form","Col","Popover","OverlayTrigger","Badge","Alert","Row","connect","RichText","LoaderSpinner","all_articles_url","Home","Component","state","error","loading","articles","pinned_article","handleGetArticles","get","then","response","data","article_id","pinned","console","log","body","id","title","author","created_date","substring","setState","catch","componentDidMount","render","authenticated","token","props","email_popover","span","offset","Date","toDateString","length","reverse","map","article","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from \"react\" ;\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n// import RichText from 'prismic-reactjs';\nimport {\n  Container ,\n  Card ,\n  ListGroup ,\n  Button,\n  Form ,\n  Col ,\n  Popover ,\n  OverlayTrigger ,\n  Badge ,\n  Alert ,\n  Row ,\n\n} from 'react-bootstrap';\nimport { connect } from \"react-redux\";\n\nimport RichText from './Misc/RichText';\nimport LoaderSpinner from './Misc/LoaderSpinner'\nimport {\n  all_articles_url,\n\n} from \"../backend-urls.js\" ;\n\nimport \"../content/css/App.css\";\n\n\n\n\nclass Home extends React.Component {\n\n  state = {\n    error: null , //stores the error that comes from the backend\n    loading : true , //to determine if the page is loading\n    articles : [] , //stores all of the articles retrieved from the database\n    pinned_article : [] , //stores the data for the pinned article\n\n  }\n\n  componentDidMount(){\n    this.setState({\n      loading: true ,\n\n    })\n    this.handleGetArticles();\n  }\n\n  //retrieves all the articles from the database\n  handleGetArticles = () => {\n    axios\n      .get(all_articles_url)\n      .then(response => {\n\n        //gets all the information for the article with pinned = true. had to put it in here because this function wouldn't set the state fast enough for another method to access it in the componentDidMount.\n        var articles = response.data\n        var pinned_article = []\n        for(var article_id in articles){\n          if (response.data[article_id].pinned ){\n            console.log(articles[article_id].body)\n            pinned_article.id = articles[article_id].id ;\n            pinned_article.title = articles[article_id].title ;\n            pinned_article.author = articles[article_id].author ;\n            pinned_article.created_date = articles[article_id].created_date ;\n            pinned_article.body = articles[article_id].body.substring(0, 500) ;\n            break ;\n          }\n        }\n\n        this.setState({\n          loading: false ,\n          articles: response.data ,\n          pinned_article : pinned_article ,\n\n        })\n      })\n      .catch(error => {\n        this.setState({\n          error: error ,\n          loading : false\n        })\n      })\n  }\n\n  // //selects the article where pinned = True\n  // handleGetPinnedArticle = (articles) => {\n  //   var pinned_article = []\n  //   for(var article in articles){\n  //     console.log(articles[article].pinned)\n  //     if (articles[article].pinned ){\n  //       console.log(articles[article].pinned) ;\n  //       pinned_article.id = articles[article].id ;\n  //       pinned_article.title = articles[article].title ;\n  //       pinned_article.author = articles[article].author ;\n  //       pinned_article.created_date = articles[article].created_date ;\n  //       pinned_article.body = articles[article].body ;\n  //       this.setState({\n  //         pinned_article : pinned_article\n  //       })\n  //       break ;\n  //     }\n  //   }\n  //\n  // }\n\n\n\n  render(){\n\n    const {\n      loading ,\n      error ,\n      articles ,\n      pinned_article ,\n\n    } = this.state\n\n    const {\n      authenticated ,\n      token ,\n\n    } = this.props\n\n\n\n\n    console.log(pinned_article.body) ;\n\n    //for email popover\n    const email_popover = (\n      <Popover id=\"popover-basic\">\n        <Popover.Title as=\"h3\">Email Updates</Popover.Title>\n        <Popover.Content>\n          <Form >\n            <Form.Row>\n              <Col>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\n              </Col>\n              <Col>\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Popover.Content>\n      </Popover>\n    )\n\n    return(\n\n      <React.Fragment>\n        <Container>\n          <Row>\n            <Col sm={{span:4}}>\n              <h1 className=\"verdana-font\">\n                The Apollo Blog\n              </h1>\n            </Col>\n            <Col sm={{offset:9}}>\n              {\n                authenticated ?\n                  token === \"8582b323219d80196bb1e017411808a67fe70365\" &&\n                  <div className=\"float-right\">\n                    <Link to=\"/create-article\" >\n                      <Button variant=\"outline-secondary\">Write an Article</Button>\n                    </Link>\n                  </div>\n                :\n                  <div className=\"float-right\">\n                    <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={email_popover}>\n                      <Button variant=\"outline-primary\">Sign up for email updates</Button>\n                    </OverlayTrigger>\n                  </div>\n              }\n\n\n            </Col>\n          </Row>\n\n\n        </Container>\n        <hr />\n        <br />\n\n        <ListGroup variant=\"flush\">\n          {\n            pinned_article !== [] &&\n             <ListGroup.Item>\n               <Link to={'blog/article/'+pinned_article.id} className=\"article-link\">\n                 <Card className=\"width-100-percent\" id={pinned_article.id}>\n                   <Card.Body>\n                     <Card.Title>{pinned_article.title}</Card.Title>\n                     <Card.Subtitle className=\"mb-2 text-muted\">By <a href='#'>{pinned_article.author}</a> <Badge>{  new Date(pinned_article.created_date).toDateString() } </Badge></Card.Subtitle>\n                     <Card.Text >\n                        <RichText text={pinned_article.body } />\n                     </Card.Text>\n                   </Card.Body>\n                 </Card>\n               </Link>\n             </ListGroup.Item>\n          }\n\n          {\n            loading === true ?\n              <LoaderSpinner />\n            :\n              articles.length > 0 ?\n\n                  //reverse() makes the articles appear in reverse chronological order\n                    articles.reverse().map(article =>  (\n                        <ListGroup.Item>\n                          <Link to={'blog/article/'+article.id} className=\"article-link\">\n                            <Card className=\"width-100-percent\" id={article.id}>\n                              <Card.Body>\n                                <Card.Title>{article.title}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">By <a href='#'>{article.author}</a> <Badge>{  new Date(article.created_date).toDateString() } </Badge></Card.Subtitle>\n                                <Card.Text >\n                                  <RichText text={article.body.substring(0, 200) + '...'} />\n                                </Card.Text>\n                              </Card.Body>\n                            </Card>\n                          </Link>\n                        </ListGroup.Item>\n                      )\n                    )\n\n\n\n              :\n                <Alert variant=\"dark\">\n                  There was an error retrieving our articles\n                </Alert>\n\n\n          }\n\n        </ListGroup>\n\n\n      </ React.Fragment>\n\n\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    token : state.auth.token ,\n    authenticated: state.auth.token !== null ,\n\n  }\n}\n\n\nexport default\n  connect(\n    mapStateToProps,\n\n  )(Home) ;\n"]},"metadata":{},"sourceType":"module"}