{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar get_1 = tslib_1.__importDefault(require(\"lodash/get\"));\n\nvar react_1 = require(\"react\");\n\nvar joinName_1 = tslib_1.__importDefault(require(\"./joinName\"));\n\nfunction injectName(name, children, parent) {\n  return react_1.Children.map(children, function (child) {\n    if (!child || typeof child === 'string' || get_1[\"default\"](parent, 'props.name')) return child;\n    return react_1.cloneElement(child, {\n      children: injectName(name, child.props.children, child),\n      name: joinName_1[\"default\"](name, child.props.name)\n    });\n  });\n}\n\nexports[\"default\"] = injectName;","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo_blog/apollo-blog/node_modules/uniforms/injectName.js"],"names":["exports","__esModule","tslib_1","require","get_1","__importDefault","react_1","joinName_1","injectName","name","children","parent","Children","map","child","cloneElement","props"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,KAAK,GAAGF,OAAO,CAACG,eAAR,CAAwBF,OAAO,CAAC,YAAD,CAA/B,CAAZ;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,OAAD,CAArB;;AACA,IAAII,UAAU,GAAGL,OAAO,CAACG,eAAR,CAAwBF,OAAO,CAAC,YAAD,CAA/B,CAAjB;;AACA,SAASK,UAAT,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,MAApC,EAA4C;AACxC,SAAOL,OAAO,CAACM,QAAR,CAAiBC,GAAjB,CAAqBH,QAArB,EAA+B,UAAUI,KAAV,EAAiB;AACnD,QAAI,CAACA,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA3B,IAAuCV,KAAK,CAAC,SAAD,CAAL,CAAiBO,MAAjB,EAAyB,YAAzB,CAA3C,EACI,OAAOG,KAAP;AACJ,WAAOR,OAAO,CAACS,YAAR,CAAqBD,KAArB,EAA4B;AAC/BJ,MAAAA,QAAQ,EAAEF,UAAU,CAACC,IAAD,EAAOK,KAAK,CAACE,KAAN,CAAYN,QAAnB,EAA6BI,KAA7B,CADW;AAE/BL,MAAAA,IAAI,EAAEF,UAAU,CAAC,SAAD,CAAV,CAAsBE,IAAtB,EAA4BK,KAAK,CAACE,KAAN,CAAYP,IAAxC;AAFyB,KAA5B,CAAP;AAIH,GAPM,CAAP;AAQH;;AACDT,OAAO,CAAC,SAAD,CAAP,GAAqBQ,UAArB","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar get_1 = tslib_1.__importDefault(require(\"lodash/get\"));\nvar react_1 = require(\"react\");\nvar joinName_1 = tslib_1.__importDefault(require(\"./joinName\"));\nfunction injectName(name, children, parent) {\n    return react_1.Children.map(children, function (child) {\n        if (!child || typeof child === 'string' || get_1[\"default\"](parent, 'props.name'))\n            return child;\n        return react_1.cloneElement(child, {\n            children: injectName(name, child.props.children, child),\n            name: joinName_1[\"default\"](name, child.props.name)\n        });\n    });\n}\nexports[\"default\"] = injectName;\n"]},"metadata":{},"sourceType":"script"}