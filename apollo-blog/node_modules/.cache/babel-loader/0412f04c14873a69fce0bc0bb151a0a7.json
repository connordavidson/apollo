{"ast":null,"code":"import _classCallCheck from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Button,FormGroup,FormControl,Badge,Alert}from\"react-bootstrap\";import{NavLink}from\"react-router-dom\";import{connect}from\"react-redux\";import\"../../content/css/App.css\";import{authSignup}from\"../../store/actions/auth\";var Signup=/*#__PURE__*/function(_React$Component){_inherits(Signup,_React$Component);function Signup(){var _getPrototypeOf2;var _this;_classCallCheck(this,Signup);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Signup)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={loading:null,//for whne the page is loading\nerror:null,//holds any error with submitting the form\nemail:\"\",//holds the email value\nusername:\"\",//holds the email value\npassword:\"\",//holds the password value\nconfirm_password:\"\",//holds the confirm_password value\npasswords_match:true};_this.handleEmail=function(e){_this.setState({email:e.target.value});};_this.handleUsername=function(e){_this.setState({username:e.target.value});};_this.handlePassword=function(e){if(_this.state.confirm_password!==e.target.value){_this.setState({passwords_match:false,password:e.target.value});}else{_this.setState({passwords_match:true,password:e.target.value});}};_this.handleConfirmPassword=function(e){if(_this.state.password!==e.target.value){_this.setState({passwords_match:false,confirm_password:e.target.value});}else{_this.setState({passwords_match:true,confirm_password:e.target.value});}};_this.handleValidated=function(){var email_valid=_this.state.email.length>0;var username_valid=_this.state.username.length>0;var password_valid=_this.state.password.length>8;var confirm_password_valid=_this.state.confirm_password.length>8;var passwords_match=_this.state.password_valid===_this.state.confirm_password_valid;return email_valid&&username_valid&&password_valid&&confirm_password_valid&&passwords_match&&_this.state.passwords_match;};_this.handleSubmit=function(event){event.preventDefault();var _this$state=_this.state,email=_this$state.email,username=_this$state.username,password=_this$state.password,confirm_password=_this$state.confirm_password;console.log(email);_this.props.signup(username,email,password,confirm_password);};return _this;}_createClass(Signup,[{key:\"render\",value:function render(){var _this$state2=this.state,email=_this$state2.email,username=_this$state2.username,password=_this$state2.password,confirm_password=_this$state2.confirm_password,passwords_match=_this$state2.passwords_match;var error=this.props.error;if(error){var errors=error.response.data;}console.log(\"error: \",error);return React.createElement(\"div\",{className:\"account-form\"},React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(\"h3\",null,\"Signup \"),React.createElement(\"hr\",null),React.createElement(FormGroup,{controlId:\"email\",bsSize:\"large\"},\"Email\",React.createElement(FormControl,{required:true,autoFocus:true,type:\"email\",value:email,onChange:this.handleEmail})),React.createElement(FormGroup,{controlId:\"username\",bsSize:\"large\"},\"Username\",React.createElement(FormControl,{required:true,value:username,onChange:this.handleUsername})),React.createElement(FormGroup,{controlId:\"password\",bsSize:\"large\"},\"Password\",React.createElement(FormControl,{required:true,value:password,onChange:this.handlePassword,type:\"password\"})),React.createElement(FormGroup,{controlId:\"confirm_password\",bsSize:\"large\"},\"Confirm Password\",React.createElement(FormControl,{required:true,value:confirm_password,onChange:this.handleConfirmPassword,type:\"password\"})),React.createElement(Button,{block:true,bsSize:\"large\",disabled:!this.handleValidated(),type:\"submit\"},\"Signup\"),React.createElement(Badge,null,\" Already have an account? \",React.createElement(NavLink,{to:\"/login\"},\"Login \"),\" \"),!passwords_match&&React.createElement(Alert,{variant:\"danger\"},\"Your passwords must match\"),error&&React.createElement(Alert,{variant:\"danger\"},//loops through all the returned errors and prints them with a bullet\nObject.keys(errors).map(function(e){return React.createElement(\"li\",null,errors[e][0]);}))));}}]);return Signup;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{loading:state.auth.loading,error:state.auth.error,token:state.auth.token};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signup:function signup(email,username,password1,password2){return dispatch(authSignup(email,username,password1,password2));}};};export default connect(mapStateToProps,mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/src/containers/Account/Signup.js"],"names":["React","Button","FormGroup","FormControl","Badge","Alert","NavLink","connect","authSignup","Signup","state","loading","error","email","username","password","confirm_password","passwords_match","handleEmail","e","setState","target","value","handleUsername","handlePassword","handleConfirmPassword","handleValidated","email_valid","length","username_valid","password_valid","confirm_password_valid","handleSubmit","event","preventDefault","console","log","props","signup","errors","response","data","Object","keys","map","Component","mapStateToProps","auth","token","mapDispatchToProps","dispatch","password1","password2"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"../../content/css/App.css\";\nimport { authSignup } from \"../../store/actions/auth\";\n\nclass  Signup extends React.Component  {\n  state = {\n    loading: null , //for whne the page is loading\n    error: null , //holds any error with submitting the form\n    email : \"\" , //holds the email value\n    username : \"\" , //holds the email value\n    password : \"\" , //holds the password value\n    confirm_password : \"\" , //holds the confirm_password value\n    passwords_match : true ,\n\n  }\n\n  //sets the email in the state\n  handleEmail = (e) => {\n    this.setState({\n      email : e.target.value\n    })\n  }\n\n  //sets the username in the state\n  handleUsername = (e) => {\n    this.setState({\n      username : e.target.value\n    })\n  }\n\n  //sets the password into the state and determines if the two password fields match\n  handlePassword = (e) => {\n    if(this.state.confirm_password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        password : e.target.value\n      })\n    }\n  }\n\n  //sets the confirm_password into the state and determines if the two password fields match\n  handleConfirmPassword = (e) => {\n    if(this.state.password !== e.target.value){\n      this.setState({\n        passwords_match : false ,\n        confirm_password : e.target.value\n      })\n    }else{\n      this.setState({\n        passwords_match : true ,\n        confirm_password : e.target.value\n      })\n    }\n  }\n\n  //does a simple validation of the user's input and returns true or false\n  handleValidated = () => {\n    var email_valid = this.state.email.length > 0\n    var username_valid = this.state.username.length > 0\n    var password_valid = this.state.password.length > 8\n    var confirm_password_valid = this.state.confirm_password.length > 8\n    var passwords_match = this.state.password_valid === this.state.confirm_password_valid\n    return email_valid && username_valid && password_valid && confirm_password_valid && passwords_match && this.state.passwords_match  ;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {email, username, password , confirm_password} = this.state;\n    console.log(email) ;\n    this.props.signup(username, email, password , confirm_password)\n  }\n\n  render(){\n\n    const {\n      email ,\n      username ,\n      password ,\n      confirm_password ,\n      passwords_match ,\n\n    } = this.state ;\n\n    const {\n      error\n    } = this.props ;\n\n    if(error){\n      var errors = error.response.data\n    }\n\n    console.log(\"error: \" , error)\n    return (\n      <div className=\"account-form\">\n\n        <form onSubmit={this.handleSubmit}>\n          <h3>Signup </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            Email\n            <FormControl\n              required\n              autoFocus\n              type=\"email\"\n              value={email}\n              onChange={this.handleEmail}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"username\" bsSize=\"large\">\n            Username\n            <FormControl\n              required\n              value={username}\n              onChange={this.handleUsername}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            Password\n            <FormControl\n              required\n              value={password}\n              onChange={this.handlePassword}\n              type=\"password\"\n            />\n          </FormGroup>\n          <FormGroup controlId=\"confirm_password\" bsSize=\"large\">\n            Confirm Password\n            <FormControl\n              required\n              value={confirm_password}\n              onChange={this.handleConfirmPassword}\n              type=\"password\"\n            />\n          </FormGroup>\n\n          <Button block bsSize=\"large\" disabled={!this.handleValidated()} type=\"submit\">\n            Signup\n          </Button>\n          <Badge> Already have an account? <NavLink to=\"/login\">Login </NavLink> </Badge>\n\n          {\n            !passwords_match &&\n            <Alert variant=\"danger\">Your passwords must match</Alert>\n          }\n\n          {\n            error &&\n              <Alert variant=\"danger\">\n                {\n                  //loops through all the returned errors and prints them with a bullet\n                  Object.keys(errors).map(e => {\n                    return <li>{errors[e][0]}</li>\n                  })\n                }\n              </Alert>\n          }\n\n\n        </form>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n  };\n};\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signup: (email, username, password1 , password2) => dispatch(authSignup(email, username, password1 , password2)),\n\n  };\n};\n\nexport default\n  connect(\n    mapStateToProps ,\n    mapDispatchToProps\n  )(Signup) ;\n"]},"metadata":{},"sourceType":"module"}