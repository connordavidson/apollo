{"ast":null,"code":"import equals from 'fast-deep-equal';\nimport React, { useEffect, useRef } from 'react';\nimport { useEditor } from '../../Provider';\nimport { editable } from '../../selector/editable';\nimport HotKeyDecorator from '../HotKey/Decorator';\nimport Inner from './Inner';\n\nvar Editable = function (_a) {\n  var id = _a.id,\n      onChange = _a.onChange;\n  var editor = useEditor();\n  var previousStateRef = useRef();\n  var previousSerializedRef = useRef();\n  useEffect(function () {\n    var handleChanges = function () {\n      var state = editable(editor.store.getState(), {\n        id: id\n      }); // prevent uneeded updates\n\n      var isEqual = equals(state, previousStateRef.current);\n\n      if (!state || isEqual) {\n        return;\n      }\n\n      previousStateRef.current = state;\n      var serialized = editor.plugins.serialize(state);\n      var serializedEqual = equals(previousSerializedRef.current, serialized);\n\n      if (serializedEqual) {\n        return;\n      }\n\n      previousSerializedRef.current = serialized;\n      onChange(serialized);\n    };\n\n    var unsubscribe = editor.store.subscribe(handleChanges);\n    return function () {\n      unsubscribe();\n    };\n  }, [editor, id, onChange]);\n  return React.createElement(HotKeyDecorator, {\n    id: id\n  }, React.createElement(Inner, {\n    id: id,\n    defaultPlugin: editor.defaultPlugin\n  }));\n};\n\nexport default React.memo(Editable);","map":{"version":3,"sources":["../../../src/components/Editable/index.tsx"],"names":[],"mappings":"AAAA,OAAO,MAAP,MAAmB,iBAAnB;AACA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,MAA3B,QAAyC,OAAzC;AACA,SAAS,SAAT,QAA0B,gBAA1B;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAGA,OAAO,eAAP,MAA4B,qBAA5B;AACA,OAAO,KAAP,MAAkB,SAAlB;;AAQA,IAAM,QAAQ,GAAoB,UAAC,EAAD,EAAiB;MAAd,EAAA,GAAA,EAAA,CAAA,E;MAAI,QAAA,GAAA,EAAA,CAAA,Q;AACvC,MAAM,MAAM,GAAG,SAAS,EAAxB;AACA,MAAM,gBAAgB,GAAG,MAAM,EAA/B;AACA,MAAM,qBAAqB,GAAG,MAAM,EAApC;AACA,EAAA,SAAS,CAAC,YAAA;AACR,QAAM,aAAa,GAAG,YAAA;AACpB,UAAM,KAAK,GAAgB,QAAQ,CAAC,MAAM,CAAC,KAAP,CAAa,QAAb,EAAD,EAA0B;AAC3D,QAAA,EAAE,EAAE;AADuD,OAA1B,CAAnC,CADoB,CAIpB;;AAEA,UAAM,OAAO,GAAG,MAAM,CAAC,KAAD,EAAQ,gBAAgB,CAAC,OAAzB,CAAtB;;AACA,UAAI,CAAC,KAAD,IAAU,OAAd,EAAuB;AACrB;AACD;;AACD,MAAA,gBAAgB,CAAC,OAAjB,GAA2B,KAA3B;AAEA,UAAM,UAAU,GAAG,MAAM,CAAC,OAAP,CAAe,SAAf,CAAyB,KAAzB,CAAnB;AACA,UAAM,eAAe,GAAG,MAAM,CAAC,qBAAqB,CAAC,OAAvB,EAAgC,UAAhC,CAA9B;;AACA,UAAI,eAAJ,EAAqB;AACnB;AACD;;AACD,MAAA,qBAAqB,CAAC,OAAtB,GAAgC,UAAhC;AACA,MAAA,QAAQ,CAAC,UAAD,CAAR;AACD,KAnBD;;AAoBA,QAAM,WAAW,GAAG,MAAM,CAAC,KAAP,CAAa,SAAb,CAAuB,aAAvB,CAApB;AACA,WAAO,YAAA;AACL,MAAA,WAAW;AACZ,KAFD;AAGD,GAzBQ,EAyBN,CAAC,MAAD,EAAS,EAAT,EAAa,QAAb,CAzBM,CAAT;AA2BA,SACE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AAAC,IAAA,EAAE,EAAE;AAAL,GAAhB,EACE,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,IAAA,EAAE,EAAE,EAAL;AAAS,IAAA,aAAa,EAAE,MAAM,CAAC;AAA/B,GAAN,CADF,CADF;AAKD,CApCD;;AAsCA,eAAe,KAAK,CAAC,IAAN,CAAW,QAAX,CAAf","sourceRoot":"","sourcesContent":["import equals from 'fast-deep-equal';\nimport React, { useEffect, useRef } from 'react';\nimport { useEditor } from '../../Provider';\nimport { editable } from '../../selector/editable';\nimport HotKeyDecorator from '../HotKey/Decorator';\nimport Inner from './Inner';\nvar Editable = function (_a) {\n    var id = _a.id, onChange = _a.onChange;\n    var editor = useEditor();\n    var previousStateRef = useRef();\n    var previousSerializedRef = useRef();\n    useEffect(function () {\n        var handleChanges = function () {\n            var state = editable(editor.store.getState(), {\n                id: id,\n            });\n            // prevent uneeded updates\n            var isEqual = equals(state, previousStateRef.current);\n            if (!state || isEqual) {\n                return;\n            }\n            previousStateRef.current = state;\n            var serialized = editor.plugins.serialize(state);\n            var serializedEqual = equals(previousSerializedRef.current, serialized);\n            if (serializedEqual) {\n                return;\n            }\n            previousSerializedRef.current = serialized;\n            onChange(serialized);\n        };\n        var unsubscribe = editor.store.subscribe(handleChanges);\n        return function () {\n            unsubscribe();\n        };\n    }, [editor, id, onChange]);\n    return (React.createElement(HotKeyDecorator, { id: id },\n        React.createElement(Inner, { id: id, defaultPlugin: editor.defaultPlugin })));\n};\nexport default React.memo(Editable);\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}