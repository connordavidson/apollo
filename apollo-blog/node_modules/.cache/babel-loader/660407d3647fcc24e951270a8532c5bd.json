{"ast":null,"code":"/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n}; // tslint:disable-next-line:no-any\n\n\nvar nodeInner = function (current, props) {\n  var id = current.id,\n      _a = current.rows,\n      rows = _a === void 0 ? [] : _a,\n      _b = current.cells,\n      cells = _b === void 0 ? [] : _b;\n\n  if (id === props.id) {\n    return current;\n  }\n\n  var found = undefined; // tslint:disable-next-line:no-any\n\n  __spread(rows, cells).find(function (n) {\n    var f = nodeInner(n, props);\n\n    if (f) {\n      found = f;\n    }\n\n    return Boolean(f);\n  });\n\n  return found;\n};\n\nexport var editable = function (state, _a) {\n  var id = _a.id;\n  return state && state.reactPage && state.reactPage.editables && state.reactPage.editables.present.find(function (_a) {\n    var current = (_a === void 0 ? {} : _a).id;\n    return current === id;\n  });\n};\nexport var editables = function (_a) {\n  var present = _a.reactPage.editables.present;\n  return present;\n};\nexport var purifiedEditable = function (state, props) {\n  var found = editable(state, props);\n\n  if (!found) {\n    return null;\n  }\n\n  return __assign(__assign({}, found), {\n    cells: (found.cells || []).map(function (c) {\n      return typeof c === 'string' ? c : c.id;\n    })\n  });\n};\nexport var editableConfig = function (state, _a) {\n  var id = _a.editable;\n  return editable(state, {\n    id: id\n  }).config;\n};\nexport var node = function (state, props // tslint:disable-next-line:no-any\n) {\n  var tree = editable(state, {\n    id: props.editable\n  });\n\n  if (!tree) {\n    throw new Error(\"Could not find editable: \" + props.editable);\n  }\n\n  return __assign({}, nodeInner(tree, props));\n};\nexport var searchNodeEverywhere = function (state, id) {\n  for (var i = 0; i < state.reactPage.editables.present.length; i++) {\n    var n = node(state, {\n      id: id,\n      editable: state.reactPage.editables.present[i].id\n    });\n\n    if (n.id) {\n      return {\n        node: n,\n        editable: state.reactPage.editables.present[i]\n      };\n    }\n  }\n\n  return null;\n};\nexport var purifiedNode = function (state, props) {\n  var found = node(state, props);\n\n  if (!found) {\n    return null;\n  }\n\n  if (found.cells) {\n    found.cells = found.cells.map(function (c) {\n      return c.id;\n    } // tslint:disable-next-line:no-any\n    );\n  }\n\n  if (found.rows) {\n    found.rows = found.rows.map(function (r) {\n      return r.id;\n    } // tslint:disable-next-line:no-any\n    );\n  }\n\n  return found;\n};","map":{"version":3,"sources":["../../../src/selector/editable/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\n// tslint:disable-next-line:no-any\nvar nodeInner = function (current, props) {\n    var id = current.id, _a = current.rows, rows = _a === void 0 ? [] : _a, _b = current.cells, cells = _b === void 0 ? [] : _b;\n    if (id === props.id) {\n        return current;\n    }\n    var found = undefined;\n    // tslint:disable-next-line:no-any\n    __spread(rows, cells).find(function (n) {\n        var f = nodeInner(n, props);\n        if (f) {\n            found = f;\n        }\n        return Boolean(f);\n    });\n    return found;\n};\nexport var editable = function (state, _a) {\n    var id = _a.id;\n    return state &&\n        state.reactPage &&\n        state.reactPage.editables &&\n        state.reactPage.editables.present.find(function (_a) {\n            var current = (_a === void 0 ? {} : _a).id;\n            return current === id;\n        });\n};\nexport var editables = function (_a) {\n    var present = _a.reactPage.editables.present;\n    return present;\n};\nexport var purifiedEditable = function (state, props) {\n    var found = editable(state, props);\n    if (!found) {\n        return null;\n    }\n    return __assign(__assign({}, found), { cells: (found.cells || []).map(function (c) {\n            return typeof c === 'string' ? c : c.id;\n        }) });\n};\nexport var editableConfig = function (state, _a) {\n    var id = _a.editable;\n    return editable(state, { id: id }).config;\n};\nexport var node = function (state, props\n// tslint:disable-next-line:no-any\n) {\n    var tree = editable(state, { id: props.editable });\n    if (!tree) {\n        throw new Error(\"Could not find editable: \" + props.editable);\n    }\n    return __assign({}, nodeInner(tree, props));\n};\nexport var searchNodeEverywhere = function (state, id) {\n    for (var i = 0; i < state.reactPage.editables.present.length; i++) {\n        var n = node(state, {\n            id: id,\n            editable: state.reactPage.editables.present[i].id,\n        });\n        if (n.id) {\n            return {\n                node: n,\n                editable: state.reactPage.editables.present[i],\n            };\n        }\n    }\n    return null;\n};\nexport var purifiedNode = function (state, props) {\n    var found = node(state, props);\n    if (!found) {\n        return null;\n    }\n    if (found.cells) {\n        found.cells = found.cells.map(function (c) { return c.id; }\n        // tslint:disable-next-line:no-any\n        );\n    }\n    if (found.rows) {\n        found.rows = found.rows.map(function (r) { return r.id; }\n        // tslint:disable-next-line:no-any\n        );\n    }\n    return found;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}