{"ast":null,"code":"/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Cell from '../Cell';\n\nvar Inner = function (_a) {\n  var _b;\n\n  var editable = _a.editable,\n      ancestors = _a.ancestors,\n      _c = _a.node,\n      id = _c.id,\n      hover = _c.hover,\n      _d = _c.cells,\n      cells = _d === void 0 ? [] : _d,\n      hasInlineChildren = _c.hasInlineChildren,\n      containerHeight = _a.containerHeight,\n      blurAllCells = _a.blurAllCells,\n      containerWidth = _a.containerWidth;\n  return React.createElement(\"div\", {\n    className: classNames('ory-row', (_b = {\n      'ory-row-is-hovering-this': Boolean(hover)\n    }, _b[\"ory-row-is-hovering-\" + (hover || '')] = Boolean(hover), _b['ory-row-has-floating-children'] = hasInlineChildren, _b)),\n    onClick: blurAllCells\n  }, cells.map(function (c) {\n    return React.createElement(Cell, {\n      rowWidth: containerWidth,\n      rowHeight: containerHeight,\n      ancestors: __spread(ancestors, [id]),\n      editable: editable,\n      key: c,\n      id: c\n    });\n  }));\n};\n\nexport default Inner;","map":{"version":3,"sources":["../../../src/components/Row/inner.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,UAAP,MAAuB,YAAvB;AAEA,OAAO,IAAP,MAAiB,SAAjB;;AAGA,IAAM,KAAK,GAAG,UAAC,EAAD,EAOI;;;MANhB,QAAA,GAAA,EAAA,CAAA,Q;MACA,SAAA,GAAA,EAAA,CAAA,S;MACA,EAAA,GAAA,EAAA,CAAA,I;MAAQ,EAAA,GAAA,EAAA,CAAA,E;MAAI,KAAA,GAAA,EAAA,CAAA,K;MAAO,EAAA,GAAA,EAAA,CAAA,K;MAAA,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,E;MAAY,iBAAA,GAAA,EAAA,CAAA,iB;MAC/B,eAAA,GAAA,EAAA,CAAA,e;MACA,YAAA,GAAA,EAAA,CAAA,Y;MACA,cAAA,GAAA,EAAA,CAAA,c;AACqB,SACrB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAE,UAAU,CAAC,SAAD,GAAU,EAAA,GAAA;AAC7B,kCAA4B,OAAO,CAAC,KAAD;AADN,KAAA,EAE7B,EAAA,CAAC,0BAAuB,KAAK,IAAI,EAAhC,CAAD,CAAA,GAAwC,OAAO,CAAC,KAAD,CAFlB,EAG7B,EAAA,CAAA,+BAAA,CAAA,GAAiC,iBAHJ,EAI7B,EAJmB,EADvB;AAME,IAAA,OAAO,EAAE;AANX,GAAA,EAQG,KAAK,CAAC,GAAN,CAAU,UAAC,CAAD,EAAU;AAAK,WACxB,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AACH,MAAA,QAAQ,EAAE,cADP;AAEH,MAAA,SAAS,EAAE,eAFR;AAGH,MAAA,SAAS,EAAA,QAAA,CAAM,SAAN,EAAe,CAAE,EAAF,CAAf,CAHN;AAIH,MAAA,QAAQ,EAAE,QAJP;AAKH,MAAA,GAAG,EAAE,CALF;AAMH,MAAA,EAAE,EAPoB;AACnB,KAAL,CADwB;AASzB,GATA,CARH,CADqB;AAoBtB,CA3BD;;AA6BA,eAAe,KAAf","sourceRoot":"","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Cell from '../Cell';\nvar Inner = function (_a) {\n    var _b;\n    var editable = _a.editable, ancestors = _a.ancestors, _c = _a.node, id = _c.id, hover = _c.hover, _d = _c.cells, cells = _d === void 0 ? [] : _d, hasInlineChildren = _c.hasInlineChildren, containerHeight = _a.containerHeight, blurAllCells = _a.blurAllCells, containerWidth = _a.containerWidth;\n    return (React.createElement(\"div\", { className: classNames('ory-row', (_b = {\n                'ory-row-is-hovering-this': Boolean(hover)\n            },\n            _b[\"ory-row-is-hovering-\" + (hover || '')] = Boolean(hover),\n            _b['ory-row-has-floating-children'] = hasInlineChildren,\n            _b)), onClick: blurAllCells }, cells.map(function (c) { return (React.createElement(Cell, { rowWidth: containerWidth, rowHeight: containerHeight, ancestors: __spread(ancestors, [id]), editable: editable, key: c, id: c })); })));\n};\nexport default Inner;\n//# sourceMappingURL=inner.js.map"]},"metadata":{},"sourceType":"module"}