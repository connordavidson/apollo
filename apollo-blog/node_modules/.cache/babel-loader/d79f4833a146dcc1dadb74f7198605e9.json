{"ast":null,"code":"var _jsxFileName = \"/Users/connordavidson/Desktop/apollo-blog/src/containers/Account/ResetPassword.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, FormGroup, FormControl, Badge, Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { withRouter } from 'react-router';\nimport \"../../content/css/App.css\";\nimport { reset_password_url } from \"../../backend-urls.js\";\n\nclass ResetPassword extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      //stores the loading page\n      error: null,\n      //stores any error that would get returned from the backend\n      email: \"\",\n      //stores the email from the input\n      email_submitted: null,\n      //stores response after user submits their email\n      message: null //stores the response message\n\n    };\n\n    this.handleEmail = e => {\n      console.log(e.target.value);\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handleValidated = () => {\n      return !(this.state.email.length > 1);\n    };\n\n    this.handleSubmit = () => {\n      this.setState({\n        loading: true\n      });\n      var data = new FormData();\n      data.append('email', this.state.email);\n      axios.post(reset_password_url, data).then(response => {\n        console.log(response);\n        this.setState({\n          email_submitted: true,\n          loading: false,\n          message: response.data.message\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          error: error.response.data,\n          loading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      loading,\n      error,\n      email,\n      email_submitted\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"account-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Reset Password \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Email\", React.createElement(FormControl, {\n      required: true,\n      autoFocus: true,\n      value: email,\n      onChange: this.handleEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      disabled: this.handleValidated(),\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Login\")), email_submitted && React.createElement(Alert, {\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo-blog/src/containers/Account/ResetPassword.js"],"names":["React","axios","Button","FormGroup","FormControl","Badge","Alert","connect","NavLink","Redirect","withRouter","reset_password_url","ResetPassword","Component","state","loading","error","email","email_submitted","message","handleEmail","e","console","log","target","value","setState","handleValidated","length","handleSubmit","data","FormData","append","post","then","response","catch","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport {withRouter} from 'react-router';\n\n\nimport \"../../content/css/App.css\";\nimport {\n  reset_password_url ,\n\n} from \"../../backend-urls.js\" ;\n\n\nclass ResetPassword extends React.Component {\n\n  state = {\n    loading : false , //stores the loading page\n    error : null , //stores any error that would get returned from the backend\n    email : \"\" , //stores the email from the input\n    email_submitted : null , //stores response after user submits their email\n    message : null , //stores the response message\n\n  }\n\n  handleEmail = (e) => {\n    console.log(e.target.value) ;\n    this.setState({email : e.target.value}) ;\n  }\n\n  handleValidated = () => {\n    return !(this.state.email.length > 1  )\n  }\n\n  handleSubmit = () => {\n    this.setState({\n      loading: true ,\n\n    })\n\n    var data = new FormData() ;\n    data.append('email' , this.state.email) ;\n    axios\n      .post(reset_password_url , data)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          email_submitted : true ,\n          loading : false ,\n          message : response.data.message\n        })\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          error : error.response.data ,\n          loading : false ,\n\n        })\n      })\n  }\n\n\n  render(){\n    const {\n      loading ,\n      error ,\n      email ,\n      email_submitted ,\n\n    } = this.state ;\n\n    return(\n\n      <div className=\"account-form\">\n        <form >\n          <h3>Reset Password </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            Email\n            <FormControl\n              required\n              autoFocus\n              value={email}\n              onChange= {this.handleEmail}\n            />\n          </FormGroup>\n\n          <Button\n            block\n            bsSize=\"large\"\n            disabled={\n              (this.handleValidated())\n            }\n\n            onClick={this.handleSubmit}\n          >\n            Login\n          </Button>\n        </form>\n        {\n          email_submitted &&\n            <Alert variant=\"success\">\n\n            </Alert>\n        }\n      </div>\n\n    )\n  }\n\n\n\n}\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}