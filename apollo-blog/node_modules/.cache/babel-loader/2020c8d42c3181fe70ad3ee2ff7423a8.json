{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(10000)); //merges the cart when the user logs in. mergeCartOnLogin is located in actions/cart.js\n      // dispatch( mergeCartOnLogin(token) )\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 86400 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n}; //added username to the authSuccess part and in the parameters of the function on 11/5/19\n\nexport const authCheckState = username => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token, username));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/store/actions/auth.js"],"names":["actionTypes","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","axios","post","then","res","data","key","expirationDate","Date","getTime","localStorage","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(10000));\n\n        //merges the cart when the user logs in. mergeCartOnLogin is located in actions/cart.js\n        // dispatch( mergeCartOnLogin(token) )\n\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\n\n\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 86400 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\n\n\n\n//added username to the authSuccess part and in the parameters of the function on 11/5/19\nexport const authCheckState = (username) => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token, username));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}