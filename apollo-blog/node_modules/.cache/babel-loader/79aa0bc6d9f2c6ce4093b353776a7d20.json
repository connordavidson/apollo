{"ast":null,"code":"var _jsxFileName = \"/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/containers/Account/Login.js\";\nimport React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport \"../../content/css/App.css\";\nimport { authLogin } from \"../store/actions/auth\";\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      username,\n      password\n    } = this.state;\n    this.props.login(username, password);\n  } //redirects the user to the home page if they are logged in\n\n\n  props.token && React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: \"account-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, error && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, this.props.error.message), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Login \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(FormGroup, {\n    controlId: \"email\",\n    bsSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Email\", React.createElement(FormControl, {\n    autoFocus: true,\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    controlId: \"password\",\n    bsSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Password\", React.createElement(FormControl, {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(Button, {\n    block: true,\n    bsSize: \"large\",\n    disabled: !validateForm(),\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Login\")));\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password)) // mergeCartOnLogin: () => dispatch(mergeCartOnLogin()),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo_blog/apollo-blog/src/containers/Account/Login.js"],"names":["React","useState","Button","FormGroup","FormControl","connect","authLogin","Login","props","email","setEmail","password","setPassword","validateForm","length","handleSubmit","event","preventDefault","username","state","login","token","error","message","e","target","value","mapStateToProps","loading","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  FormGroup,\n  FormControl\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\n\nimport \"../../content/css/App.css\";\nimport { authLogin } from \"../store/actions/auth\";\n\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const {username, password} = this.state;\n    this.props.login(username, password)\n  }\n\n  //redirects the user to the home page if they are logged in\n  props.token &&\n    <Redirect to='/' />\n\n  return (\n    <div className=\"account-form\">\n      {error && <p>{this.props.error.message}</p>}\n      \n      <form onSubmit={handleSubmit}>\n        <h3>Login </h3>\n        <hr />\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          Email\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          Password\n          <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button block bsSize=\"large\" disabled={!validateForm()} type=\"submit\">\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password)),\n    // mergeCartOnLogin: () => dispatch(mergeCartOnLogin()),\n\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login) ;\n"]},"metadata":{},"sourceType":"module"}