{"ast":null,"code":"/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar computeRowLevels = function (a, b) {\n  var _a = a.cells,\n      cells = _a === void 0 ? [] : _a,\n      props = __rest(a, [\"cells\"]);\n\n  var _b = b || {},\n      _c = _b.left,\n      left = _c === void 0 ? 0 : _c,\n      _d = _b.right,\n      right = _d === void 0 ? 0 : _d,\n      _e = _b.above,\n      above = _e === void 0 ? 0 : _e,\n      _f = _b.below,\n      below = _f === void 0 ? 0 : _f;\n\n  var newCells = [];\n\n  if (cells.length) {\n    newCells = cells.map(function (c, k) {\n      return computeCellLevels(c, {\n        left: k === 0 ? left + 1 : 0,\n        right: k === cells.length - 1 ? right + 1 : 0,\n        above: above + 1,\n        below: below + 1\n      });\n    });\n  }\n\n  delete props.levels;\n  return __assign(__assign({\n    levels: {\n      left: left,\n      right: right,\n      above: above,\n      below: below\n    }\n  }, props), {\n    cells: newCells\n  });\n};\n\nvar computeCellLevels = function (a, b) {\n  var _a = a.rows,\n      rows = _a === void 0 ? [] : _a,\n      props = __rest(a, [\"rows\"]);\n\n  var _b = b || {},\n      _c = _b.left,\n      left = _c === void 0 ? 0 : _c,\n      _d = _b.right,\n      right = _d === void 0 ? 0 : _d,\n      _e = _b.above,\n      above = _e === void 0 ? 0 : _e,\n      _f = _b.below,\n      below = _f === void 0 ? 0 : _f;\n\n  var newRows;\n\n  if (rows.length) {\n    newRows = rows.map(function (r, k) {\n      return computeRowLevels(r, {\n        left: left + 1,\n        right: right + 1,\n        above: k === 0 ? above + 1 : 0,\n        below: k === rows.length - 1 ? below + 1 : 0\n      });\n    });\n  }\n\n  delete props.levels; // eslint-disable-line prefer-reflect\n\n  return __assign(__assign({\n    levels: {\n      left: left,\n      right: right,\n      above: above,\n      below: below\n    }\n  }, props), {\n    rows: newRows\n  });\n};\n\nexport var computeDropLevels = function (c) {\n  return computeCellLevels(c);\n};","map":{"version":3,"sources":["../../../../src/reducer/editable/helper/level.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar computeRowLevels = function (a, b) {\n    var _a = a.cells, cells = _a === void 0 ? [] : _a, props = __rest(a, [\"cells\"]);\n    var _b = b || {}, _c = _b.left, left = _c === void 0 ? 0 : _c, _d = _b.right, right = _d === void 0 ? 0 : _d, _e = _b.above, above = _e === void 0 ? 0 : _e, _f = _b.below, below = _f === void 0 ? 0 : _f;\n    var newCells = [];\n    if (cells.length) {\n        newCells = cells.map(function (c, k) {\n            return computeCellLevels(c, {\n                left: k === 0 ? left + 1 : 0,\n                right: k === cells.length - 1 ? right + 1 : 0,\n                above: above + 1,\n                below: below + 1,\n            });\n        });\n    }\n    delete props.levels;\n    return __assign(__assign({ levels: { left: left, right: right, above: above, below: below } }, props), { cells: newCells });\n};\nvar computeCellLevels = function (a, b) {\n    var _a = a.rows, rows = _a === void 0 ? [] : _a, props = __rest(a, [\"rows\"]);\n    var _b = b || {}, _c = _b.left, left = _c === void 0 ? 0 : _c, _d = _b.right, right = _d === void 0 ? 0 : _d, _e = _b.above, above = _e === void 0 ? 0 : _e, _f = _b.below, below = _f === void 0 ? 0 : _f;\n    var newRows;\n    if (rows.length) {\n        newRows = rows.map(function (r, k) {\n            return computeRowLevels(r, {\n                left: left + 1,\n                right: right + 1,\n                above: k === 0 ? above + 1 : 0,\n                below: k === rows.length - 1 ? below + 1 : 0,\n            });\n        });\n    }\n    delete props.levels; // eslint-disable-line prefer-reflect\n    return __assign(__assign({ levels: { left: left, right: right, above: above, below: below } }, props), { rows: newRows });\n};\nexport var computeDropLevels = function (c) { return computeCellLevels(c); };\n//# sourceMappingURL=level.js.map"]},"metadata":{},"sourceType":"module"}