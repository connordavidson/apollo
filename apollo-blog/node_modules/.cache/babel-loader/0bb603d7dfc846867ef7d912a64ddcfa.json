{"ast":null,"code":"/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer';\nimport { isProduction } from './const';\n/**\n * Returns a new redux store.\n */\n// tslint:disable-next-line:no-any\n\nexport default (function (initialState, middleware) {\n  if (middleware === void 0) {\n    middleware = [];\n  } // tslint:disable-next-line:no-any\n\n\n  var v = !isProduction && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n  return createStore(rootReducer, initialState, v(applyMiddleware.apply(void 0, __spread(middleware, [thunk]))));\n});","map":{"version":3,"sources":["../src/store.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAS,WAAT,EAAsB,eAAtB,EAAuC,OAAvC,QAA6D,OAA7D;AACA,OAAO,KAAP,MAAkB,aAAlB;AACA,OAAO,WAAP,MAAwB,WAAxB;AAEA,SAAS,YAAT,QAA6B,SAA7B;AAQA;;;AAGA;;AACA,gBAAe,UAAC,YAAD,EAAoB,UAApB,EAAuC;AAAnB,MAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,EAAA;AAAmB,GAAA,CACpD;;;AACA,MAAM,CAAC,GACL,CAAC,YAAD,IACA,OAAO,MAAP,KAAkB,QADlB,IAEA,MAAM,CAAC,oCAFP,GAGI,MAAM,CAAC,oCAAP,CAA4C,EAA5C,CAHJ,GAII,OALN;AAOA,SAAO,WAAW,CAChB,WADgB,EAEhB,YAFgB,EAGhB,CAAC,CAAC,eAAe,CAAA,KAAf,CAAe,KAAA,CAAf,EAAe,QAAA,CAAI,UAAJ,EAAc,CAAE,KAAF,CAAd,CAAf,CAAD,CAHe,CAAlB;AAKD,CAdD","sourceRoot":"","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer';\nimport { isProduction } from './const';\n/**\n * Returns a new redux store.\n */\n// tslint:disable-next-line:no-any\nexport default (function (initialState, middleware) {\n    if (middleware === void 0) { middleware = []; }\n    // tslint:disable-next-line:no-any\n    var v = !isProduction &&\n        typeof window === 'object' &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n        : compose;\n    return createStore(rootReducer, initialState, v(applyMiddleware.apply(void 0, __spread(middleware, [thunk]))));\n});\n//# sourceMappingURL=store.js.map"]},"metadata":{},"sourceType":"module"}