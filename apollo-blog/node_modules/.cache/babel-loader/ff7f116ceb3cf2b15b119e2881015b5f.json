{"ast":null,"code":"import { lazyLoad } from '@react-page/core';\nimport * as React from 'react';\nimport createDataPlugin from '../pluginFactories/createDataPlugin';\nvar AlignLeftIcon = lazyLoad(function () {\n  return import('@material-ui/icons/FormatAlignLeft');\n});\nvar AlignCenterIcon = lazyLoad(function () {\n  return import('@material-ui/icons/FormatAlignCenter');\n});\nvar AlignRightIcon = lazyLoad(function () {\n  return import('@material-ui/icons/FormatAlignRight');\n});\nvar AlignJustifyIcon = lazyLoad(function () {\n  return import('@material-ui/icons/FormatAlignJustify');\n});\nvar left = createDataPlugin({\n  icon: React.createElement(AlignLeftIcon, null),\n  object: 'block',\n  addToolbarButton: true,\n  addHoverButton: false,\n  dataMatches: function (data) {\n    return data.align === 'left';\n  },\n  getInitialData: function () {\n    return {\n      align: 'left'\n    };\n  }\n});\nvar center = createDataPlugin({\n  icon: React.createElement(AlignCenterIcon, null),\n  object: 'block',\n  addToolbarButton: true,\n  addHoverButton: false,\n  dataMatches: function (data) {\n    return data.align === 'center';\n  },\n  getInitialData: function () {\n    return {\n      align: 'center'\n    };\n  }\n});\nvar right = createDataPlugin({\n  icon: React.createElement(AlignRightIcon, null),\n  object: 'block',\n  addToolbarButton: true,\n  addHoverButton: false,\n  dataMatches: function (data) {\n    return data.align === 'right';\n  },\n  getInitialData: function () {\n    return {\n      align: 'right'\n    };\n  }\n});\nvar justify = createDataPlugin({\n  icon: React.createElement(AlignJustifyIcon, null),\n  object: 'block',\n  addToolbarButton: true,\n  addHoverButton: false,\n  dataMatches: function (data) {\n    return data.align === 'justify';\n  },\n  getInitialData: function () {\n    return {\n      align: 'justify'\n    };\n  }\n});\nexport default {\n  left: left,\n  center: center,\n  right: right,\n  justify: justify\n};","map":{"version":3,"sources":["../../src/plugins/alignment.tsx"],"names":[],"mappings":"AAAA,SAAS,QAAT,QAAyB,kBAAzB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,gBAAP,MAA6B,qCAA7B;AAEA,IAAM,aAAa,GAAG,QAAQ,CAAC,YAAA;AAC7B,SAAA,OAAO,oCAAP,CAAA;AAA4C,CADhB,CAA9B;AAGA,IAAM,eAAe,GAAG,QAAQ,CAAC,YAAA;AAC/B,SAAA,OAAO,sCAAP,CAAA;AAA8C,CADhB,CAAhC;AAGA,IAAM,cAAc,GAAG,QAAQ,CAAC,YAAA;AAC9B,SAAA,OAAO,qCAAP,CAAA;AAA6C,CADhB,CAA/B;AAGA,IAAM,gBAAgB,GAAG,QAAQ,CAAC,YAAA;AAChC,SAAA,OAAO,uCAAP,CAAA;AAA+C,CADhB,CAAjC;AAIA,IAAM,IAAI,GAAG,gBAAgB,CAAoB;AAC/C,EAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,IAAd,CADyC;AAE/C,EAAA,MAAM,EAAE,OAFuC;AAG/C,EAAA,gBAAgB,EAAE,IAH6B;AAI/C,EAAA,cAAc,EAAE,KAJ+B;AAK/C,EAAA,WAAW,EAAE,UAAA,IAAA,EAAI;AAAI,WAAA,IAAI,CAAC,KAAL,KAAA,MAAA;AAAqB,GALK;AAM/C,EAAA,cAAc,EAAE,YAAA;AAAM,WAAC;AAAE,MAAA,KAAK,EAAR;AAAC,KAAD;AAAmB;AANM,CAApB,CAA7B;AASA,IAAM,MAAM,GAAG,gBAAgB,CAAsB;AACnD,EAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,IAAhB,CAD6C;AAEnD,EAAA,MAAM,EAAE,OAF2C;AAGnD,EAAA,gBAAgB,EAAE,IAHiC;AAInD,EAAA,cAAc,EAAE,KAJmC;AAKnD,EAAA,WAAW,EAAE,UAAA,IAAA,EAAI;AAAI,WAAA,IAAI,CAAC,KAAL,KAAA,QAAA;AAAuB,GALO;AAMnD,EAAA,cAAc,EAAE,YAAA;AAAM,WAAC;AAAE,MAAA,KAAK,EAAR;AAAC,KAAD;AAAqB;AANQ,CAAtB,CAA/B;AASA,IAAM,KAAK,GAAG,gBAAgB,CAAqB;AACjD,EAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CAD2C;AAEjD,EAAA,MAAM,EAAE,OAFyC;AAGjD,EAAA,gBAAgB,EAAE,IAH+B;AAIjD,EAAA,cAAc,EAAE,KAJiC;AAKjD,EAAA,WAAW,EAAE,UAAA,IAAA,EAAI;AAAI,WAAA,IAAI,CAAC,KAAL,KAAA,OAAA;AAAsB,GALM;AAMjD,EAAA,cAAc,EAAE,YAAA;AAAM,WAAC;AAAE,MAAA,KAAK,EAAR;AAAC,KAAD;AAAoB;AANO,CAArB,CAA9B;AASA,IAAM,OAAO,GAAG,gBAAgB,CAAuB;AACrD,EAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB,IAAjB,CAD+C;AAErD,EAAA,MAAM,EAAE,OAF6C;AAGrD,EAAA,gBAAgB,EAAE,IAHmC;AAIrD,EAAA,cAAc,EAAE,KAJqC;AAKrD,EAAA,WAAW,EAAE,UAAA,IAAA,EAAI;AAAI,WAAA,IAAI,CAAC,KAAL,KAAA,SAAA;AAAwB,GALQ;AAMrD,EAAA,cAAc,EAAE,YAAA;AAAM,WAAC;AAAE,MAAA,KAAK,EAAR;AAAC,KAAD;AAAsB;AANS,CAAvB,CAAhC;AASA,eAAe;AACb,EAAA,IAAI,EAAA,IADS;AAEb,EAAA,MAAM,EAAA,MAFO;AAGb,EAAA,KAAK,EAAA,KAHQ;AAIb,EAAA,OAAO,EAAA;AAJM,CAAf","sourceRoot":"","sourcesContent":["import { lazyLoad } from '@react-page/core';\nimport * as React from 'react';\nimport createDataPlugin from '../pluginFactories/createDataPlugin';\nvar AlignLeftIcon = lazyLoad(function () {\n    return import('@material-ui/icons/FormatAlignLeft');\n});\nvar AlignCenterIcon = lazyLoad(function () {\n    return import('@material-ui/icons/FormatAlignCenter');\n});\nvar AlignRightIcon = lazyLoad(function () {\n    return import('@material-ui/icons/FormatAlignRight');\n});\nvar AlignJustifyIcon = lazyLoad(function () {\n    return import('@material-ui/icons/FormatAlignJustify');\n});\nvar left = createDataPlugin({\n    icon: React.createElement(AlignLeftIcon, null),\n    object: 'block',\n    addToolbarButton: true,\n    addHoverButton: false,\n    dataMatches: function (data) { return data.align === 'left'; },\n    getInitialData: function () { return ({ align: 'left' }); },\n});\nvar center = createDataPlugin({\n    icon: React.createElement(AlignCenterIcon, null),\n    object: 'block',\n    addToolbarButton: true,\n    addHoverButton: false,\n    dataMatches: function (data) { return data.align === 'center'; },\n    getInitialData: function () { return ({ align: 'center' }); },\n});\nvar right = createDataPlugin({\n    icon: React.createElement(AlignRightIcon, null),\n    object: 'block',\n    addToolbarButton: true,\n    addHoverButton: false,\n    dataMatches: function (data) { return data.align === 'right'; },\n    getInitialData: function () { return ({ align: 'right' }); },\n});\nvar justify = createDataPlugin({\n    icon: React.createElement(AlignJustifyIcon, null),\n    object: 'block',\n    addToolbarButton: true,\n    addHoverButton: false,\n    dataMatches: function (data) { return data.align === 'justify'; },\n    getInitialData: function () { return ({ align: 'justify' }); },\n});\nexport default {\n    left: left,\n    center: center,\n    right: right,\n    justify: justify,\n};\n//# sourceMappingURL=alignment.js.map"]},"metadata":{},"sourceType":"module"}