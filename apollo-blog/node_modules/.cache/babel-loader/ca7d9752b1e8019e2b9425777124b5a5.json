{"ast":null,"code":"var _jsxFileName = \"/Users/connordavidson/Desktop/apollo-blog/src/containers/Account/Login.js\";\nimport React from \"react\";\nimport { Button, FormGroup, FormControl, Badge, Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { withRouter } from 'react-router';\nimport \"../../content/css/App.css\";\nimport { authLogin } from \"../../store/actions/auth\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      //stores the username that is getting entered\n      password: \"\" //stores the password that is getting entered\n\n    };\n\n    this.handleUsername = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.handlePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.validateForm = () => {\n      console.log(this.state.email.length);\n      console.log(this.state.email.length > 0 && this.state.password.length > 8);\n      return this.state.email.length > 0 && this.state.password.length > 8;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n      this.props.login(username, password);\n    };\n\n    this.handleValidated = () => {\n      return this.state.username.length > 1 && this.state.password.length > 1;\n    };\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      token\n    } = this.props;\n    const {\n      username,\n      password\n    } = this.state; //redirects the user to the home page if they are logged in\n\n    if (token) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    }\n\n    if (error) {\n      var errors = error.response.data;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"account-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Login \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Username\", React.createElement(FormControl, {\n      required: true,\n      autoFocus: true,\n      value: username,\n      onChange: this.handleUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Password\", React.createElement(FormControl, {\n      required: true,\n      value: password,\n      onChange: this.handlePassword,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.handleValidated(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" New to Apollo? \", React.createElement(NavLink, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Sign Up\"), \" \"), React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" Forgot your password? \", React.createElement(NavLink, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Sign Up\"), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), error && React.createElement(Alert, {\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, //loops through all the returned errors and prints them with a bullet\n    Object.keys(errors).map(e => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, errors[e][0]);\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password)) // mergeCartOnLogin: () => dispatch(mergeCartOnLogin()),\n\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo-blog/src/containers/Account/Login.js"],"names":["React","Button","FormGroup","FormControl","Badge","Alert","connect","NavLink","Redirect","withRouter","authLogin","Login","Component","state","username","password","handleUsername","e","setState","target","value","handlePassword","validateForm","console","log","email","length","handleSubmit","event","preventDefault","props","login","handleValidated","render","error","loading","token","errors","response","data","Object","keys","map","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport {\n  Button ,\n  FormGroup ,\n  FormControl ,\n  Badge ,\n  Alert ,\n\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport {withRouter} from 'react-router';\n\n\nimport \"../../content/css/App.css\";\nimport { authLogin } from \"../../store/actions/auth\";\n\n\n\n\nclass Login extends React.Component {\n  state = {\n    username: \"\" , //stores the username that is getting entered\n    password: \"\" , //stores the password that is getting entered\n\n  }\n\n  handleUsername = e => {\n    this.setState({ username: e.target.value });\n  };\n\n  handlePassword = e => {\n    this.setState({ password: e.target.value });\n  };\n\n  //\n  validateForm = () =>  {\n    console.log(this.state.email.length)\n    console.log(this.state.email.length > 0 && this.state.password.length > 8)\n    return this.state.email.length > 0 && this.state.password.length > 8;\n  }\n\n  handleSubmit = (event) => {\n\n    event.preventDefault();\n    const {username, password} = this.state;\n    this.props.login(username, password)\n  }\n\n  handleValidated = () => {\n    return (this.state.username.length > 1 && this.state.password.length > 1 )\n  }\n\n  render(){\n    const { error, loading, token } = this.props;\n    const { username, password } = this.state;\n\n    //redirects the user to the home page if they are logged in\n    if(token){\n      return <Redirect to='/' />\n    }\n\n\n    if(error){\n      var errors = error.response.data\n    }\n\n\n    return (\n\n\n      <div className=\"account-form\">\n\n        <form onSubmit={this.handleSubmit}>\n          <h3>Login </h3>\n          <hr />\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            Username\n            <FormControl\n              required\n              autoFocus\n              value={username}\n              onChange= {this.handleUsername}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            Password\n            <FormControl\n              required\n              value={password}\n              onChange= {this.handlePassword}\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button\n            block\n            bsSize=\"large\"\n            disabled={\n              !(this.handleValidated())\n            }\n            type=\"submit\"\n          >\n            Login\n          </Button>\n          <Badge> New to Apollo? <NavLink to=\"/signup\">Sign Up</NavLink> </Badge>\n          <Badge> Forgot your password? <NavLink to=\"/signup\">Sign Up</NavLink> </Badge>\n            <br />\n            {\n              error &&\n                <Alert variant=\"danger\">\n                  {\n                    //loops through all the returned errors and prints them with a bullet\n                    Object.keys(errors).map(e => {\n                      return <li>{errors[e][0]}</li>\n                    })\n                  }\n                </Alert>\n\n            }\n        </form>\n\n\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password)),\n    // mergeCartOnLogin: () => dispatch(mergeCartOnLogin()),\n\n  };\n};\n\nexport default withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(Login)\n  );\n"]},"metadata":{},"sourceType":"module"}