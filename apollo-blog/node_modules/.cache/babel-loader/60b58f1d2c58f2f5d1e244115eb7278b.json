{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\n\nimport * as React from 'react';\nimport ToggleEdit from './ToggleEdit/index';\nimport ToggleInsert from './ToggleInsert/index';\nimport ToggleLayout from './ToggleLayout/index';\nimport TogglePreview from './TogglePreview/index';\nimport ToggleResize from './ToggleResize/index';\nvar defaultTranslations = {\n  edit: 'Edit things',\n  insert: 'Add things',\n  layout: 'Move things',\n  resize: 'Resize things',\n  preview: 'Preview result'\n};\n\nvar getStickyNessstyle = function (stickyness) {\n  if (!stickyness || !stickyness.shouldStickToBottom && !stickyness.shouldStickToTop) {\n    return {\n      position: 'fixed'\n    };\n  }\n\n  return {\n    position: 'absolute',\n    bottom: stickyness.shouldStickToBottom ? 0 : 'auto',\n    top: stickyness.shouldStickToTop ? 0 : 'auto',\n    right: -stickyness.rightOffset || 0\n  };\n};\n\nvar Inner = function (_a) {\n  var stickyNess = _a.stickyNess,\n      _b = _a.translations,\n      translations = _b === void 0 ? defaultTranslations : _b;\n  return React.createElement(\"div\", {\n    className: \"ory-controls-mode-toggle-control-group\",\n    style: __assign({\n      position: 'fixed',\n      zIndex: 10001,\n      bottom: 0,\n      right: 0,\n      display: 'flex',\n      maxHeight: '100%'\n    }, getStickyNessstyle(stickyNess))\n  }, React.createElement(\"div\", {\n    ref: stickyNess.stickyElRef,\n    style: {\n      padding: 16,\n      position: 'relative',\n      flexFlow: 'column wrap',\n      direction: 'rtl',\n      display: 'flex'\n    }\n  }, React.createElement(\"div\", {\n    className: \"ory-controls-mode-toggle-control\"\n  }, React.createElement(ToggleEdit, {\n    label: translations.edit\n  }), React.createElement(\"div\", {\n    className: \"ory-controls-mode-toggle-clearfix\"\n  })), React.createElement(\"div\", {\n    className: \"ory-controls-mode-toggle-control\"\n  }, React.createElement(ToggleInsert, {\n    label: translations.insert\n  }), React.createElement(\"div\", {\n    className: \"ory-controls-mode-toggle-clearfix\"\n  })), React.createElement(\"div\", {\n    className: \"ory-controls-mode-toggle-control\"\n  }, React.createElement(ToggleLayout, {\n    label: translations.layout\n  }), React.createElement(\"div\", {\n    className: \"ory-controls-mode-toggle-clearfix\"\n  })), React.createElement(\"div\", {\n    className: \"ory-controls-mode-toggle-control\"\n  }, React.createElement(ToggleResize, {\n    label: translations.resize\n  }), React.createElement(\"div\", {\n    className: \"ory-controls-mode-toggle-clearfix\"\n  })), React.createElement(\"div\", {\n    className: \"ory-controls-mode-toggle-control\"\n  }, React.createElement(TogglePreview, {\n    label: translations.preview\n  }), React.createElement(\"div\", {\n    className: \"ory-controls-mode-toggle-clearfix\"\n  }))));\n};\n\nexport default Inner;","map":{"version":3,"sources":["../../src/DisplayModeToggle/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nimport * as React from 'react';\nimport ToggleEdit from './ToggleEdit/index';\nimport ToggleInsert from './ToggleInsert/index';\nimport ToggleLayout from './ToggleLayout/index';\nimport TogglePreview from './TogglePreview/index';\nimport ToggleResize from './ToggleResize/index';\nvar defaultTranslations = {\n    edit: 'Edit things',\n    insert: 'Add things',\n    layout: 'Move things',\n    resize: 'Resize things',\n    preview: 'Preview result',\n};\nvar getStickyNessstyle = function (stickyness) {\n    if (!stickyness ||\n        (!stickyness.shouldStickToBottom && !stickyness.shouldStickToTop)) {\n        return {\n            position: 'fixed',\n        };\n    }\n    return {\n        position: 'absolute',\n        bottom: stickyness.shouldStickToBottom ? 0 : 'auto',\n        top: stickyness.shouldStickToTop ? 0 : 'auto',\n        right: -stickyness.rightOffset || 0,\n    };\n};\nvar Inner = function (_a) {\n    var stickyNess = _a.stickyNess, _b = _a.translations, translations = _b === void 0 ? defaultTranslations : _b;\n    return (React.createElement(\"div\", { className: \"ory-controls-mode-toggle-control-group\", style: __assign({ position: 'fixed', zIndex: 10001, bottom: 0, right: 0, display: 'flex', maxHeight: '100%' }, getStickyNessstyle(stickyNess)) },\n        React.createElement(\"div\", { ref: stickyNess.stickyElRef, style: {\n                padding: 16,\n                position: 'relative',\n                flexFlow: 'column wrap',\n                direction: 'rtl',\n                display: 'flex',\n            } },\n            React.createElement(\"div\", { className: \"ory-controls-mode-toggle-control\" },\n                React.createElement(ToggleEdit, { label: translations.edit }),\n                React.createElement(\"div\", { className: \"ory-controls-mode-toggle-clearfix\" })),\n            React.createElement(\"div\", { className: \"ory-controls-mode-toggle-control\" },\n                React.createElement(ToggleInsert, { label: translations.insert }),\n                React.createElement(\"div\", { className: \"ory-controls-mode-toggle-clearfix\" })),\n            React.createElement(\"div\", { className: \"ory-controls-mode-toggle-control\" },\n                React.createElement(ToggleLayout, { label: translations.layout }),\n                React.createElement(\"div\", { className: \"ory-controls-mode-toggle-clearfix\" })),\n            React.createElement(\"div\", { className: \"ory-controls-mode-toggle-control\" },\n                React.createElement(ToggleResize, { label: translations.resize }),\n                React.createElement(\"div\", { className: \"ory-controls-mode-toggle-clearfix\" })),\n            React.createElement(\"div\", { className: \"ory-controls-mode-toggle-control\" },\n                React.createElement(TogglePreview, { label: translations.preview }),\n                React.createElement(\"div\", { className: \"ory-controls-mode-toggle-clearfix\" })))));\n};\nexport default Inner;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}