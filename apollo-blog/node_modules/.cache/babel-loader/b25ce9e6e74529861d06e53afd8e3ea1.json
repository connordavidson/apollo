{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { defaultTranslations } from './defaultTranslations';\nvar NO_FILE_ERROR_CODE = 1;\nvar BAD_EXTENSION_ERROR_CODE = 2;\nvar TOO_BIG_ERROR_CODE = 3;\nvar UPLOADING_ERROR_CODE = 4;\n\nvar ImageUpload =\n/** @class */\nfunction (_super) {\n  __extends(ImageUpload, _super);\n\n  function ImageUpload() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isUploading: false,\n      hasError: false,\n      errorText: '',\n      progress: 0\n    };\n\n    _this.hasExtension = function (fileName) {\n      var patternPart = _this.props.allowedExtensions ? _this.props.allowedExtensions.map(function (a) {\n        return a.toLowerCase();\n      }).join('|') : '';\n      var pattern = '(' + patternPart.replace(/\\./g, '\\\\.') + ')$';\n      return new RegExp(pattern, 'i').test(fileName.toLowerCase());\n    };\n\n    _this.handleError = function (errorCode) {\n      var errorText = '';\n\n      switch (errorCode) {\n        case NO_FILE_ERROR_CODE:\n          errorText = _this.props.translations.noFileError;\n          break;\n\n        case BAD_EXTENSION_ERROR_CODE:\n          errorText = _this.props.translations.badExtensionError;\n          break;\n\n        case TOO_BIG_ERROR_CODE:\n          errorText = _this.props.translations.tooBigError;\n          break;\n\n        case UPLOADING_ERROR_CODE:\n          errorText = _this.props.translations.uploadingError;\n          break;\n\n        default:\n          errorText = _this.props.translations.unknownError;\n          break;\n      } // Need to flick \"isUploading\" because otherwise the handler doesn't fire properly\n\n\n      _this.setState({\n        hasError: true,\n        errorText: errorText,\n        isUploading: true\n      }, function () {\n        return _this.setState({\n          isUploading: false\n        });\n      });\n\n      setTimeout(function () {\n        return _this.setState({\n          hasError: false,\n          errorText: ''\n        });\n      }, 5000);\n    };\n\n    _this.handleFileSelected = function (e) {\n      if (!e.target.files || !e.target.files[0]) {\n        _this.handleError(NO_FILE_ERROR_CODE);\n\n        return;\n      }\n\n      var file = e.target.files[0];\n\n      if (!_this.hasExtension(file.name)) {\n        _this.handleError(BAD_EXTENSION_ERROR_CODE);\n\n        return;\n      }\n\n      if (file.size > _this.props.maxFileSize) {\n        _this.handleError(TOO_BIG_ERROR_CODE);\n\n        return;\n      }\n\n      if (_this.props.imageLoaded) {\n        _this.readFile(file).then(function (data) {\n          return _this.props.imageLoaded(data);\n        });\n      }\n\n      if (_this.props.imageUpload) {\n        _this.setState({\n          isUploading: true\n        });\n\n        _this.props.imageUpload(file, _this.handleReportProgress).then(function (resp) {\n          _this.setState({\n            progress: undefined,\n            isUploading: false\n          });\n\n          _this.props.imageUploaded && _this.props.imageUploaded(resp);\n        }).catch(function (error) {\n          _this.setState({\n            isUploading: false\n          });\n\n          _this.props.imageUploadError && _this.props.imageUploadError(error);\n        });\n      }\n    };\n\n    _this.handleFileUploadClick = function () {\n      return _this.fileInput.click();\n    };\n\n    _this.handleReportProgress = function (progress) {\n      return _this.setState({\n        progress: progress\n      });\n    };\n\n    _this.renderChildren = function () {\n      if (_this.state.isUploading) {\n        return React.createElement(CircularProgress, {\n          value: _this.state.progress,\n          size: 19\n        });\n      }\n\n      if (_this.state.hasError) {\n        return React.createElement(React.Fragment, null, _this.state.errorText, React.createElement(ErrorIcon, {\n          style: {\n            marginLeft: '8px'\n          }\n        }));\n      }\n\n      return React.createElement(React.Fragment, null, _this.props.translations.buttonContent, _this.props.icon);\n    };\n\n    return _this;\n  }\n\n  ImageUpload.prototype.readFile = function (file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader(); // Read the image via FileReader API and save image result in state.\n\n      reader.onload = function (e) {\n        // Add the file name to the data URL\n        // tslint:disable-next-line:no-any\n        var dataUrl = e.target.result;\n        dataUrl = dataUrl.replace(';base64', \";name=\" + file.name + \";base64\");\n        resolve({\n          file: file,\n          dataUrl: dataUrl\n        });\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  ImageUpload.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      disabled: this.state.isUploading,\n      variant: \"contained\",\n      color: this.state.hasError ? 'secondary' : 'primary',\n      onClick: this.handleFileUploadClick,\n      style: this.props.style\n    }, this.renderChildren()), !this.state.isUploading && React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      ref: function (fileInput) {\n        return _this.fileInput = fileInput;\n      },\n      type: \"file\",\n      onChange: this.handleFileSelected\n    }));\n  };\n\n  ImageUpload.defaultProps = {\n    icon: React.createElement(CloudUploadIcon, {\n      style: {\n        marginLeft: '8px'\n      }\n    }),\n    allowedExtensions: ['jpg', 'jpeg', 'png'],\n    maxFileSize: 5242880,\n    translations: defaultTranslations\n  };\n  return ImageUpload;\n}(React.Component);\n\nexport default ImageUpload;","map":{"version":3,"sources":["../../src/ImageUpload/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { defaultTranslations } from './defaultTranslations';\nvar NO_FILE_ERROR_CODE = 1;\nvar BAD_EXTENSION_ERROR_CODE = 2;\nvar TOO_BIG_ERROR_CODE = 3;\nvar UPLOADING_ERROR_CODE = 4;\nvar ImageUpload = /** @class */ (function (_super) {\n    __extends(ImageUpload, _super);\n    function ImageUpload() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            isUploading: false,\n            hasError: false,\n            errorText: '',\n            progress: 0,\n        };\n        _this.hasExtension = function (fileName) {\n            var patternPart = _this.props.allowedExtensions\n                ? _this.props.allowedExtensions.map(function (a) { return a.toLowerCase(); }).join('|')\n                : '';\n            var pattern = '(' + patternPart.replace(/\\./g, '\\\\.') + ')$';\n            return new RegExp(pattern, 'i').test(fileName.toLowerCase());\n        };\n        _this.handleError = function (errorCode) {\n            var errorText = '';\n            switch (errorCode) {\n                case NO_FILE_ERROR_CODE:\n                    errorText = _this.props.translations.noFileError;\n                    break;\n                case BAD_EXTENSION_ERROR_CODE:\n                    errorText = _this.props.translations.badExtensionError;\n                    break;\n                case TOO_BIG_ERROR_CODE:\n                    errorText = _this.props.translations.tooBigError;\n                    break;\n                case UPLOADING_ERROR_CODE:\n                    errorText = _this.props.translations.uploadingError;\n                    break;\n                default:\n                    errorText = _this.props.translations.unknownError;\n                    break;\n            }\n            // Need to flick \"isUploading\" because otherwise the handler doesn't fire properly\n            _this.setState({ hasError: true, errorText: errorText, isUploading: true }, function () {\n                return _this.setState({ isUploading: false });\n            });\n            setTimeout(function () { return _this.setState({ hasError: false, errorText: '' }); }, 5000);\n        };\n        _this.handleFileSelected = function (e) {\n            if (!e.target.files || !e.target.files[0]) {\n                _this.handleError(NO_FILE_ERROR_CODE);\n                return;\n            }\n            var file = e.target.files[0];\n            if (!_this.hasExtension(file.name)) {\n                _this.handleError(BAD_EXTENSION_ERROR_CODE);\n                return;\n            }\n            if (file.size > _this.props.maxFileSize) {\n                _this.handleError(TOO_BIG_ERROR_CODE);\n                return;\n            }\n            if (_this.props.imageLoaded) {\n                _this.readFile(file).then(function (data) { return _this.props.imageLoaded(data); });\n            }\n            if (_this.props.imageUpload) {\n                _this.setState({ isUploading: true });\n                _this.props\n                    .imageUpload(file, _this.handleReportProgress)\n                    .then(function (resp) {\n                    _this.setState({ progress: undefined, isUploading: false });\n                    _this.props.imageUploaded && _this.props.imageUploaded(resp);\n                })\n                    .catch(function (error) {\n                    _this.setState({ isUploading: false });\n                    _this.props.imageUploadError && _this.props.imageUploadError(error);\n                });\n            }\n        };\n        _this.handleFileUploadClick = function () {\n            return _this.fileInput.click();\n        };\n        _this.handleReportProgress = function (progress) { return _this.setState({ progress: progress }); };\n        _this.renderChildren = function () {\n            if (_this.state.isUploading) {\n                return React.createElement(CircularProgress, { value: _this.state.progress, size: 19 });\n            }\n            if (_this.state.hasError) {\n                return (React.createElement(React.Fragment, null,\n                    _this.state.errorText,\n                    React.createElement(ErrorIcon, { style: { marginLeft: '8px' } })));\n            }\n            return (React.createElement(React.Fragment, null,\n                _this.props.translations.buttonContent,\n                _this.props.icon));\n        };\n        return _this;\n    }\n    ImageUpload.prototype.readFile = function (file) {\n        return new Promise(function (resolve, reject) {\n            var reader = new FileReader();\n            // Read the image via FileReader API and save image result in state.\n            reader.onload = function (e) {\n                // Add the file name to the data URL\n                // tslint:disable-next-line:no-any\n                var dataUrl = e.target.result;\n                dataUrl = dataUrl.replace(';base64', \";name=\" + file.name + \";base64\");\n                resolve({ file: file, dataUrl: dataUrl });\n            };\n            reader.readAsDataURL(file);\n        });\n    };\n    ImageUpload.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Button, { disabled: this.state.isUploading, variant: \"contained\", color: this.state.hasError ? 'secondary' : 'primary', onClick: this.handleFileUploadClick, style: this.props.style }, this.renderChildren()),\n            !this.state.isUploading && (React.createElement(\"input\", { style: { display: 'none' }, ref: function (fileInput) { return (_this.fileInput = fileInput); }, type: \"file\", onChange: this.handleFileSelected }))));\n    };\n    ImageUpload.defaultProps = {\n        icon: React.createElement(CloudUploadIcon, { style: { marginLeft: '8px' } }),\n        allowedExtensions: ['jpg', 'jpeg', 'png'],\n        maxFileSize: 5242880,\n        translations: defaultTranslations,\n    };\n    return ImageUpload;\n}(React.Component));\nexport default ImageUpload;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}