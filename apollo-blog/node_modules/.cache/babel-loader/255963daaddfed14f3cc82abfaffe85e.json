{"ast":null,"code":"var _jsxFileName = \"/Users/connordavidson/Desktop/apollo-blog/src/containers/Home.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\"; // import RichText from 'prismic-reactjs';\n\nimport { Container, Card, ListGroup, Button, Form, Col, Popover, OverlayTrigger, Badge, Alert, Row } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport RichText from './Misc/RichText';\nimport LoaderSpinner from './Misc/LoaderSpinner';\nimport { all_articles_url } from \"../backend-urls.js\";\nimport \"../content/css/App.css\";\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      //stores the error that comes from the backend\n      loading: true,\n      //to determine if the page is loading\n      articles: [],\n      //stores all of the articles retrieved from the database\n      pinned_article: [] //stores the data for the pinned article\n\n    };\n\n    this.handleGetArticles = () => {\n      axios.get(all_articles_url).then(response => {\n        for (var article in response.data) {\n          console.log(response.data[article].pinned);\n        }\n\n        console.log(response.data);\n        console.log(response.data[0].pinned);\n        this.setState({\n          loading: false,\n          articles: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          error: error,\n          loading: false\n        });\n      });\n    };\n\n    this.handleGetPinnedArticle = articles => {\n      var pinned_article = [];\n\n      for (var article in articles) {\n        console.log(article.id);\n\n        if (article.pinned) {\n          console.log(article.id);\n          pinned_article.id = article.id;\n          pinned_article.title = article.title;\n          pinned_article.author = article.author;\n          pinned_article.created_date = article.created_date;\n          pinned_article.body = article.body;\n          this.setState({\n            pinned_article: pinned_article\n          });\n          break;\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.handleGetArticles();\n    this.handleGetPinnedArticle(this.state.articles);\n  } //retrieves all the articles from the database\n\n\n  render() {\n    const {\n      loading,\n      error,\n      articles,\n      pinned_article\n    } = this.state;\n    const {\n      authenticated,\n      token\n    } = this.props; // console.log(pinned_article.body) ;\n    //for email popover\n\n    const email_popover = React.createElement(Popover, {\n      id: \"popover-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Popover.Title, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Email Updates\"), React.createElement(Popover.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Submit\"))))));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"verdana-font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"The Apollo Blog\")), React.createElement(Col, {\n      sm: {\n        offset: 9\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, authenticated ? token === \"8582b323219d80196bb1e017411808a67fe70365\" && React.createElement(\"div\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/create-article\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Write an Article\"))) : React.createElement(\"div\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(OverlayTrigger, {\n      trigger: \"click\",\n      placement: \"left\",\n      overlay: email_popover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Sign up for email updates\")))))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      variant: \"flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, loading === true ? React.createElement(LoaderSpinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }) : articles.length > 0 ? //reverse() makes the articles appear in reverse chronological order\n    articles.reverse().map(article => React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: 'blog/article/' + article.id,\n      className: \"article-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"width-100-percent\",\n      id: article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, article.title, \" + \", article.pinned), React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"By \", React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, article.author), \" \", React.createElement(Badge, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, new Date(article.created_date).toDateString(), \" \")), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(RichText, {\n      text: article.body.substring(0, 200) + '...',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }))))))) : React.createElement(Alert, {\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"There was an error retrieving our articles\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    authenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/Users/connordavidson/Desktop/apollo-blog/src/containers/Home.js"],"names":["React","Link","axios","Container","Card","ListGroup","Button","Form","Col","Popover","OverlayTrigger","Badge","Alert","Row","connect","RichText","LoaderSpinner","all_articles_url","Home","Component","state","error","loading","articles","pinned_article","handleGetArticles","get","then","response","article","data","console","log","pinned","setState","catch","handleGetPinnedArticle","id","title","author","created_date","body","componentDidMount","render","authenticated","token","props","email_popover","span","offset","length","reverse","map","Date","toDateString","substring","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from \"react\" ;\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n// import RichText from 'prismic-reactjs';\nimport {\n  Container ,\n  Card ,\n  ListGroup ,\n  Button,\n  Form ,\n  Col ,\n  Popover ,\n  OverlayTrigger ,\n  Badge ,\n  Alert ,\n  Row ,\n\n} from 'react-bootstrap';\nimport { connect } from \"react-redux\";\n\nimport RichText from './Misc/RichText';\nimport LoaderSpinner from './Misc/LoaderSpinner'\nimport {\n  all_articles_url,\n\n} from \"../backend-urls.js\" ;\n\nimport \"../content/css/App.css\";\n\n\n\n\nclass Home extends React.Component {\n\n  state = {\n    error: null , //stores the error that comes from the backend\n    loading : true , //to determine if the page is loading\n    articles : [] , //stores all of the articles retrieved from the database\n    pinned_article : [] , //stores the data for the pinned article\n\n  }\n\n  componentDidMount(){\n    this.setState({\n      loading: true ,\n\n    })\n    this.handleGetArticles();\n    this.handleGetPinnedArticle(this.state.articles) ;\n  }\n\n  //retrieves all the articles from the database\n  handleGetArticles = () => {\n    axios\n      .get(all_articles_url)\n      .then(response => {\n\n        for(var article in response.data){\n          console.log( response.data[article].pinned )\n        }\n        console.log(response.data)\n        console.log(response.data[0].pinned)\n\n        this.setState({\n          loading: false ,\n          articles: response.data ,\n        })\n      })\n      .catch(error => {\n        this.setState({\n          error: error ,\n          loading : false\n        })\n      })\n  }\n\n  //selects the article where pinned = True\n  handleGetPinnedArticle = (articles) => {\n    var pinned_article = []\n    for(var article in articles){\n      console.log(article.id)\n      if (article.pinned ){\n        console.log(article.id)\n        pinned_article.id = article.id ;\n        pinned_article.title = article.title ;\n        pinned_article.author = article.author ;\n        pinned_article.created_date = article.created_date ;\n        pinned_article.body = article.body ;\n        this.setState({\n          pinned_article : pinned_article\n        })\n        break ;\n      }\n    }\n\n  }\n\n\n\n  render(){\n\n    const {\n      loading ,\n      error ,\n      articles ,\n      pinned_article ,\n\n    } = this.state\n\n    const {\n      authenticated ,\n      token ,\n\n    } = this.props\n\n\n\n\n    // console.log(pinned_article.body) ;\n\n    //for email popover\n    const email_popover = (\n      <Popover id=\"popover-basic\">\n        <Popover.Title as=\"h3\">Email Updates</Popover.Title>\n        <Popover.Content>\n          <Form >\n            <Form.Row>\n              <Col>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\n              </Col>\n              <Col>\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Popover.Content>\n      </Popover>\n    )\n\n    return(\n\n      <React.Fragment>\n        <Container>\n          <Row>\n            <Col sm={{span:4}}>\n              <h1 className=\"verdana-font\">\n                The Apollo Blog\n              </h1>\n            </Col>\n            <Col sm={{offset:9}}>\n              {\n                authenticated ?\n                  token === \"8582b323219d80196bb1e017411808a67fe70365\" &&\n                  <div className=\"float-right\">\n                    <Link to=\"/create-article\" >\n                      <Button variant=\"outline-secondary\">Write an Article</Button>\n                    </Link>\n                  </div>\n                :\n                  <div className=\"float-right\">\n                    <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={email_popover}>\n                      <Button variant=\"outline-primary\">Sign up for email updates</Button>\n                    </OverlayTrigger>\n                  </div>\n              }\n\n\n            </Col>\n          </Row>\n\n\n        </Container>\n        <hr />\n        <br />\n\n        <ListGroup variant=\"flush\">\n\n          {\n            loading === true ?\n              <LoaderSpinner />\n            :\n              articles.length > 0 ?\n\n                  //reverse() makes the articles appear in reverse chronological order\n                    articles.reverse().map(article =>  (\n                        <ListGroup.Item>\n\n                          <Link to={'blog/article/'+article.id} className=\"article-link\">\n                            <Card className=\"width-100-percent\" id={article.id}>\n                              <Card.Body>\n                                <Card.Title>{article.title} + {article.pinned}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">By <a href='#'>{article.author}</a> <Badge>{  new Date(article.created_date).toDateString() } </Badge></Card.Subtitle>\n                                <Card.Text >\n                                  <RichText text={article.body.substring(0, 200) + '...'} />\n                                </Card.Text>\n                              </Card.Body>\n                            </Card>\n                          </Link>\n                        </ListGroup.Item>\n                      )\n                    )\n\n\n\n              :\n                <Alert variant=\"dark\">\n                  There was an error retrieving our articles\n                </Alert>\n\n\n          }\n\n        </ListGroup>\n\n\n      </ React.Fragment>\n\n\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    token : state.auth.token ,\n    authenticated: state.auth.token !== null ,\n\n  }\n}\n\n\nexport default\n  connect(\n    mapStateToProps,\n\n  )(Home) ;\n"]},"metadata":{},"sourceType":"module"}