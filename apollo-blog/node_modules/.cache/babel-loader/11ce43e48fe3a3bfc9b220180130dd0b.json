{"ast":null,"code":"/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { connect } from '../../reduxConnect';\nimport { createStructuredSelector } from 'reselect';\nimport droppable from './Droppable';\nimport Inner from './inner';\nimport dimensions from '../Dimensions';\nimport { isLayoutMode, isEditMode, isResizeMode, isInsertMode } from '../../selector/display';\nimport { editableConfig, purifiedNode, node } from '../../selector/editable';\nimport { blurAllCells } from '../../actions/cell';\n\nvar Row =\n/** @class */\nfunction (_super) {\n  __extends(Row, _super);\n\n  function Row(props) {\n    var _this = _super.call(this, props) || this;\n\n    var whitelist = props.config.whitelist;\n    _this.Droppable = droppable(whitelist);\n    return _this;\n  }\n\n  Row.prototype.render = function () {\n    var Droppable = this.Droppable;\n    var props = this.props;\n    return React.createElement(Droppable, __assign({}, props), React.createElement(Inner, __assign({}, props)));\n  };\n\n  return Row;\n}(React.PureComponent);\n\nvar mapStateToProps = createStructuredSelector({\n  isLayoutMode: isLayoutMode,\n  config: editableConfig,\n  isResizeMode: isResizeMode,\n  isInsertMode: isInsertMode,\n  isEditMode: isEditMode,\n  node: purifiedNode,\n  rawNode: function (state, props) {\n    return function () {\n      return node(state, props);\n    };\n  }\n});\nvar mapDispatchToProps = {\n  blurAllCells: blurAllCells\n};\nexport default dimensions()(connect(mapStateToProps, mapDispatchToProps)(Row));","map":{"version":3,"sources":["../../../src/components/Row/index.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,OAAT,QAAwB,oBAAxB;AACA,SAAS,wBAAT,QAAyC,UAAzC;AAEA,OAAO,SAAP,MAAsB,aAAtB;AACA,OAAO,KAAP,MAAkB,SAAlB;AACA,OAAO,UAAP,MAAuB,eAAvB;AACA,SACE,YADF,EAEE,UAFF,EAGE,YAHF,EAIE,YAJF,QAKO,wBALP;AAMA,SAAS,cAAT,EAAyB,YAAzB,EAAuC,IAAvC,QAAmD,yBAAnD;AACA,SAAS,YAAT,QAA6B,oBAA7B;;AAKA,IAAA,GAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkB,EAAA,SAAA,CAAA,GAAA,EAAA,MAAA,CAAA;;AAGhB,WAAA,GAAA,CAAY,KAAZ,EAAkC;AAAlC,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;;AAGc,QAAA,SAAA,GAAA,KAAA,CAAA,MAAA,CAAA,SAAA;AAEZ,IAAA,KAAI,CAAC,SAAL,GAAiB,SAAS,CAAC,SAAD,CAA1B;;AACD;;AAED,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,QAAM,SAAS,GAAG,KAAK,SAAvB;AACA,QAAM,KAAK,GAAG,KAAK,KAAnB;AAEA,WACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,QAAA,CAAA,EAAA,EAAK,KAAL,CAAV,EACE,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,QAAA,CAAA,EAAA,EAAK,KAAL,CAAN,CADF,CADF;AAKD,GATD;;AAUF,SAAA,GAAA;AAAC,CArBD,CAAkB,KAAK,CAAC,aAAxB,CAAA;;AAuBA,IAAM,eAAe,GAAG,wBAAwB,CAAC;AAC/C,EAAA,YAAY,EAAA,YADmC;AAE/C,EAAA,MAAM,EAAE,cAFuC;AAG/C,EAAA,YAAY,EAAA,YAHmC;AAI/C,EAAA,YAAY,EAAA,YAJmC;AAK/C,EAAA,UAAU,EAAA,UALqC;AAM/C,EAAA,IAAI,EAAE,YANyC;AAO/C,EAAA,OAAO,EAAE,UAAC,KAAD,EAAmB,KAAnB,EAA0D;AAAK,WAAA,YAAA;AACtE,aAAA,IAAI,CAAC,KAAD,EAAQ,KAAR,CAAJ;AADsE,KAAA;AACpD;AAR2B,CAAD,CAAhD;AAWA,IAAM,kBAAkB,GAAG;AACzB,EAAA,YAAY,EAAA;AADa,CAA3B;AAIA,eAAe,UAAU,GACvB,OAAO,CACL,eADK,EAEL,kBAFK,CAAP,CAGE,GAHF,CADuB,CAAzB","sourceRoot":"","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { connect } from '../../reduxConnect';\nimport { createStructuredSelector } from 'reselect';\nimport droppable from './Droppable';\nimport Inner from './inner';\nimport dimensions from '../Dimensions';\nimport { isLayoutMode, isEditMode, isResizeMode, isInsertMode } from '../../selector/display';\nimport { editableConfig, purifiedNode, node } from '../../selector/editable';\nimport { blurAllCells } from '../../actions/cell';\nvar Row = /** @class */ (function (_super) {\n    __extends(Row, _super);\n    function Row(props) {\n        var _this = _super.call(this, props) || this;\n        var whitelist = props.config.whitelist;\n        _this.Droppable = droppable(whitelist);\n        return _this;\n    }\n    Row.prototype.render = function () {\n        var Droppable = this.Droppable;\n        var props = this.props;\n        return (React.createElement(Droppable, __assign({}, props),\n            React.createElement(Inner, __assign({}, props))));\n    };\n    return Row;\n}(React.PureComponent));\nvar mapStateToProps = createStructuredSelector({\n    isLayoutMode: isLayoutMode,\n    config: editableConfig,\n    isResizeMode: isResizeMode,\n    isInsertMode: isInsertMode,\n    isEditMode: isEditMode,\n    node: purifiedNode,\n    rawNode: function (state, props) { return function () {\n        return node(state, props);\n    }; },\n});\nvar mapDispatchToProps = {\n    blurAllCells: blurAllCells,\n};\nexport default dimensions()(connect(mapStateToProps, mapDispatchToProps)(Row));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}