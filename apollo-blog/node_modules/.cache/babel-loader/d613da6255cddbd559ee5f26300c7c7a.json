{"ast":null,"code":"/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nexport var source = {\n  beginDrag: function (_a) {\n    var insert = _a.insert,\n        props = __rest(_a, [\"insert\"]);\n\n    props.layoutMode();\n    return __assign({\n      node: insert,\n      rawNode: function () {\n        return insert;\n      }\n    }, props);\n  }\n}; // tslint:disable-next-line:no-any\n\nexport var collect = function (connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n    connectDragPreview: connect.dragPreview()\n  };\n};","map":{"version":3,"sources":["../../../../src/Toolbar/Draggable/helper/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAO,IAAM,MAAM,GAAG;AACpB,EAAA,SAAS,EAAT,UAAU,EAAV,EAAsE;AAA1D,QAAA,MAAA,GAAA,EAAA,CAAA,MAAA;AAAA,QAAQ,KAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,CAAR;;AACV,IAAA,KAAK,CAAC,UAAN;AACA,WAAA,QAAA,CAAA;AACE,MAAA,IAAI,EAAE,MADR;AAEE,MAAA,OAAO,EAAE,YAAA;AAAM,eAAA,MAAA;AAAM;AAFvB,KAAA,EAGK,KAHL,CAAA;AAKD;AARmB,CAAf,C,CAWP;;AACA,OAAO,IAAM,OAAO,GAAG,UAAC,OAAD,EAAe,OAAf,EAA2B;AAAK,SAAC;AACtD,IAAA,iBAAiB,EAAE,OAAO,CAAC,UAAR,EADmC;AAEtD,IAAA,UAAU,EAAE,OAAO,CAAC,UAAR,EAF0C;AAGtD,IAAA,kBAAkB,EAAE,OAAO,CAAC,WAAR;AAHkC,GAAD;AAIrD,CAJK","sourceRoot":"","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nexport var source = {\n    beginDrag: function (_a) {\n        var insert = _a.insert, props = __rest(_a, [\"insert\"]);\n        props.layoutMode();\n        return __assign({ node: insert, rawNode: function () { return insert; } }, props);\n    },\n};\n// tslint:disable-next-line:no-any\nexport var collect = function (connect, monitor) { return ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n    connectDragPreview: connect.dragPreview(),\n}); };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}