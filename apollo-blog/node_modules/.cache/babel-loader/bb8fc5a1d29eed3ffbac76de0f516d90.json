{"ast":null,"code":"import axios from\"axios\";import*as actionTypes from\"./actionTypes\";import{signup_url,login_url}from'../../backend-urls';// import {\n//   mergeCartOnLogin,\n//   removeCartOnLogout,\n// } from \"./cart\";\nexport var authStart=function authStart(){return{type:actionTypes.AUTH_START};};export var authSuccess=function authSuccess(token,username,user_id){return{type:actionTypes.AUTH_SUCCESS,token:token,username:username,user_id:user_id};};export var authFail=function authFail(error){return{type:actionTypes.AUTH_FAIL,error:error};};export var logout=function logout(){return{type:actionTypes.AUTH_LOGOUT};};export var checkAuthTimeout=function checkAuthTimeout(expirationTime){return function(dispatch){setTimeout(function(){dispatch(logout());},expirationTime*1000);};};export var authLogin=function authLogin(username,password){return function(dispatch){dispatch(authStart());axios.post(login_url,{username:username,password:password}).then(function(res){var token=res.data.key;var user_id=res.data.user_id;var expirationDate=new Date(new Date().getTime()+3600*1000);localStorage.setItem(\"user_id\",user_id);localStorage.setItem(\"username\",username);localStorage.setItem(\"token\",token);localStorage.setItem(\"expirationDate\",expirationDate);dispatch(authSuccess(token,username,user_id));dispatch(checkAuthTimeout(10000));//merges the cart when the user logs in. mergeCartOnLogin is located in actions/cart.js\n// dispatch( mergeCartOnLogin(token) )\n}).catch(function(err){// console.log(err.response.data.non_field_errors)\ndispatch(authFail(err));});};};export var authSignup=function authSignup(username,email,password1,password2){return function(dispatch){dispatch(authStart());axios.post(signup_url,{username:username,email:email,password1:password1,password2:password2}).then(function(res){var token=res.data.key;var expirationDate=new Date(new Date().getTime()+86400*1000);localStorage.setItem(\"token\",token);localStorage.setItem(\"expirationDate\",expirationDate);dispatch(authSuccess(token,username,false));dispatch(checkAuthTimeout(3600));}).catch(function(err){dispatch(authFail(err));});};};//added username to the authSuccess part and in the parameters of the function on 11/5/19\nexport var authCheckState=function authCheckState(username){return function(dispatch){var token=localStorage.getItem(\"token\");var username=localStorage.getItem(\"username\");var user_id=localStorage.getItem(\"user_id\");if(token===undefined){dispatch(logout());}else{var expirationDate=new Date(localStorage.getItem(\"expirationDate\"));if(expirationDate<=new Date()){dispatch(logout());}else{dispatch(authSuccess(token,username,user_id));dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000));}}};};export var logoutUser=function logoutUser(){return function(dispatch){//removes the user token, expiration date, staff status, and username from local storage\nlocalStorage.removeItem(\"token\");localStorage.removeItem(\"expirationDate\");localStorage.removeItem(\"username\");localStorage.removeItem(\"staff\");localStorage.removeItem(\"user_id\");dispatch(logout());};};//deprecated (from other apollo code)\nexport var logoutRemoveCart=function logoutRemoveCart(){var token=localStorage.getItem('token');//removes the token and expiration date from local storage\nlocalStorage.removeItem(\"token\");localStorage.removeItem(\"expirationDate\");console.log('TOKEN: ',token);return function(dispatch){//calls removeCartOnLogout() from actions/cart.js\n// dispatch( removeCartOnLogout(token) )\ndispatch(logout());};};","map":{"version":3,"sources":["/Users/connordavidson/Desktop/gcloud-apollo/apollo_blog_backend/apollo-blog/src/store/actions/auth.js"],"names":["axios","actionTypes","signup_url","login_url","authStart","type","AUTH_START","authSuccess","token","username","user_id","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","password","post","then","res","data","key","expirationDate","Date","getTime","localStorage","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined","logoutUser","removeItem","logoutRemoveCart","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport {\n    signup_url ,\n    login_url ,\n\n} from '../../backend-urls' ;\n// import {\n//   mergeCartOnLogin,\n//   removeCartOnLogout,\n// } from \"./cart\";\n\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token , username , user_id) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username : username,\n    user_id : user_id\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(login_url, {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.key;\n        const user_id = res.data.user_id;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"user_id\", user_id);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token , username , user_id));\n        dispatch(checkAuthTimeout(10000));\n\n        //merges the cart when the user logs in. mergeCartOnLogin is located in actions/cart.js\n        // dispatch( mergeCartOnLogin(token) )\n\n      })\n      .catch(err => {\n        // console.log(err.response.data.non_field_errors)\n        dispatch(authFail(err));\n      });\n  };\n};\n\n\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(signup_url, {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 86400 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token , username , false));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\n//added username to the authSuccess part and in the parameters of the function on 11/5/19\nexport const authCheckState = (username) => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    const user_id = localStorage.getItem(\"user_id\") ;\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token , username , user_id));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n\n\n\n\nexport const logoutUser = () => {\n    return dispatch => {\n      //removes the user token, expiration date, staff status, and username from local storage\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"expirationDate\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"staff\");\n      localStorage.removeItem(\"user_id\");\n      dispatch( logout() )\n    }\n}\n\n\n\n\n//deprecated (from other apollo code)\nexport const logoutRemoveCart = () => {\n  const token = localStorage.getItem('token')\n  //removes the token and expiration date from local storage\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n\n  console.log('TOKEN: ', token)\n  return dispatch => {\n    //calls removeCartOnLogout() from actions/cart.js\n    // dispatch( removeCartOnLogout(token) )\n    dispatch( logout() )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}