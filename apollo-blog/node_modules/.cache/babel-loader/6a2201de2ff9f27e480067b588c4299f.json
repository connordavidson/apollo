{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport ColorizeIcon from '@material-ui/icons/Colorize';\nimport * as React from 'react';\nimport { ChromePicker } from 'react-color';\nimport { colorToString } from './colorToString';\n\nvar ColorPicker =\n/** @class */\nfunction (_super) {\n  __extends(ColorPicker, _super);\n\n  function ColorPicker() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isColorPickerVisible: false\n    };\n\n    _this.handleClickShowColorPicker = function (e) {\n      if (_this.props.onDialogOpen) {\n        _this.props.onDialogOpen();\n      }\n\n      _this.setState({\n        isColorPickerVisible: !_this.state.isColorPickerVisible\n      });\n    };\n\n    _this.onChange = function (e) {\n      return _this.props.onChange && _this.props.onChange(e.rgb);\n    };\n\n    _this.handleChangeComplete = function (e) {\n      return _this.props.onChangeComplete && _this.props.onChangeComplete(e.rgb);\n    };\n\n    return _this;\n  }\n\n  ColorPicker.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      buttonRef: function (node) {\n        _this.anchorEl = node;\n      },\n      variant: \"contained\",\n      onClick: this.handleClickShowColorPicker,\n      style: __assign(__assign({}, this.props.style), {\n        borderColor: colorToString(this.props.color),\n        borderStyle: 'solid',\n        borderWidth: '2px'\n      })\n    }, this.props.buttonContent, this.props.icon), React.createElement(Popover, {\n      open: this.state.isColorPickerVisible,\n      anchorEl: this.anchorEl,\n      onClose: this.handleClickShowColorPicker,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      }\n    }, React.createElement(\"div\", null, React.createElement(ChromePicker, {\n      color: this.props.color,\n      onChange: this.onChange,\n      onChangeComplete: this.handleChangeComplete\n    }))));\n  };\n\n  ColorPicker.defaultProps = {\n    buttonContent: 'Change color',\n    icon: React.createElement(ColorizeIcon, {\n      style: {\n        marginLeft: '4px',\n        fontSize: '19px'\n      }\n    })\n  };\n  return ColorPicker;\n}(React.Component);\n\nexport default ColorPicker;","map":{"version":3,"sources":["../../src/ColorPicker/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport ColorizeIcon from '@material-ui/icons/Colorize';\nimport * as React from 'react';\nimport { ChromePicker } from 'react-color';\nimport { colorToString } from './colorToString';\nvar ColorPicker = /** @class */ (function (_super) {\n    __extends(ColorPicker, _super);\n    function ColorPicker() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            isColorPickerVisible: false,\n        };\n        _this.handleClickShowColorPicker = function (e) {\n            if (_this.props.onDialogOpen) {\n                _this.props.onDialogOpen();\n            }\n            _this.setState({ isColorPickerVisible: !_this.state.isColorPickerVisible });\n        };\n        _this.onChange = function (e) {\n            return _this.props.onChange && _this.props.onChange(e.rgb);\n        };\n        _this.handleChangeComplete = function (e) {\n            return _this.props.onChangeComplete && _this.props.onChangeComplete(e.rgb);\n        };\n        return _this;\n    }\n    ColorPicker.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Button, { buttonRef: function (node) {\n                    _this.anchorEl = node;\n                }, variant: \"contained\", onClick: this.handleClickShowColorPicker, style: __assign(__assign({}, this.props.style), { borderColor: colorToString(this.props.color), borderStyle: 'solid', borderWidth: '2px' }) },\n                this.props.buttonContent,\n                this.props.icon),\n            React.createElement(Popover, { open: this.state.isColorPickerVisible, anchorEl: this.anchorEl, onClose: this.handleClickShowColorPicker, anchorOrigin: {\n                    vertical: 'top',\n                    horizontal: 'center',\n                }, transformOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                } },\n                React.createElement(\"div\", null,\n                    React.createElement(ChromePicker, { color: this.props.color, onChange: this.onChange, onChangeComplete: this.handleChangeComplete })))));\n    };\n    ColorPicker.defaultProps = {\n        buttonContent: 'Change color',\n        icon: React.createElement(ColorizeIcon, { style: { marginLeft: '4px', fontSize: '19px' } }),\n    };\n    return ColorPicker;\n}(React.Component));\nexport default ColorPicker;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}