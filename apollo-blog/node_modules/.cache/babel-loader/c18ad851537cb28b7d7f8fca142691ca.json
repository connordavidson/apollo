{"ast":null,"code":"/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { updateCellContent } from '../../../actions/cell';\nimport { connect } from '../../../reduxConnect';\nimport { isEditMode, isInsertMode, isLayoutMode, isPreviewMode, isResizeMode } from '../../../selector/display';\nimport scollIntoViewWithOffset from '../utils/scollIntoViewWithOffset'; // TODO clean me up #157\n\nvar Content =\n/** @class */\nfunction (_super) {\n  __extends(Content, _super);\n\n  function Content() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onRef = function (ref) {\n      _this.ref = ref;\n    };\n\n    _this.onChange = function (state) {\n      _this.props.updateCellContent(state);\n    };\n\n    _this.remove = function () {\n      _this.props.removeCell();\n    };\n\n    _this.focus = function (args) {\n      _this.props.focusCell(args);\n    };\n\n    return _this;\n  }\n\n  Content.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    var was = this.props.node.focused;\n    var _a = nextProps.node,\n        is = _a.focused,\n        focusSource = _a.focusSource;\n\n    var editable = nextProps.editable,\n        id = nextProps.id,\n        _b = nextProps.node,\n        _c = _b.content,\n        _d = _c === void 0 ? {} : _c,\n        _e = _d.plugin,\n        _f = _e === void 0 ? {} : _e,\n        _g = _f.handleFocus,\n        handleFocus = _g === void 0 ? function () {\n      return null;\n    } : _g,\n        _h = _f.handleBlur,\n        handleBlur = _h === void 0 ? function () {\n      return null;\n    } : _h,\n        _j = _f.name,\n        name = _j === void 0 ? 'N/A' : _j,\n        _k = _f.version,\n        version = _k === void 0 ? 'N/A' : _k,\n        _l = _d.state,\n        state = _l === void 0 ? {} : _l,\n        focused = _b.focused; // FIXME this is really shitty because it will break when the state changes before the blur comes through, see #157\n    // tslint:disable-next-line:no-any\n\n\n    var pass = {\n      editable: editable,\n      id: id,\n      state: state,\n      focused: this.props.isEditMode && focused,\n      readOnly: !isEditMode,\n      onChange: this.props.updateCellContent,\n      name: name,\n      version: version,\n      isEditMode: nextProps.isEditMode,\n      isResizeMode: nextProps.isResizeMode,\n      isPreviewMode: nextProps.isPreviewMode,\n      isInsertMode: nextProps.isInsertMode,\n      isLayoutMode: nextProps.isLayoutMode,\n      remove: nextProps.removeCell\n    }; // Basically we check if the focus state changed and if yes, we execute the callback handler from the plugin, that\n    // can set some side effects.\n\n    if (!was && is) {\n      // We need this because otherwise we lose hotkey focus on elements like spoilers.\n      // This could probably be solved in an easier way by listening to window.document?\n      handleFocus(pass, focusSource, this.ref); // scroll to the plugin\n\n      if (this.ref) {\n        scollIntoViewWithOffset(this.ref, 100);\n      }\n    } else if (was && !is) {\n      handleBlur(pass);\n    }\n  };\n\n  Content.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        editable = _a.editable,\n        id = _a.id,\n        _b = _a.node,\n        _c = _b.content,\n        _d = _c === void 0 ? {} : _c,\n        _e = _d.plugin,\n        _f = _e === void 0 ? {} : _e,\n        _g = _f.Component,\n        Component = _g === void 0 ? function () {\n      return null;\n    } : _g,\n        _h = _f.name,\n        name = _h === void 0 ? 'N/A' : _h,\n        _j = _f.version,\n        version = _j === void 0 ? 'N/A' : _j,\n        _k = _f.text,\n        text = _k === void 0 ? 'unnamed plugin' : _k,\n        _l = _d.state,\n        state = _l === void 0 ? {} : _l,\n        focused = _b.focused;\n\n    var blurCell = this.props.blurCell;\n    var focusProps;\n\n    if (!this.props.isPreviewMode) {\n      focusProps = {\n        onMouseDown: function () {\n          if (!focused) {\n            _this.focus({\n              source: 'onMouseDown'\n            });\n          }\n\n          return true;\n        }\n      };\n    }\n\n    return React.createElement(\"div\", __assign({}, focusProps, {\n      tabIndex: \"-1\",\n      style: {\n        outline: 'none'\n      },\n      ref: this.onRef,\n      className: \"ory-cell-inner ory-cell-leaf\"\n    }), React.createElement(Component, {\n      editable: editable,\n      id: id,\n      state: state,\n      focused: Boolean(this.props.isEditMode && focused),\n      name: name,\n      text: text,\n      version: version,\n      readOnly: !this.props.isEditMode,\n      onChange: this.onChange,\n      focus: this.focus,\n      blur: blurCell,\n      isInsertMode: this.props.isInsertMode,\n      isResizeMode: this.props.isResizeMode,\n      isPreviewMode: this.props.isPreviewMode,\n      isEditMode: this.props.isEditMode,\n      isLayoutMode: this.props.isLayoutMode,\n      remove: this.remove\n    }));\n  };\n\n  return Content;\n}(React.PureComponent);\n\nvar mapStateToProps = createStructuredSelector({\n  isEditMode: isEditMode,\n  isLayoutMode: isLayoutMode,\n  isPreviewMode: isPreviewMode,\n  isInsertMode: isInsertMode,\n  isResizeMode: isResizeMode\n});\n\nvar mapDispatchToProps = function (dispatch, _a) {\n  var id = _a.id;\n  return bindActionCreators({\n    updateCellContent: updateCellContent(id)\n  }, // tslint:disable-next-line:no-any\n  dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);","map":{"version":3,"sources":["../../../../src/components/Cell/Content/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { updateCellContent } from '../../../actions/cell';\nimport { connect } from '../../../reduxConnect';\nimport { isEditMode, isInsertMode, isLayoutMode, isPreviewMode, isResizeMode } from '../../../selector/display';\nimport scollIntoViewWithOffset from '../utils/scollIntoViewWithOffset';\n// TODO clean me up #157\nvar Content = /** @class */ (function (_super) {\n    __extends(Content, _super);\n    function Content() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onRef = function (ref) {\n            _this.ref = ref;\n        };\n        _this.onChange = function (state) {\n            _this.props.updateCellContent(state);\n        };\n        _this.remove = function () {\n            _this.props.removeCell();\n        };\n        _this.focus = function (args) {\n            _this.props.focusCell(args);\n        };\n        return _this;\n    }\n    Content.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n        var was = this.props.node.focused;\n        var _a = nextProps.node, is = _a.focused, focusSource = _a.focusSource;\n        var editable = nextProps.editable, id = nextProps.id, _b = nextProps.node, _c = _b.content, _d = _c === void 0 ? {} : _c, _e = _d.plugin, _f = _e === void 0 ? {} : _e, _g = _f.handleFocus, handleFocus = _g === void 0 ? function () { return null; } : _g, _h = _f.handleBlur, handleBlur = _h === void 0 ? function () { return null; } : _h, _j = _f.name, name = _j === void 0 ? 'N/A' : _j, _k = _f.version, version = _k === void 0 ? 'N/A' : _k, _l = _d.state, state = _l === void 0 ? {} : _l, focused = _b.focused;\n        // FIXME this is really shitty because it will break when the state changes before the blur comes through, see #157\n        // tslint:disable-next-line:no-any\n        var pass = {\n            editable: editable,\n            id: id,\n            state: state,\n            focused: this.props.isEditMode && focused,\n            readOnly: !isEditMode,\n            onChange: this.props.updateCellContent,\n            name: name,\n            version: version,\n            isEditMode: nextProps.isEditMode,\n            isResizeMode: nextProps.isResizeMode,\n            isPreviewMode: nextProps.isPreviewMode,\n            isInsertMode: nextProps.isInsertMode,\n            isLayoutMode: nextProps.isLayoutMode,\n            remove: nextProps.removeCell,\n        };\n        // Basically we check if the focus state changed and if yes, we execute the callback handler from the plugin, that\n        // can set some side effects.\n        if (!was && is) {\n            // We need this because otherwise we lose hotkey focus on elements like spoilers.\n            // This could probably be solved in an easier way by listening to window.document?\n            handleFocus(pass, focusSource, this.ref);\n            // scroll to the plugin\n            if (this.ref) {\n                scollIntoViewWithOffset(this.ref, 100);\n            }\n        }\n        else if (was && !is) {\n            handleBlur(pass);\n        }\n    };\n    Content.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, editable = _a.editable, id = _a.id, _b = _a.node, _c = _b.content, _d = _c === void 0 ? {} : _c, _e = _d.plugin, _f = _e === void 0 ? {} : _e, _g = _f.Component, Component = _g === void 0 ? function () { return null; } : _g, _h = _f.name, name = _h === void 0 ? 'N/A' : _h, _j = _f.version, version = _j === void 0 ? 'N/A' : _j, _k = _f.text, text = _k === void 0 ? 'unnamed plugin' : _k, _l = _d.state, state = _l === void 0 ? {} : _l, focused = _b.focused;\n        var blurCell = this.props.blurCell;\n        var focusProps;\n        if (!this.props.isPreviewMode) {\n            focusProps = {\n                onMouseDown: function () {\n                    if (!focused) {\n                        _this.focus({ source: 'onMouseDown' });\n                    }\n                    return true;\n                },\n            };\n        }\n        return (React.createElement(\"div\", __assign({}, focusProps, { tabIndex: \"-1\", style: { outline: 'none' }, ref: this.onRef, className: \"ory-cell-inner ory-cell-leaf\" }),\n            React.createElement(Component, { editable: editable, id: id, state: state, focused: Boolean(this.props.isEditMode && focused), name: name, text: text, version: version, readOnly: !this.props.isEditMode, onChange: this.onChange, focus: this.focus, blur: blurCell, isInsertMode: this.props.isInsertMode, isResizeMode: this.props.isResizeMode, isPreviewMode: this.props.isPreviewMode, isEditMode: this.props.isEditMode, isLayoutMode: this.props.isLayoutMode, remove: this.remove })));\n    };\n    return Content;\n}(React.PureComponent));\nvar mapStateToProps = createStructuredSelector({\n    isEditMode: isEditMode,\n    isLayoutMode: isLayoutMode,\n    isPreviewMode: isPreviewMode,\n    isInsertMode: isInsertMode,\n    isResizeMode: isResizeMode,\n});\nvar mapDispatchToProps = function (dispatch, _a) {\n    var id = _a.id;\n    return bindActionCreators({\n        updateCellContent: updateCellContent(id),\n    }, \n    // tslint:disable-next-line:no-any\n    dispatch);\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}